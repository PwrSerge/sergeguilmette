@import url(http://fonts.googleapis.com/css?family=Kavoon|Wendy+One|Montserrat);

.nav-main-item, .nav-social-item, .header-title, .header-logo {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* ==========================================================================
   BASE
   Plain semantic HTML
   ========================================================================== */
html {
  font-size: 100%;
  line-height: 1.625em;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  z-index: 0;
  margin: 0;
  padding: 0;
  background: #f8f7f2;
  background-size: cover;
}

article {
  line-height: 1.5em;
}

h1 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 2.44141rem;
  line-height: 3.25rem;
  font-weight: 900;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 0;
  color: #3e225b;
}

h2 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.95313rem;
  line-height: 2.4375rem;
  font-weight: 700;
  border-bottom-width: 0.0625rem;
  border-bottom-style: solid;
  padding-bottom: 0.75rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #3e225b;
}

h3 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.5625rem;
  line-height: 1.625rem;
  font-weight: 400;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #8cc63e;
}

h4 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.25rem;
  line-height: 1.625rem;
  font-weight: 400;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

h5 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1rem;
  line-height: 1.625rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

p {
  font-size: 1.25rem;
  line-height: 1.625rem;
  margin-bottom: 1.625rem;
  word-break: break-word;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

small {
  font-size: 0.8rem;
  line-height: 1.21875rem;
}

a {
  text-decoration: none;
  color: inherit;
}

label {
  display: block;
  margin-bottom: 10px;
}

table {
  max-width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  background-color: transparent;
}

img,
object,
embed {
  max-width: 100%;
}

/* ==========================================================================
   TYPOGRAPHY
   ========================================================================== */
.headline {
  line-height: 1.2;
  margin-top: 0;
}

.txt-left {
  text-align: left;
}

.txt-right {
  text-align: right;
}

.txt-center {
  text-align: center;
}

/* ==========================================================================
   MODAL
   ========================================================================== */
.modal-overlay {
  -moz-transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  -o-transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  -webkit-transition: opacity 0.25s ease, visibility 0.35s linear;
  -webkit-transition-delay: 0s, 0s;
  transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  background-color: #fff;
  position: absolute;
  top: 0;
  margin: auto;
  opacity: 0;
  visibility: hidden;
  z-index: 40;
}

.modal-overlay.state-show {
  transition-delay: 0s;
  transition-duration: 0.2s, 0s;
  opacity: 0.7;
  visibility: visible;
}

.modal-frame {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  position: absolute;
  top: 2em;
  z-index: 50;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  text-align: center;
  visibility: hidden;
}

.modal-frame.state-appear {
  visibility: visible;
}

.modal-frame.state-appear .modal-inset {
  -webkit-animation: modalComeIn 0.25s ease;
  animation: modalComeIn 0.25s ease;
  visibility: visible;
}

.modal-frame.state-appear .modal-body {
  -webkit-transform: translateY(0) scale(1, 1);
  transform: translateY(0) scale(1, 1);
  opacity: 1;
}

.modal-frame.state-leave {
  visibility: visible;
}

.modal-frame.state-leave .modal-inset {
  -webkit-animation: modalHeadOut 0.35s ease 0.1s;
  animation: modalHeadOut 0.35s ease 0.1s;
  visibility: visible;
}

.modal-frame.state-leave .modal-body {
  transition-delay: 0s;
  transition-duration: 0.35s;
  transition-timing-function: ease;
  -webkit-transform: translateY(25px);
  transform: translateY(25px);
  opacity: 0;
}

@-moz-document url-prefix() {
  .modal-frame {
    height: calc(100% - 55px);
  }
}

.modal {
  display: block;
  vertical-align: middle;
  text-align: center;
}

.modal-inset {
  box-shadow: 2px 2px 8px 1px rgba(0, 0, 0, 0.2);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  position: relative;
  padding: 60px;
  background-color: #fff;
  min-width: 320px;
  min-height: 126px;
  margin: auto;
  visibility: hidden;
}

.modal-inset .close {
  display: block;
  cursor: pointer;
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 10px;
  opacity: 0.4;
}

.modal-inset .close:hover {
  opacity: 1;
}

.modal-body {
  -webkit-transform: translateY(0) scale(0.8, 0.8);
  transform: translateY(0) scale(0.8, 0.8);
  transition-property: opacity, -webkit-transform;
  transition-property: opacity, transform;
  transition-property: opacity, transform, -webkit-transform;
  transition-duration: 0.25s;
  transition-delay: 0.1s;
  margin: auto;
  opacity: 0;
}

.modal-body h3 {
  font-weight: 700;
  padding-bottom: 22px;
  display: block;
  text-align: center;
}

@-webkit-keyframes modalComeIn {
  0% {
    -webkit-transform: scale(0.8, 0.8);
    transform: scale(0.8, 0.8);
    visibility: hidden;
    opacity: 0;
  }

  65.5% {
    -webkit-transform: scale(1.03, 1.03);
    transform: scale(1.03, 1.03);
  }

  100% {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    visibility: visible;
    opacity: 1;
  }
}

@keyframes modalComeIn {
  0% {
    -webkit-transform: scale(0.8, 0.8);
    transform: scale(0.8, 0.8);
    visibility: hidden;
    opacity: 0;
  }

  65.5% {
    -webkit-transform: scale(1.03, 1.03);
    transform: scale(1.03, 1.03);
  }

  100% {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    visibility: visible;
    opacity: 1;
  }
}

@-webkit-keyframes modalHeadOut {
  0% {
    -webkit-transform: translateY(0) scale(1, 1);
    transform: translateY(0) scale(1, 1);
    visibility: visible;
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(35px) scale(0.97, 0.97);
    transform: translateY(35px) scale(0.97, 0.97);
    visibility: hidden;
    opacity: 0;
  }
}

@keyframes modalHeadOut {
  0% {
    -webkit-transform: translateY(0) scale(1, 1);
    transform: translateY(0) scale(1, 1);
    visibility: visible;
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(35px) scale(0.97, 0.97);
    transform: translateY(35px) scale(0.97, 0.97);
    visibility: hidden;
    opacity: 0;
  }
}
/* ==========================================================================
   FORMS
   ========================================================================== */
label {
  font-size: 1.25rem;
  line-height: 1.625rem;
  font-weight: 700;
  color: #3e225b;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 1em 0;
}

input,
textarea {
  font-size: 1.25rem;
  line-height: 1.625rem;
  width: 100%;
  color: #2c3643;
}

/*
    Basic form layouts
   ========================================================================== */
.field-group {
  font-size: 1rem;
  line-height: 1.625rem;
  margin-bottom: 1em;
}

.field-label {
  display: block;
}

.field-instructions {
  font-size: 0.8rem;
  line-height: 1.21875rem;
  float: none;
  clear: both;
  color: #99a9b3;
}

.field-instructions a {
  color: #99a9b3;
  text-decoration: underline;
}

/* ==========================================================================
   BUTTONS
   ========================================================================== */
button {
  border: 0;
}

.btn {
  font-size: 1rem;
  line-height: 1.625rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
  display: inline-block;
  margin: 0;
  padding: 5px 10px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;
  color: #fff;
  border: 0;
  border-radius: 5px;
  background: #3e225b;
}

.btn:hover {
  background: #8cc63e;
}

.btn:focus, .btn:active {
  background: #cff898;
}

.btn:disabled, .btn.is-disabled {
  cursor: default;
  color: #fff;
  background: #3b444f;
}

.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.btn-full {
  display: block;
  width: 100%;
}

.btn-medium {
  font-size: 1.25rem;
  line-height: 1.625rem;
}

.btn-large {
  font-size: 1.5625rem;
  line-height: 1.625rem;
}

.btn-brand {
  color: #fff;
  background: #206fac;
}

.btn-brand:hover {
  background: #1d508d;
}

.btn-highlight {
  color: #3b444f;
  background: #feef6d;
}

.btn-highlight:hover {
  background: #ffc83c;
}

.btn-neutral {
  color: #2c3643;
  background: #99a9b3;
}

.btn-neutral:hover {
  background: #dbe6ec;
}

/* ==========================================================================
   MEDIA
   ========================================================================== */
/**
 * Retina.
 * @reference http://www.brettjankord.com/2012/11/28/cross-browser-retinahigh-resolution-media-queries/
 */
/* 1.25 dpr */
/* Retina-specific stuff here */
/* 1.3 dpr */
/* Retina-specific stuff here */
/* 1.5 dpr */
/* Retina-specific stuff here */
/*2.0 dpr */
/* Retina-specific stuff here */
/* Ported from @stubbornella */
.media {
  overflow: hidden;
}

.media-ext {
  float: right;
}

.media-obj {
  float: left;
}

.media-obj img {
  display: block;
}

.media-bd {
  overflow: hidden;
}

/* Flexible media styles  (videos, ifram, object) */
/*! suit-flex-embed v1.4.0 | MIT License | github.com/suitcss */
.flexembed {
  display: block;
  overflow: hidden;
  position: relative;
}

.flexembed:before {
  content: '';
  display: block;
  width: 100%;
}

.flexembed-3by1:before {
  padding-bottom: 33.33333%;
}

.flexembed-2by1:before {
  padding-bottom: 50%;
}

.flexembed-16by9:before {
  padding-bottom: 56.25%;
}

.flexembed-4by3:before {
  padding-bottom: 75%;
}

.coverimage {
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: cover;
  margin: 0 auto 1em;
  max-height: 600px;
  max-width: 600px;
}

.flex-container-centered {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-it {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.flex-row {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flex-col {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flex-align-between {
  -webkit-align-content: space-between;
  -ms-flex-line-pack: justify;
  align-content: space-between;
}

.flex-align-center {
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.flex-align-start {
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-align-item-start {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.flex-align-item-center {
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}

.flex-start-all {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-align-item-stretch {
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.flex-justify-between {
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flex-justify-center {
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-justify-start {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.flex-justify-end {
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.flex-wrap {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flex-item-auto {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/* ==========================================================================
   IMAGES
   ========================================================================== */
.cover {
  background-size: cover;
}

.contain {
  background-size: contain;
}

.ui-img,
.no-bleed:after {
  background-image: url("../image//sprites/sprite.svg");
  background-repeat: no-repeat;
}

.no-svg .ui-img, .no-svg
  .no-bleed:after {
  background-image: url("../image//ui-separate-std-sprite.png");
}

.no-bleed {
  position: relative;
}

.no-bleed:after {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 260px;
  height: 380px;
  content: ' ';
  background-position: 0 0;
  background-size: 380px;
}

/*
   Utiliy class for SVG
   ========================================================================== */
.my-svg-container {
  position: relative;
  width: 10%;
  height: 0;
  padding-top: 10%;
}

.my-svg {
  position: absolute;
  top: 0;
  left: 0;
}

svg {
  fill: currentColor;
}

.hex1 {
  width: 3em;
  height: 3em;
  stroke: #8cc63e;
  fill: #8cc63e;
  stroke-width: 25;
  stroke-linejoin: round;
  stroke-miterlimit: 50;
}

.icon {
  width: 1em;
  height: 1em;
}

.icon-small {
  width: 0.5em;
  height: 0.5em;
}

.icon-big {
  width: 1.5em;
  height: 1.5em;
}

.icon-primary {
  color: #8cc63e;
}

/* ==========================================================================
   GRID
   ========================================================================== */
/*
   Small - Mobile first approach
   ========================================================================== */
header {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

.header-wrapper {
  width: 75%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
  margin-left: 9.16667%;
}

.nav-toggle {
  width: 16.66667%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

.nav-main,
.footer-main {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

main {
  width: 83.33333%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
  margin-right: 9.16667%;
  margin-left: 9.16667%;
}

footer {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

/*
   Medium
   ========================================================================== */
@media (min-width: 43.75em) {
  .header-wrapper {
    width: 25%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-left: 8.33333%;
  }

  .nav-main {
    width: 58.33333%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-right: 8.33333%;
  }

  main {
    width: 66.66667%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-right: 17.5%;
    margin-left: 17.5%;
  }
}
/*
   large
   ========================================================================== */
@media (min-width: 78.125em) {
  .header-wrapper {
    width: 25%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-left: 8.33333%;
  }

  .nav-main {
    width: 58.33333%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 8.33333%;
  }

  main {
    width: 50%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 25%;
    margin-left: 25%;
  }

  .footer-main {
    width: 58.33333%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 20.83333%;
    margin-left: 20.83333%;
  }
}
/* ==========================================================================
   NAVIGATION
   ========================================================================== */
.inner-wrapper {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.inner-wrapper.is-open {
  -webkit-transform: translate3d(0, 18em, 0);
  transform: translate3d(0, 18em, 0);
}

.nav-toggle {
  color: #9362c4;
  z-index: 4000;
  display: inline-block;
  float: right;
  height: 6em;
  padding-top: 2em;
  cursor: pointer;
  background-color: inherit;
}

@media (min-width: 43.75em) {
  .nav-toggle {
    display: none;
  }
}

.nav-main {
  margin: 0;
  padding: 0;
  -webkit-transform: translate3d(0, -18em, 0);
  transform: translate3d(0, -18em, 0);
  z-index: 4000;
}

@media (min-width: 43.75em) {
  .nav-main {
    -webkit-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
  }
}

.nav-main.is-open {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
}

.nav-main.nav-activated,
.inner-wrapper.nav-activated {
  transition: -webkit-transform 0.4s ease;
  transition: transform 0.4s ease;
  transition: transform 0.4s ease, -webkit-transform 0.4s ease;
}

.nav-main-list {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden;
  color: #fff;
}

@media (min-width: 43.75em) {
  .nav-main-list {
    display: inline-block;
    vertical-align: middle;
    float: right;
    height: 6em;
    color: #9362c4;
  }
}

.nav-main-item {
  font-size: 1rem;
  line-height: 1.625rem;
  padding: 1em;
  text-align: center;
  background-color: #3e225b;
}

@media (min-width: 43.75em) {
  .nav-main-item {
    display: inline-block;
    padding: 0.5em;
    background-color: #1b1b1b;
    position: relative;
    transition: color 0.5s;
  }

  .nav-main-item:hover {
    color: #8cc63e;
  }

  .nav-main-item:after {
    display: block;
    position: absolute;
    left: 0;
    bottom: 25%;
    width: 0;
    height: 1px;
    background-color: #8cc63e;
    content: '';
    transition: width 0.5s;
  }

  .nav-main-item:hover:after {
    width: 100%;
  }
}

.nav-social-list {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden;
  color: #fff;
  content: none;
}

@media (min-width: 43.75em) {
  .nav-social-list {
    display: inline-block;
    vertical-align: middle;
    float: right;
    height: 6em;
    color: #9362c4;
  }
}

.nav-social-item {
  content: none;
}

@media (min-width: 43.75em) {
  .nav-social-item {
    display: inline-block;
    padding: 0.5em;
    background-color: #1b1b1b;
    position: relative;
    transition: color 0.5s;
  }

  .nav-social-item:hover {
    color: #8cc63e;
  }
}

/*
   Flex Navigation
   ========================================================================== */
.flex-nav {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.flex-nav-item, .flex-nav-item--search {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 5px 10px;
  border-left: 1px solid #3b444f;
  background-color: #99a9b3;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-nav-item:hover {
  background-color: #140b1d;
}

.flex-nav-item--search {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.flex-nav-item--search label {
  display: block;
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
}

.flex-nav-item--search input {
  box-sizing: border-box;
  display: block;
  width: 100%;
}

/* ==========================================================================
   FOOTER
   ========================================================================== */
footer {
  background: #1b1b1b;
}

.footer-main {
  position: relative;
  overflow: hidden;
  padding: 1em;
}

/* ==========================================================================
   HEADER
   ========================================================================== */
.header-container {
  margin: 0;
  padding: 0;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  top: 0;
  left: 0;
  height: 6em;
  background-color: #1b1b1b;
}

.header-container-fixed {
  position: fixed;
  width: 100%;
}

.header-wrapper {
  position: relative;
  height: 6em;
  background-color: inherit;
  z-index: 6000;
}

.header-title {
  font-size: 1.5625rem;
  line-height: 1.625rem;
  color: #f8f7f2;
}

@media (min-width: 78.125em) {
  .header-title {
    font-size: 1.95313rem;
    line-height: 2.4375rem;
  }
}

.header-logo {
  float: left;
  width: 3em;
  height: 3em;
  fill: #9362c4;
}

@media (min-width: 78.125em) {
  .header-logo {
    width: 4em;
    height: 4em;
  }
}

/* ==========================================================================
   SIDEBAR
   ========================================================================== */
/* ==========================================================================
   HOME
   ========================================================================== */



/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInV0aWxzL21peGlucy5zY3NzIiwidXRpbHMvcGxhY2Vob2xkZXJzLnNjc3MiLCJtYWluLmNzcyIsIkM6L3Rvb2xzL3J1YnkyMS9saWIvcnVieS9nZW1zLzIuMS4wL2dlbXMvY29tcGFzcy1jb3JlLTEuMS4wLmFscGhhLjMvc3R5bGVzaGVldHMvY29tcGFzcy90eXBvZ3JhcGh5L192ZXJ0aWNhbF9yaHl0aG0uc2NzcyIsIkM6L3Rvb2xzL3J1YnkyMS9saWIvcnVieS9nZW1zLzIuMS4wL2dlbXMvY29tcGFzcy1jb3JlLTEuMS4wLmFscGhhLjMvc3R5bGVzaGVldHMvY29tcGFzcy90eXBvZ3JhcGh5L191bml0cy5zY3NzIiwiYmFzZS9iYXNlLnNjc3MiLCJDOi90b29scy9ydWJ5MjEvbGliL3J1YnkvZ2Vtcy8yLjEuMC9nZW1zL2NvbXBhc3MtY29yZS0xLjEuMC5hbHBoYS4zL3N0eWxlc2hlZXRzL2NvbXBhc3MvX3N1cHBvcnQuc2NzcyIsIkM6L3Rvb2xzL3J1YnkyMS9saWIvcnVieS9nZW1zLzIuMS4wL2dlbXMvY29tcGFzcy1jb3JlLTEuMS4wLmFscGhhLjMvc3R5bGVzaGVldHMvY29tcGFzcy9jc3MzL19ib3gtc2l6aW5nLnNjc3MiLCJ1dGlscy92YXJzLnNjc3MiLCJDOi90b29scy9ydWJ5MjEvbGliL3J1YnkvZ2Vtcy8yLjEuMC9nZW1zL2NvbXBhc3MtY29yZS0xLjEuMC5hbHBoYS4zL3N0eWxlc2hlZXRzL2NvbXBhc3MvY3NzMy9faHlwaGVuYXRpb24uc2NzcyIsImJhc2UvdHlwb2dyYXBoeS5zY3NzIiwiY29tcG9uZW50cy9tb2RhbC5zY3NzIiwiQzovdG9vbHMvcnVieTIxL2xpYi9ydWJ5L2dlbXMvMi4xLjAvZ2Vtcy9jb21wYXNzLWNvcmUtMS4xLjAuYWxwaGEuMy9zdHlsZXNoZWV0cy9jb21wYXNzL2NzczMvX3RyYW5zaXRpb24uc2NzcyIsIkM6L3Rvb2xzL3J1YnkyMS9saWIvcnVieS9nZW1zLzIuMS4wL2dlbXMvY29tcGFzcy1jb3JlLTEuMS4wLmFscGhhLjMvc3R5bGVzaGVldHMvY29tcGFzcy9jc3MzL19mbGV4Ym94LnNjc3MiLCJDOi90b29scy9ydWJ5MjEvbGliL3J1YnkvZ2Vtcy8yLjEuMC9nZW1zL2NvbXBhc3MtY29yZS0xLjEuMC5hbHBoYS4zL3N0eWxlc2hlZXRzL2NvbXBhc3MvY3NzMy9fYW5pbWF0aW9uLnNjc3MiLCJDOi90b29scy9ydWJ5MjEvbGliL3J1YnkvZ2Vtcy8yLjEuMC9nZW1zL2NvbXBhc3MtY29yZS0xLjEuMC5hbHBoYS4zL3N0eWxlc2hlZXRzL2NvbXBhc3MvY3NzMy9fYm94LXNoYWRvdy5zY3NzIiwiY29tcG9uZW50cy9mb3Jtcy5zY3NzIiwiY29tcG9uZW50cy9idXR0b25zLnNjc3MiLCJjb21wb25lbnRzL21lZGlhLnNjc3MiLCJjb21wb25lbnRzL2ltYWdlcy5zY3NzIiwiQzovdG9vbHMvcnVieTIxL2xpYi9ydWJ5L2dlbXMvMi4xLjAvZ2Vtcy9jb21wYXNzLWNvcmUtMS4xLjAuYWxwaGEuMy9zdHlsZXNoZWV0cy9jb21wYXNzL2NzczMvX2JhY2tncm91bmQtc2l6ZS5zY3NzIiwibGF5b3V0L2dyaWQuc2NzcyIsIkM6L3Rvb2xzL3J1YnkyMS9saWIvcnVieS9nZW1zLzIuMS4wL2dlbXMvYnJlYWtwb2ludC0yLjUuMC9zdHlsZXNoZWV0cy9fYnJlYWtwb2ludC5zY3NzIiwiQzovdG9vbHMvcnVieTIxL2xpYi9ydWJ5L2dlbXMvMi4xLjAvZ2Vtcy9zdXN5LTIuMi42L3Nhc3Mvc3VzeS9sYW5ndWFnZS9zdXN5L19zcGFuLnNjc3MiLCJsYXlvdXQvbmF2aWdhdGlvbi5zY3NzIiwibGF5b3V0L2Zvb3Rlci5zY3NzIiwibGF5b3V0L2hlYWRlci5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXVGVSxnRkFBWTtBQ1J0QjtFQUNFLG1CQUFrQjtFQUNsQixTQUFRO0VBQ1Isb0NBQTJCO1VBQTNCLDRCQUEyQixFQUFBOztBQzVFN0I7OztnRkFHZ0Y7QUNnRzlFO0VBQ0UsZ0JBVDhEO0VBZTVELHFCQ2xDdUUsRUFB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QmhCekl5QixFQUFBOztBZ0I2STdCO0VsQndMRSxnQmtCdExlO0VsQnNMZixZa0J0TGU7TWxCc0xmLFFrQnRMZSxFQUFBO0VBRWY7SUFDRSxlQUFjO0lBQ2QsWUFBVztJQUNYLGlCQUFnQjtJQUNoQixlQUFjLEVBQUE7RUFHaEI7SWxCNktBLHVCQzFVK0I7SWlCK0o3QixlQUFjO0lBQ2QsWUFBVyxFQUFBOztBdEJvcEJmOztnRkFFZ0Y7QXVCcjBCaEY7RUFDRSxvQmpCcUNrQyxFQUFBOztBaUJsQ3BDO0VBQ0UsbUJBQWtCO0VBQ2xCLGlCQUFnQjtFQUNoQixhQUFZLEVBQUE7O0F2QnUwQmQ7O2dGQUVnRjtBd0JoMUJoRjtFQUNFLFVBQVM7RUFDVCxXQUFVO0VBQ1YsMEVsQndEeUU7RWtCdkR6RSxPQUFNO0VBQ04sUUFBTztFQUNQLFlBQVc7RUFDWCwwQmxCK0JrQyxFQUFBOztBa0J6QnBDO0VBQ0UsZ0JBQWU7RUFDZixZQUFXLEVBQUE7O0FBR2I7RUFDRSxtQkFBa0I7RUFLbEIsWUFBVztFQUNYLDBCQUF5QjtFQUN6QixjbEIrSm9FLEVBQUE7O0FrQjVKdEU7RXZCMkRJLHFCQUhrQztFQUdsQyxzQkFIa0M7RXVCakRwQyxlbEJDMkMsRUFBQTtFY29CekM7SUk1Qko7TXZCMkRJLHNCQUhrQztNQUdsQyx1QkFIa0MsRUFBQSxFQUFBOztBdUIxQ3RDO0VBRUUsWUFBVztFQUNYLFdBQVU7RUFDVixZQUFXO0VBQ1gsY2xCUm1DLEVBQUE7RWNpQmpDO0lJZEo7TUFRSSxXQUFVO01BQ1YsWUFBVyxFQUFBLEVBQUE7O0F4Qm0wQmY7O2dGQUVnRjtBQUNoRjs7Z0ZBRWdGIiwiZmlsZSI6Im1haW4ubWluLmNzcyIsInNvdXJjZXNDb250ZW50IjpbbnVsbCxudWxsLCJAaW1wb3J0IHVybChodHRwOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1LYXZvb258V2VuZHkrT25lfE1vbnRzZXJyYXQpO1xyXG4ubmF2LW1haW4taXRlbSwgLm5hdi1zb2NpYWwtaXRlbSwgLmhlYWRlci10aXRsZSwgLmhlYWRlci1sb2dvIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgdG9wOiA1MCU7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBCQVNFXHJcbiAgIFBsYWluIHNlbWFudGljIEhUTUxcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuaHRtbCB7XHJcbiAgZm9udC1zaXplOiAxMDAlO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjYyNWVtOyB9XHJcblxyXG4qLFxyXG4qOmFmdGVyLFxyXG4qOmJlZm9yZSB7XHJcbiAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIC13ZWJraXQtYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XHJcblxyXG5ib2R5IHtcclxuICBmb250LWZhbWlseTogXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gIHotaW5kZXg6IDA7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgYmFja2dyb3VuZDogI2Y4ZjdmMjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XHJcblxyXG5hcnRpY2xlIHtcclxuICBsaW5lLWhlaWdodDogMS41ZW07IH1cclxuXHJcbmgxIHtcclxuICBmb250LWZlYXR1cmUtc2V0dGluZ3M6IFwibGlnYVwiLCBcImRsaWdcIiwgXCJvbnVtXCI7XHJcbiAgZm9udC1zaXplOiAyLjQ0MTQxcmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAzLjI1cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgZm9udC1mYW1pbHk6IFwiTW9udHNlcnJhdFwiLCBcIkhlbHZldGljYSBOZXVlXCIsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIGNvbG9yOiAjM2UyMjViOyB9XHJcblxyXG5oMiB7XHJcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiwgXCJkbGlnXCIsIFwib251bVwiO1xyXG4gIGZvbnQtc2l6ZTogMS45NTMxM3JlbTtcclxuICBsaW5lLWhlaWdodDogMi40Mzc1cmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMC4wNjI1cmVtO1xyXG4gIGJvcmRlci1ib3R0b20tc3R5bGU6IHNvbGlkO1xyXG4gIHBhZGRpbmctYm90dG9tOiAwLjc1cmVtO1xyXG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiAjM2UyMjViOyB9XHJcblxyXG5oMyB7XHJcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiwgXCJkbGlnXCIsIFwib251bVwiO1xyXG4gIGZvbnQtc2l6ZTogMS41NjI1cmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjYyNXJlbTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gIGNvbG9yOiAjOGNjNjNlOyB9XHJcblxyXG5oNCB7XHJcbiAgZm9udC1mZWF0dXJlLXNldHRpbmdzOiBcImxpZ2FcIiwgXCJkbGlnXCIsIFwib251bVwiO1xyXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICBsaW5lLWhlaWdodDogMS42MjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjsgfVxyXG5cclxuaDUge1xyXG4gIGZvbnQtZmVhdHVyZS1zZXR0aW5nczogXCJsaWdhXCIsIFwiZGxpZ1wiLCBcIm9udW1cIjtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xyXG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmOyB9XHJcblxyXG5wIHtcclxuICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNjI1cmVtO1xyXG4gIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XHJcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xyXG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xyXG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICBoeXBoZW5zOiBhdXRvOyB9XHJcblxyXG5zbWFsbCB7XHJcbiAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjE4NzVyZW07IH1cclxuXHJcbmEge1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBjb2xvcjogaW5oZXJpdDsgfVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cclxuXHJcbnRhYmxlIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XHJcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxyXG5cclxuaW1nLFxyXG5vYmplY3QsXHJcbmVtYmVkIHtcclxuICBtYXgtd2lkdGg6IDEwMCU7IH1cclxuXHJcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIFRZUE9HUkFQSFlcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLmhlYWRsaW5lIHtcclxuICBsaW5lLWhlaWdodDogMS4yO1xyXG4gIG1hcmdpbi10b3A6IDA7IH1cclxuXHJcbi50eHQtbGVmdCB7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDsgfVxyXG5cclxuLnR4dC1yaWdodCB7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7IH1cclxuXHJcbi50eHQtY2VudGVyIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cclxuXHJcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIE1PREFMXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi5tb2RhbC1vdmVybGF5IHtcclxuICAtbW96LXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZSAwcywgdmlzaWJpbGl0eSAwLjM1cyBsaW5lYXI7XHJcbiAgLW8tdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlIDBzLCB2aXNpYmlsaXR5IDAuMzVzIGxpbmVhcjtcclxuICAtd2Via2l0LXRyYW5zaXRpb246IG9wYWNpdHkgMC4yNXMgZWFzZSwgdmlzaWJpbGl0eSAwLjM1cyBsaW5lYXI7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5OiAwcywgMHM7XHJcbiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjI1cyBlYXNlIDBzLCB2aXNpYmlsaXR5IDAuMzVzIGxpbmVhcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIG9wYWNpdHk6IDA7XHJcbiAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gIHotaW5kZXg6IDQwOyB9XHJcbiAgLm1vZGFsLW92ZXJsYXkuc3RhdGUtc2hvdyB7XHJcbiAgICAtbW96LXRyYW5zaXRpb24tZGVsYXk6IDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDBzO1xyXG4gICAgdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbiAgICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IDAuMnMsIDBzO1xyXG4gICAgLW8tdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4ycywgMHM7XHJcbiAgICAtd2Via2l0LXRyYW5zaXRpb24tZHVyYXRpb246IDAuMnMsIDBzO1xyXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4ycywgMHM7XHJcbiAgICBvcGFjaXR5OiAwLjc7XHJcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XHJcblxyXG4ubW9kYWwtZnJhbWUge1xyXG4gIGRpc3BsYXk6IC13ZWJraXQtZmxleDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIC13ZWJraXQtYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAyZW07XHJcbiAgei1pbmRleDogNTA7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxyXG4gIC5tb2RhbC1mcmFtZS5zdGF0ZS1hcHBlYXIge1xyXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxyXG4gICAgLm1vZGFsLWZyYW1lLnN0YXRlLWFwcGVhciAubW9kYWwtaW5zZXQge1xyXG4gICAgICAtbW96LWFuaW1hdGlvbjogbW9kYWxDb21lSW4gMC4yNXMgZWFzZTtcclxuICAgICAgLXdlYmtpdC1hbmltYXRpb246IG1vZGFsQ29tZUluIDAuMjVzIGVhc2U7XHJcbiAgICAgIGFuaW1hdGlvbjogbW9kYWxDb21lSW4gMC4yNXMgZWFzZTtcclxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxyXG4gICAgLm1vZGFsLWZyYW1lLnN0YXRlLWFwcGVhciAubW9kYWwtYm9keSB7XHJcbiAgICAgIC1tb3otdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEsIDEpO1xyXG4gICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEsIDEpO1xyXG4gICAgICAtd2Via2l0LXRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKSBzY2FsZSgxLCAxKTtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEsIDEpO1xyXG4gICAgICBvcGFjaXR5OiAxOyB9XHJcbiAgLm1vZGFsLWZyYW1lLnN0YXRlLWxlYXZlIHtcclxuICAgIHZpc2liaWxpdHk6IHZpc2libGU7IH1cclxuICAgIC5tb2RhbC1mcmFtZS5zdGF0ZS1sZWF2ZSAubW9kYWwtaW5zZXQge1xyXG4gICAgICAtbW96LWFuaW1hdGlvbjogbW9kYWxIZWFkT3V0IDAuMzVzIGVhc2UgMC4xcztcclxuICAgICAgLXdlYmtpdC1hbmltYXRpb246IG1vZGFsSGVhZE91dCAwLjM1cyBlYXNlIDAuMXM7XHJcbiAgICAgIGFuaW1hdGlvbjogbW9kYWxIZWFkT3V0IDAuMzVzIGVhc2UgMC4xcztcclxuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxyXG4gICAgLm1vZGFsLWZyYW1lLnN0YXRlLWxlYXZlIC5tb2RhbC1ib2R5IHtcclxuICAgICAgLW1vei10cmFuc2l0aW9uLWRlbGF5OiAwcztcclxuICAgICAgLW8tdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbiAgICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTogMHM7XHJcbiAgICAgIHRyYW5zaXRpb24tZGVsYXk6IDBzO1xyXG4gICAgICAtbW96LXRyYW5zaXRpb24tZHVyYXRpb246IDAuMzVzO1xyXG4gICAgICAtby10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjM1cztcclxuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjM1cztcclxuICAgICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4zNXM7XHJcbiAgICAgIC1tb3otdHJhbnNpdGlvbi10aW1pbmctZnVuY3Rpb246IGVhc2U7XHJcbiAgICAgIC1vLXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xyXG4gICAgICAtd2Via2l0LXRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlO1xyXG4gICAgICB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTtcclxuICAgICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjVweCk7XHJcbiAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjVweCk7XHJcbiAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDI1cHgpO1xyXG4gICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMjVweCk7XHJcbiAgICAgIG9wYWNpdHk6IDA7IH1cclxuXHJcbkAtbW96LWRvY3VtZW50IHVybC1wcmVmaXgoKSB7XHJcbiAgLm1vZGFsLWZyYW1lIHtcclxuICAgIGhlaWdodDogY2FsYygxMDAlIC0gNTVweCk7IH0gfVxyXG4ubW9kYWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XHJcblxyXG4ubW9kYWwtaW5zZXQge1xyXG4gIC1tb3otYm94LXNoYWRvdzogMnB4IDJweCA4cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAtd2Via2l0LWJveC1zaGFkb3c6IDJweCAycHggOHB4IDFweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgYm94LXNoYWRvdzogMnB4IDJweCA4cHggMXB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAtbW96LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAtd2Via2l0LWJhY2tmYWNlLXZpc2liaWxpdHk6IGhpZGRlbjtcclxuICBiYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xyXG4gIC1tb3otdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcclxuICAtd2Via2l0LXRyYW5zZm9ybS1zdHlsZTogcHJlc2VydmUtM2Q7XHJcbiAgdHJhbnNmb3JtLXN0eWxlOiBwcmVzZXJ2ZS0zZDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgcGFkZGluZzogNjBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xyXG4gIG1pbi13aWR0aDogMzIwcHg7XHJcbiAgbWluLWhlaWdodDogMTI2cHg7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIHZpc2liaWxpdHk6IGhpZGRlbjsgfVxyXG4gIC5tb2RhbC1pbnNldCAuY2xvc2Uge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDEwcHg7XHJcbiAgICByaWdodDogMTBweDtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBvcGFjaXR5OiAwLjQ7IH1cclxuICAgIC5tb2RhbC1pbnNldCAuY2xvc2U6aG92ZXIge1xyXG4gICAgICBvcGFjaXR5OiAxOyB9XHJcblxyXG4ubW9kYWwtYm9keSB7XHJcbiAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMC44LCAwLjgpO1xyXG4gIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMC44LCAwLjgpO1xyXG4gIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDAuOCwgMC44KTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMC44LCAwLjgpO1xyXG4gIC1tb3otdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgLW1vei10cmFuc2Zvcm07XHJcbiAgLW8tdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgLW8tdHJhbnNmb3JtO1xyXG4gIC13ZWJraXQtdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgLXdlYmtpdC10cmFuc2Zvcm07XHJcbiAgdHJhbnNpdGlvbi1wcm9wZXJ0eTogb3BhY2l0eSwgdHJhbnNmb3JtO1xyXG4gIC1tb3otdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XHJcbiAgLW8tdHJhbnNpdGlvbi1kdXJhdGlvbjogMC4yNXM7XHJcbiAgLXdlYmtpdC10cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjI1cztcclxuICB0cmFuc2l0aW9uLWR1cmF0aW9uOiAwLjI1cztcclxuICAtbW96LXRyYW5zaXRpb24tZGVsYXk6IDAuMXM7XHJcbiAgLW8tdHJhbnNpdGlvbi1kZWxheTogMC4xcztcclxuICAtd2Via2l0LXRyYW5zaXRpb24tZGVsYXk6IDAuMXM7XHJcbiAgdHJhbnNpdGlvbi1kZWxheTogMC4xcztcclxuICBtYXJnaW46IGF1dG87XHJcbiAgb3BhY2l0eTogMDsgfVxyXG4gIC5tb2RhbC1ib2R5IGgzIHtcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgICBwYWRkaW5nLWJvdHRvbTogMjJweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyOyB9XHJcblxyXG5Aa2V5ZnJhbWVzIG1vZGFsQ29tZUluIHtcclxuICAwJSB7XHJcbiAgICAtbW96LXRyYW5zZm9ybTogc2NhbGUoMC44LCAwLjgpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMC44LCAwLjgpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDAuOCwgMC44KTtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMC44LCAwLjgpO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgb3BhY2l0eTogMDsgfVxyXG4gIDY1LjUlIHtcclxuICAgIC1tb3otdHJhbnNmb3JtOiBzY2FsZSgxLjAzLCAxLjAzKTtcclxuICAgIC1tcy10cmFuc2Zvcm06IHNjYWxlKDEuMDMsIDEuMDMpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMDMsIDEuMDMpO1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAzLCAxLjAzKTsgfVxyXG4gIDEwMCUge1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xyXG4gICAgLW1zLXRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogc2NhbGUoMSwgMSk7XHJcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEsIDEpO1xyXG4gICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgIG9wYWNpdHk6IDE7IH0gfVxyXG5Aa2V5ZnJhbWVzIG1vZGFsSGVhZE91dCB7XHJcbiAgMCUge1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMSwgMSk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApIHNjYWxlKDEsIDEpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMSwgMSk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMCkgc2NhbGUoMSwgMSk7XHJcbiAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgb3BhY2l0eTogMTsgfVxyXG4gIDEwMCUge1xyXG4gICAgLW1vei10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzVweCkgc2NhbGUoMC45NywgMC45Nyk7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDM1cHgpIHNjYWxlKDAuOTcsIDAuOTcpO1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzVweCkgc2NhbGUoMC45NywgMC45Nyk7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzVweCkgc2NhbGUoMC45NywgMC45Nyk7XHJcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICBvcGFjaXR5OiAwOyB9IH1cclxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgRk9STVNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxubGFiZWwge1xyXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICBsaW5lLWhlaWdodDogMS42MjVyZW07XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBjb2xvcjogIzNlMjI1YjtcclxuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBtYXJnaW46IDFlbSAwOyB9XHJcblxyXG5pbnB1dCxcclxudGV4dGFyZWEge1xyXG4gIGZvbnQtc2l6ZTogMS4yNXJlbTtcclxuICBsaW5lLWhlaWdodDogMS42MjVyZW07XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgY29sb3I6ICMyYzM2NDM7IH1cclxuXHJcbi8qXHJcbiAgICBCYXNpYyBmb3JtIGxheW91dHNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLmZpZWxkLWdyb3VwIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDFlbTsgfVxyXG5cclxuLmZpZWxkLWxhYmVsIHtcclxuICBkaXNwbGF5OiBibG9jazsgfVxyXG5cclxuLmZpZWxkLWluc3RydWN0aW9ucyB7XHJcbiAgZm9udC1zaXplOiAwLjhyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuMjE4NzVyZW07XHJcbiAgZmxvYXQ6IG5vbmU7XHJcbiAgY2xlYXI6IGJvdGg7XHJcbiAgY29sb3I6ICM5OWE5YjM7IH1cclxuICAuZmllbGQtaW5zdHJ1Y3Rpb25zIGEge1xyXG4gICAgY29sb3I6ICM5OWE5YjM7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxyXG5cclxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgQlVUVE9OU1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5idXR0b24ge1xyXG4gIGJvcmRlcjogMDsgfVxyXG5cclxuLmJ0biB7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjYyNXJlbTtcclxuICBmb250LWZhbWlseTogXCJNb250c2VycmF0XCIsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiA1cHggMTBweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgY29sb3I6ICNmZmY7XHJcbiAgYm9yZGVyOiAwO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBiYWNrZ3JvdW5kOiAjM2UyMjViOyB9XHJcbiAgLmJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOGNjNjNlOyB9XHJcbiAgLmJ0bjpmb2N1cywgLmJ0bjphY3RpdmUge1xyXG4gICAgYmFja2dyb3VuZDogI2NmZjg5ODsgfVxyXG4gIC5idG46ZGlzYWJsZWQsIC5idG4uaXMtZGlzYWJsZWQge1xyXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgY29sb3I6ICNmZmY7XHJcbiAgICBiYWNrZ3JvdW5kOiAjM2I0NDRmOyB9XHJcbiAgLmJ0bjo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG4gICAgYm9yZGVyOiAwOyB9XHJcbiAgLmJ0bi1mdWxsIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7IH1cclxuICAuYnRuLW1lZGl1bSB7XHJcbiAgICBmb250LXNpemU6IDEuMjVyZW07XHJcbiAgICBsaW5lLWhlaWdodDogMS42MjVyZW07IH1cclxuICAuYnRuLWxhcmdlIHtcclxuICAgIGZvbnQtc2l6ZTogMS41NjI1cmVtO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtOyB9XHJcblxyXG4uYnRuLWJyYW5kIHtcclxuICBjb2xvcjogI2ZmZjtcclxuICBiYWNrZ3JvdW5kOiAjMjA2ZmFjOyB9XHJcbiAgLmJ0bi1icmFuZDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMWQ1MDhkOyB9XHJcblxyXG4uYnRuLWhpZ2hsaWdodCB7XHJcbiAgY29sb3I6ICMzYjQ0NGY7XHJcbiAgYmFja2dyb3VuZDogI2ZlZWY2ZDsgfVxyXG4gIC5idG4taGlnaGxpZ2h0OmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICNmZmM4M2M7IH1cclxuXHJcbi5idG4tbmV1dHJhbCB7XHJcbiAgY29sb3I6ICMyYzM2NDM7XHJcbiAgYmFja2dyb3VuZDogIzk5YTliMzsgfVxyXG4gIC5idG4tbmV1dHJhbDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZGJlNmVjOyB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBNRURJQVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4vKipcclxuICogUmV0aW5hLlxyXG4gKiBAcmVmZXJlbmNlIGh0dHA6Ly93d3cuYnJldHRqYW5rb3JkLmNvbS8yMDEyLzExLzI4L2Nyb3NzLWJyb3dzZXItcmV0aW5haGlnaC1yZXNvbHV0aW9uLW1lZGlhLXF1ZXJpZXMvXHJcbiAqL1xyXG4vKiAxLjI1IGRwciAqL1xyXG4vKiBSZXRpbmEtc3BlY2lmaWMgc3R1ZmYgaGVyZSAqL1xyXG4vKiAxLjMgZHByICovXHJcbi8qIFJldGluYS1zcGVjaWZpYyBzdHVmZiBoZXJlICovXHJcbi8qIDEuNSBkcHIgKi9cclxuLyogUmV0aW5hLXNwZWNpZmljIHN0dWZmIGhlcmUgKi9cclxuLyoyLjAgZHByICovXHJcbi8qIFJldGluYS1zcGVjaWZpYyBzdHVmZiBoZXJlICovXHJcbi8qIFBvcnRlZCBmcm9tIEBzdHViYm9ybmVsbGEgKi9cclxuLm1lZGlhIHtcclxuICBvdmVyZmxvdzogaGlkZGVuOyB9XHJcbiAgLm1lZGlhLWV4dCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7IH1cclxuXHJcbi5tZWRpYS1vYmoge1xyXG4gIGZsb2F0OiBsZWZ0OyB9XHJcbiAgLm1lZGlhLW9iaiBpbWcge1xyXG4gICAgZGlzcGxheTogYmxvY2s7IH1cclxuXHJcbi5tZWRpYS1iZCB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxyXG5cclxuLyogRmxleGlibGUgbWVkaWEgc3R5bGVzICAodmlkZW9zLCBpZnJhbSwgb2JqZWN0KSAqL1xyXG4vKiEgc3VpdC1mbGV4LWVtYmVkIHYxLjQuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9zdWl0Y3NzICovXHJcbi5mbGV4ZW1iZWQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XHJcbiAgLmZsZXhlbWJlZDpiZWZvcmUge1xyXG4gICAgY29udGVudDogJyc7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHdpZHRoOiAxMDAlOyB9XHJcblxyXG4uZmxleGVtYmVkLTNieTE6YmVmb3JlIHtcclxuICBwYWRkaW5nLWJvdHRvbTogMzMuMzMzMzMlOyB9XHJcblxyXG4uZmxleGVtYmVkLTJieTE6YmVmb3JlIHtcclxuICBwYWRkaW5nLWJvdHRvbTogNTAlOyB9XHJcblxyXG4uZmxleGVtYmVkLTE2Ynk5OmJlZm9yZSB7XHJcbiAgcGFkZGluZy1ib3R0b206IDU2LjI1JTsgfVxyXG5cclxuLmZsZXhlbWJlZC00YnkzOmJlZm9yZSB7XHJcbiAgcGFkZGluZy1ib3R0b206IDc1JTsgfVxyXG5cclxuLmNvdmVyaW1hZ2Uge1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IDUwJTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgbWFyZ2luOiAwIGF1dG8gMWVtO1xyXG4gIG1heC1oZWlnaHQ6IDYwMHB4O1xyXG4gIG1heC13aWR0aDogNjAwcHg7IH1cclxuXHJcbi5mbGV4LWNvbnRhaW5lci1jZW50ZXJlZCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICB3aWR0aDogMTAwJTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XHJcblxyXG4uZmxleC1pdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IG5vd3JhcDsgfVxyXG5cclxuLmZsZXgtcm93IHtcclxuICBmbGV4LWRpcmVjdGlvbjogcm93OyB9XHJcblxyXG4uZmxleC1jb2wge1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cclxuXHJcbi5mbGV4LWFsaWduLWJldHdlZW4ge1xyXG4gIGFsaWduLWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IH1cclxuXHJcbi5mbGV4LWFsaWduLWNlbnRlciB7XHJcbiAgYWxpZ24tY29udGVudDogY2VudGVyOyB9XHJcblxyXG4uZmxleC1hbGlnbi1zdGFydCB7XHJcbiAgYWxpZ24tY29udGVudDogZmxleC1zdGFydDsgfVxyXG5cclxuLmZsZXgtYWxpZ24taXRlbS1zdGFydCB7XHJcbiAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7IH1cclxuXHJcbi5mbGV4LWFsaWduLWl0ZW0tY2VudGVyIHtcclxuICBhbGlnbi1pdGVtczogY2VudGVyOyB9XHJcblxyXG4uZmxleC1zdGFydC1hbGwge1xyXG4gIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0OyB9XHJcblxyXG4uZmxleC1hbGlnbi1pdGVtLXN0cmV0Y2gge1xyXG4gIGFsaWduLWl0ZW1zOiBzdHJldGNoOyB9XHJcblxyXG4uZmxleC1qdXN0aWZ5LWJldHdlZW4ge1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsgfVxyXG5cclxuLmZsZXgtanVzdGlmeS1jZW50ZXIge1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XHJcblxyXG4uZmxleC1qdXN0aWZ5LXN0YXJ0IHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtc3RhcnQ7IH1cclxuXHJcbi5mbGV4LWp1c3RpZnktZW5kIHtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kOyB9XHJcblxyXG4uZmxleC13cmFwIHtcclxuICBmbGV4LXdyYXA6IHdyYXA7IH1cclxuXHJcbi5mbGV4LWl0ZW0tYXV0byB7XHJcbiAgZmxleC1iYXNpczogYXV0bztcclxuICBmbGV4OiAxOyB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBJTUFHRVNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLmNvdmVyIHtcclxuICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgLW8tYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsgfVxyXG5cclxuLmNvbnRhaW4ge1xyXG4gIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG4gIC1vLWJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY29udGFpbjtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvbnRhaW47IH1cclxuXHJcbi51aS1pbWcsXHJcbi5uby1ibGVlZDphZnRlciB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiLi4vaW1hZ2UvL3Nwcml0ZXMvc3ByaXRlLnN2Z1wiKTtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0OyB9XHJcbiAgLm5vLXN2ZyAudWktaW1nLCAubm8tc3ZnXHJcbiAgLm5vLWJsZWVkOmFmdGVyIHtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIi4uL2ltYWdlLy91aS1zZXBhcmF0ZS1zdGQtc3ByaXRlLnBuZ1wiKTsgfVxyXG5cclxuLm5vLWJsZWVkIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cclxuICAubm8tYmxlZWQ6YWZ0ZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDI2MHB4O1xyXG4gICAgaGVpZ2h0OiAzODBweDtcclxuICAgIGNvbnRlbnQ6ICcgJztcclxuICAgIGJhY2tncm91bmQtcG9zaXRpb246IDAgMDtcclxuICAgIGJhY2tncm91bmQtc2l6ZTogMzgwcHg7IH1cclxuXHJcbi8qXHJcbiAgIFV0aWxpeSBjbGFzcyBmb3IgU1ZHXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi5teS1zdmctY29udGFpbmVyIHtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDEwJTtcclxuICBoZWlnaHQ6IDA7XHJcbiAgcGFkZGluZy10b3A6IDEwJTsgfVxyXG5cclxuLm15LXN2ZyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwOyB9XHJcblxyXG5zdmcge1xyXG4gIGZpbGw6IGN1cnJlbnRDb2xvcjsgfVxyXG5cclxuLmhleDEge1xyXG4gIHdpZHRoOiAzZW07XHJcbiAgaGVpZ2h0OiAzZW07XHJcbiAgc3Ryb2tlOiAjOGNjNjNlO1xyXG4gIGZpbGw6ICM4Y2M2M2U7XHJcbiAgc3Ryb2tlLXdpZHRoOiAyNTtcclxuICBzdHJva2UtbGluZWpvaW46IHJvdW5kO1xyXG4gIHN0cm9rZS1taXRlcmxpbWl0OiA1MDsgfVxyXG5cclxuLmljb24ge1xyXG4gIHdpZHRoOiAxZW07XHJcbiAgaGVpZ2h0OiAxZW07IH1cclxuICAuaWNvbi1zbWFsbCB7XHJcbiAgICB3aWR0aDogMC41ZW07XHJcbiAgICBoZWlnaHQ6IDAuNWVtOyB9XHJcbiAgLmljb24tYmlnIHtcclxuICAgIHdpZHRoOiAxLjVlbTtcclxuICAgIGhlaWdodDogMS41ZW07IH1cclxuICAuaWNvbi1wcmltYXJ5IHtcclxuICAgIGNvbG9yOiAjOGNjNjNlOyB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBHUklEXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi8qXHJcbiAgIFNtYWxsIC0gTW9iaWxlIGZpcnN0IGFwcHJvYWNoXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbmhlYWRlciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAwLjgzMzMzJTtcclxuICBwYWRkaW5nLXJpZ2h0OiAwLjgzMzMzJTsgfVxyXG5cclxuLmhlYWRlci13cmFwcGVyIHtcclxuICB3aWR0aDogNzUlO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHBhZGRpbmctbGVmdDogMC44MzMzMyU7XHJcbiAgcGFkZGluZy1yaWdodDogMC44MzMzMyU7XHJcbiAgbWFyZ2luLWxlZnQ6IDkuMTY2NjclOyB9XHJcblxyXG4ubmF2LXRvZ2dsZSB7XHJcbiAgd2lkdGg6IDE2LjY2NjY3JTtcclxuICBmbG9hdDogbGVmdDtcclxuICBwYWRkaW5nLWxlZnQ6IDAuODMzMzMlO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDAuODMzMzMlOyB9XHJcblxyXG4ubmF2LW1haW4sXHJcbi5mb290ZXItbWFpbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgcGFkZGluZy1sZWZ0OiAwLjgzMzMzJTtcclxuICBwYWRkaW5nLXJpZ2h0OiAwLjgzMzMzJTsgfVxyXG5cclxubWFpbiB7XHJcbiAgd2lkdGg6IDgzLjMzMzMzJTtcclxuICBmbG9hdDogbGVmdDtcclxuICBwYWRkaW5nLWxlZnQ6IDAuODMzMzMlO1xyXG4gIHBhZGRpbmctcmlnaHQ6IDAuODMzMzMlO1xyXG4gIG1hcmdpbi1yaWdodDogOS4xNjY2NyU7XHJcbiAgbWFyZ2luLWxlZnQ6IDkuMTY2NjclOyB9XHJcblxyXG5mb290ZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGZsb2F0OiBsZWZ0O1xyXG4gIHBhZGRpbmctbGVmdDogMC44MzMzMyU7XHJcbiAgcGFkZGluZy1yaWdodDogMC44MzMzMyU7IH1cclxuXHJcbi8qXHJcbiAgIE1lZGl1bVxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5AbWVkaWEgKG1pbi13aWR0aDogNDMuNzVlbSkge1xyXG4gIC5oZWFkZXItd3JhcHBlciB7XHJcbiAgICB3aWR0aDogMjUlO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDAuODMzMzMlO1xyXG4gICAgcGFkZGluZy1yaWdodDogMC44MzMzMyU7XHJcbiAgICBtYXJnaW4tbGVmdDogOC4zMzMzMyU7IH1cclxuXHJcbiAgLm5hdi1tYWluIHtcclxuICAgIHdpZHRoOiA1OC4zMzMzMyU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHBhZGRpbmctbGVmdDogMC44MzMzMyU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjgzMzMzJTtcclxuICAgIG1hcmdpbi1yaWdodDogOC4zMzMzMyU7IH1cclxuXHJcbiAgbWFpbiB7XHJcbiAgICB3aWR0aDogNjYuNjY2NjclO1xyXG4gICAgZmxvYXQ6IGxlZnQ7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDAuODMzMzMlO1xyXG4gICAgcGFkZGluZy1yaWdodDogMC44MzMzMyU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDE3LjUlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE3LjUlOyB9IH1cclxuLypcclxuICAgbGFyZ2VcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuQG1lZGlhIChtaW4td2lkdGg6IDc4LjEyNWVtKSB7XHJcbiAgLmhlYWRlci13cmFwcGVyIHtcclxuICAgIHdpZHRoOiAyNSU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHBhZGRpbmctbGVmdDogMC40MTY2NyU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjQxNjY3JTtcclxuICAgIG1hcmdpbi1sZWZ0OiA4LjMzMzMzJTsgfVxyXG5cclxuICAubmF2LW1haW4ge1xyXG4gICAgd2lkdGg6IDU4LjMzMzMzJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwLjQxNjY3JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDAuNDE2NjclO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiA4LjMzMzMzJTsgfVxyXG5cclxuICBtYWluIHtcclxuICAgIHdpZHRoOiA1MCU7XHJcbiAgICBmbG9hdDogbGVmdDtcclxuICAgIHBhZGRpbmctbGVmdDogMC40MTY2NyU7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAwLjQxNjY3JTtcclxuICAgIG1hcmdpbi1yaWdodDogMjUlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDI1JTsgfVxyXG5cclxuICAuZm9vdGVyLW1haW4ge1xyXG4gICAgd2lkdGg6IDU4LjMzMzMzJTtcclxuICAgIGZsb2F0OiBsZWZ0O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwLjQxNjY3JTtcclxuICAgIHBhZGRpbmctcmlnaHQ6IDAuNDE2NjclO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyMC44MzMzMyU7XHJcbiAgICBtYXJnaW4tbGVmdDogMjAuODMzMzMlOyB9IH1cclxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAgTkFWSUdBVElPTlxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4uaW5uZXItd3JhcHBlciB7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxyXG4gIC5pbm5lci13cmFwcGVyLmlzLW9wZW4ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAxOGVtLCAwKTsgfVxyXG5cclxuLm5hdi10b2dnbGUge1xyXG4gIGNvbG9yOiAjOTM2MmM0O1xyXG4gIHotaW5kZXg6IDQwMDA7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gIGZsb2F0OiByaWdodDtcclxuICBoZWlnaHQ6IDZlbTtcclxuICBwYWRkaW5nLXRvcDogMmVtO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBpbmhlcml0OyB9XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDQzLjc1ZW0pIHtcclxuICAgIC5uYXYtdG9nZ2xlIHtcclxuICAgICAgZGlzcGxheTogbm9uZTsgfSB9XHJcblxyXG4ubmF2LW1haW4ge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTE4ZW0sIDApO1xyXG4gIHotaW5kZXg6IDQwMDA7IH1cclxuICBAbWVkaWEgKG1pbi13aWR0aDogNDMuNzVlbSkge1xyXG4gICAgLm5hdi1tYWluIHtcclxuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfSB9XHJcbiAgLm5hdi1tYWluLmlzLW9wZW4ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxyXG5cclxuLm5hdi1tYWluLm5hdi1hY3RpdmF0ZWQsXHJcbi5pbm5lci13cmFwcGVyLm5hdi1hY3RpdmF0ZWQge1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjRzIGVhc2U7IH1cclxuXHJcbi5uYXYtbWFpbi1saXN0IHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBsaXN0LXN0eWxlOiBub25lO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgY29sb3I6ICNmZmY7IH1cclxuICBAbWVkaWEgKG1pbi13aWR0aDogNDMuNzVlbSkge1xyXG4gICAgLm5hdi1tYWluLWxpc3Qge1xyXG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgaGVpZ2h0OiA2ZW07XHJcbiAgICAgIGNvbG9yOiAjOTM2MmM0OyB9IH1cclxuXHJcbi5uYXYtbWFpbi1pdGVtIHtcclxuICBmb250LXNpemU6IDFyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xyXG4gIHBhZGRpbmc6IDFlbTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzNlMjI1YjsgfVxyXG4gIEBtZWRpYSAobWluLXdpZHRoOiA0My43NWVtKSB7XHJcbiAgICAubmF2LW1haW4taXRlbSB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgcGFkZGluZzogMC41ZW07XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICMxYjFiMWI7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgdHJhbnNpdGlvbjogY29sb3IgMC41czsgfVxyXG4gICAgICAubmF2LW1haW4taXRlbTpob3ZlciB7XHJcbiAgICAgICAgY29sb3I6ICM4Y2M2M2U7IH1cclxuICAgICAgLm5hdi1tYWluLWl0ZW06YWZ0ZXIge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgIGJvdHRvbTogMjUlO1xyXG4gICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgIGhlaWdodDogMXB4O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4Y2M2M2U7XHJcbiAgICAgICAgY29udGVudDogJyc7XHJcbiAgICAgICAgdHJhbnNpdGlvbjogd2lkdGggMC41czsgfVxyXG4gICAgICAubmF2LW1haW4taXRlbTpob3ZlcjphZnRlciB7XHJcbiAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxyXG5cclxuLm5hdi1zb2NpYWwtbGlzdCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG4gIGNvbnRlbnQ6IG5vbmU7IH1cclxuICBAbWVkaWEgKG1pbi13aWR0aDogNDMuNzVlbSkge1xyXG4gICAgLm5hdi1zb2NpYWwtbGlzdCB7XHJcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICBoZWlnaHQ6IDZlbTtcclxuICAgICAgY29sb3I6ICM5MzYyYzQ7IH0gfVxyXG5cclxuLm5hdi1zb2NpYWwtaXRlbSB7XHJcbiAgY29udGVudDogbm9uZTsgfVxyXG4gIEBtZWRpYSAobWluLXdpZHRoOiA0My43NWVtKSB7XHJcbiAgICAubmF2LXNvY2lhbC1pdGVtIHtcclxuICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICBwYWRkaW5nOiAwLjVlbTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzFiMWIxYjtcclxuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjVzOyB9XHJcbiAgICAgIC5uYXYtc29jaWFsLWl0ZW06aG92ZXIge1xyXG4gICAgICAgIGNvbG9yOiAjOGNjNjNlOyB9IH1cclxuXHJcbi8qXHJcbiAgIEZsZXggTmF2aWdhdGlvblxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG4uZmxleC1uYXYge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7IH1cclxuXHJcbi5mbGV4LW5hdi1pdGVtLCAuZmxleC1uYXYtaXRlbS0tc2VhcmNoIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIHBhZGRpbmc6IDVweCAxMHB4O1xyXG4gIGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzNiNDQ0ZjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTlhOWIzO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cclxuXHJcbi5mbGV4LW5hdi1pdGVtOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTQwYjFkOyB9XHJcblxyXG4uZmxleC1uYXYtaXRlbS0tc2VhcmNoIHtcclxuICAtd2Via2l0LWZsZXg6IDE7XHJcbiAgZmxleDogMTsgfVxyXG4gIC5mbGV4LW5hdi1pdGVtLS1zZWFyY2ggbGFiZWwge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG1heC13aWR0aDogNTAwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxyXG4gIC5mbGV4LW5hdi1pdGVtLS1zZWFyY2ggaW5wdXQge1xyXG4gICAgLW1vei1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgd2lkdGg6IDEwMCU7IH1cclxuXHJcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEZPT1RFUlxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5mb290ZXIge1xyXG4gIGJhY2tncm91bmQ6ICMxYjFiMWI7IH1cclxuXHJcbi5mb290ZXItbWFpbiB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgcGFkZGluZzogMWVtOyB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBIRUFERVJcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuLmhlYWRlci1jb250YWluZXIge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGZvbnQtZmFtaWx5OiBcIk1vbnRzZXJyYXRcIiwgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBIZWx2ZXRpY2EsIEFyaWFsLCBzYW5zLXNlcmlmO1xyXG4gIHRvcDogMDtcclxuICBsZWZ0OiAwO1xyXG4gIGhlaWdodDogNmVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxYjFiMWI7IH1cclxuXHJcbi5oZWFkZXItY29udGFpbmVyLWZpeGVkIHtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgd2lkdGg6IDEwMCU7IH1cclxuXHJcbi5oZWFkZXItd3JhcHBlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGhlaWdodDogNmVtO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGluaGVyaXQ7XHJcbiAgei1pbmRleDogNjAwMDsgfVxyXG5cclxuLmhlYWRlci10aXRsZSB7XHJcbiAgZm9udC1zaXplOiAxLjU2MjVyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjI1cmVtO1xyXG4gIGNvbG9yOiAjZjhmN2YyOyB9XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc4LjEyNWVtKSB7XHJcbiAgICAuaGVhZGVyLXRpdGxlIHtcclxuICAgICAgZm9udC1zaXplOiAxLjk1MzEzcmVtO1xyXG4gICAgICBsaW5lLWhlaWdodDogMi40Mzc1cmVtOyB9IH1cclxuXHJcbi5oZWFkZXItbG9nbyB7XHJcbiAgZmxvYXQ6IGxlZnQ7XHJcbiAgd2lkdGg6IDNlbTtcclxuICBoZWlnaHQ6IDNlbTtcclxuICBmaWxsOiAjOTM2MmM0OyB9XHJcbiAgQG1lZGlhIChtaW4td2lkdGg6IDc4LjEyNWVtKSB7XHJcbiAgICAuaGVhZGVyLWxvZ28ge1xyXG4gICAgICB3aWR0aDogNGVtO1xyXG4gICAgICBoZWlnaHQ6IDRlbTsgfSB9XHJcblxyXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gICBTSURFQkFSXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgIEhPTUVcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcblxyXG4iLCJAaW1wb3J0IFwiY29tcGFzcy9zdXBwb3J0XCI7XG5AaW1wb3J0IFwiY29tcGFzcy9sYXlvdXQvZ3JpZC1iYWNrZ3JvdW5kXCI7XG5AaW1wb3J0IFwiY29tcGFzcy90eXBvZ3JhcGh5L3VuaXRzXCI7XG5cbi8vIFRoZSBkZWZhdWx0IGZvbnQgc2l6ZSBmb3IgYWxsIHRleHQgaW4gcGl4ZWxzXG4kYmFzZS1mb250LXNpemU6IDE2cHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRleHQgYmFzZWxpbmVzICh2ZXJ0aWNhbCByaHl0aG0pIGluIHBpeGVscy5cbiRiYXNlLWxpbmUtaGVpZ2h0OiAyNHB4ICFkZWZhdWx0O1xuXG4vLyBUaGUgbGVuZ3RoIHVuaXQgaW4gd2hpY2ggdG8gb3V0cHV0IHJoeXRobSB2YWx1ZXMuXG4vLyBTdXBwb3J0ZWQgdmFsdWVzOiBweCwgZW0sIHJlbS4gUGVyY2VudCB1bml0cyBjYW4ndCBiZSB1c2VkIHNpbmNlIHRoZXlcbi8vIG1ha2UgY2FsY3VsYXRpbmcgcGFkZGluZyBhbmQgbWFyZ2lucyBpbXByYWN0aWNhbCwgYW5kIHBlcmNlbnRhZ2UgYm9yZGVycyBhcmVcbi8vIG5vdCB2YWxpZCBvciBzdXBwb3J0ZWQgaW4gY3NzLlxuJHJoeXRobS11bml0OiAnZW0nICFkZWZhdWx0O1xuXG4vLyBXaGV0aGVyIHRvIG91dHB1dCBmYWxsYmFjayB2YWx1ZXMgaW4gcHggd2hlbiB1c2luZyByZW0gYXMgdGhlIHJoeXRobS11bml0LlxuJHJlbS13aXRoLXB4LWZhbGxiYWNrOiB0cnVlICFkZWZhdWx0O1xuXG4vLyBEZWZhdWx0IHZhbHVlcyBmb3Igcmh5dGhtIGJvcmRlcnMgcHJvcGVydGllcy5cbi8vIFN1cHBvcnRzIHN0eWxlIGFsb25lIGVnLiBgc29saWRgIG9yIGxpc3Qgb2Ygc3R5bGUgYW5kIGNvbG9yIGVnLiBgc29saWQgI2FhYWA7XG4kZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXdpZHRoOiAxcHggIWRlZmF1bHQ7XG4kZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlOiBzb2xpZCAhZGVmYXVsdDtcblxuLy8gQWxsb3dzIHRoZSBgYWRqdXN0LWZvbnQtc2l6ZS10b2AgbWl4aW4gYW5kIHRoZSBgbGluZXMtZm9yLWZvbnQtc2l6ZWAgZnVuY3Rpb25cbi8vIHRvIHJvdW5kIHRoZSBsaW5lIGhlaWdodCB0byB0aGUgbmVhcmVzdCBoYWxmIGxpbmUgaGVpZ2h0IGluc3RlYWQgb2YgdGhlXG4vLyBuZWFyZXN0IGludGVncmFsIGxpbmUgaGVpZ2h0IHRvIGF2b2lkIGxhcmdlIHNwYWNpbmcgYmV0d2VlbiBsaW5lcy5cbiRyb3VuZC10by1uZWFyZXN0LWhhbGYtbGluZTogZmFsc2UgIWRlZmF1bHQ7XG5cbi8vIEVuc3VyZSB0aGVyZSBpcyBhdCBsZWFzdCB0aGlzIG1hbnkgcGl4ZWxzXG4vLyBvZiB2ZXJ0aWNhbCBwYWRkaW5nIGFib3ZlIGFuZCBiZWxvdyB0aGUgdGV4dC5cbiRtaW4tbGluZS1wYWRkaW5nOiAycHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBsZWFkZXIgaXMgdGhlIGFtb3VudCBvZiB3aGl0ZXNwYWNlIGluIGEgbGluZS5cbi8vIEl0IG1pZ2h0IGJlIHVzZWZ1bCBpbiB5b3VyIGNhbGN1bGF0aW9ucy5cbiRiYXNlLWxlYWRlcjogY29udmVydC1sZW5ndGgoJGJhc2UtbGluZS1oZWlnaHQgLSAkYmFzZS1mb250LXNpemUsICRyaHl0aG0tdW5pdCwgJGJhc2UtZm9udC1zaXplKTtcblxuLy8gVGhlIGhhbGYtbGVhZGVyIGlzIHRoZSBhbW91bnQgb2Ygd2hpdGVzcGFjZSBhYm92ZSBhbmQgYmVsb3cgYSBsaW5lLlxuLy8gSXQgbWlnaHQgYmUgdXNlZnVsIGluIHlvdXIgY2FsY3VsYXRpb25zLlxuJGJhc2UtaGFsZi1sZWFkZXI6ICRiYXNlLWxlYWRlciAvIDI7XG5cbi8vIEBwcml2YXRlIFdoZXRoZXIgdGhlIHJoeXRobSBvdXRwdXQgaXMgaW4gYWJzb2x1dGUgdW5pdHMgKHB4KSBvciBub3QgKGVtLCByZW0pXG4kcmVsYXRpdmUtZm9udC1zaXppbmc6IGlmKCRyaHl0aG0tdW5pdCA9PSBweCwgZmFsc2UsIHRydWUpO1xuXG4vLyBWYWxpZGF0ZSB1bml0c1xuQGlmIHVuaXQoJGJhc2UtZm9udC1zaXplKSAgICE9ICdweCcgeyBAd2FybiBcIiRiYXNlLWZvbnQtc2l6ZSBtdXN0IHJlc29sdmUgdG8gYSBwaXhlbCB1bml0LlwiOyB9XG5AaWYgdW5pdCgkYmFzZS1saW5lLWhlaWdodCkgIT0gJ3B4JyB7IEB3YXJuIFwiJGJhc2UtbGluZS1oZWlnaHQgbXVzdCByZXNvbHZlIHRvIGEgcGl4ZWwgdW5pdC5cIjsgfVxuQGlmICRyaHl0aG0tdW5pdCAhPSAncHgnIGFuZCAkcmh5dGhtLXVuaXQgIT0gJ2VtJyBhbmQgJHJoeXRobS11bml0ICE9ICdyZW0nIHtcbiAgQHdhcm4gXCIkcmh5dGhtLXVuaXQgbXVzdCBiZSBgcHhgLCBgZW1gIG9yIGByZW1gLlwiO1xufVxuXG5cbi8vIENhbGN1bGF0ZSByaHl0aG0gdW5pdHMuXG5AZnVuY3Rpb24gcmh5dGhtKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkb2Zmc2V0OiAwKSB7XG4gICRyaHl0aG06IGNvbnZlcnQtbGVuZ3RoKCRsaW5lcyAqICRiYXNlLWxpbmUtaGVpZ2h0IC0gJG9mZnNldCwgJHJoeXRobS11bml0LCAkZm9udC1zaXplKTtcbiAgQGlmIHVuaXQoJHJoeXRobSkgPT0gcHgge1xuICAgICRyaHl0aG06IGZsb29yKCRyaHl0aG0pO1xuICB9XG4gIEByZXR1cm4gJHJoeXRobTtcbn1cblxuLy8gQ2FsY3VsYXRlIHRoZSBtaW5pbXVtIG11bHRpcGxlIG9mIHJoeXRobSB1bml0cyBuZWVkZWQgdG8gY29udGFpbiB0aGUgZm9udC1zaXplLlxuQGZ1bmN0aW9uIGxpbmVzLWZvci1mb250LXNpemUoJGZvbnQtc2l6ZSkge1xuICAkbGluZXM6IGlmKCRyb3VuZC10by1uZWFyZXN0LWhhbGYtbGluZSxcbiAgICAgICAgICAgICBjZWlsKDIgKiAkZm9udC1zaXplIC8gJGJhc2UtbGluZS1oZWlnaHQpIC8gMixcbiAgICAgICAgICAgICBjZWlsKCRmb250LXNpemUgLyAkYmFzZS1saW5lLWhlaWdodCkpO1xuICAvLyBJZiBsaW5lcyBhcmUgY3JhbXBlZCBpbmNsdWRlIHNvbWUgZXh0cmEgbGVhZC5cbiAgQGlmICgkbGluZXMgKiAkYmFzZS1saW5lLWhlaWdodCAtICRmb250LXNpemUpIDwgKCRtaW4tbGluZS1wYWRkaW5nICogMikge1xuICAgICRsaW5lczogJGxpbmVzICsgaWYoJHJvdW5kLXRvLW5lYXJlc3QtaGFsZi1saW5lLCAwLjUsIDEpO1xuICB9XG4gIEByZXR1cm4gJGxpbmVzO1xufVxuXG5cbi8vIEBwcml2YXRlIE91dHB1dHMgcmh5dGhtIHZhbHVlcy4gRm9yIHJlbSB1bml0cywgb3V0cHV0cyBwaXhlbCBmYWxsYmFja3Ncbi8vIGJ5IGRlZmF1bHQuXG5AbWl4aW4gb3V0cHV0LXJoeXRobSgkcHJvcGVydHksICR2YWx1ZXMpIHtcbiAgQGlmICRyaHl0aG0tdW5pdCA9PSByZW0gYW5kICRyZW0td2l0aC1weC1mYWxsYmFjayB7XG4gICAgQGluY2x1ZGUgcmVtKCRwcm9wZXJ0eSwgJHZhbHVlcyk7XG4gIH1cbiAgQGVsc2Uge1xuICAgICRvdXRwdXQ6ICgpO1xuICAgIEBlYWNoICR2YWx1ZSBpbiAkdmFsdWVzIHtcbiAgICAgIEBpZiB1bml0KCR2YWx1ZSkgPT0gcHgge1xuICAgICAgICAvLyBFbnN1cmUgYWxsIHBpeGVsIHZhbHVlcyBhcmUgcm91bmRlZCB0byB0aGUgbmVhcmVzdCBwaXhlbC5cbiAgICAgICAgJG91dHB1dDogam9pbigkb3V0cHV0LCByb3VuZCgkdmFsdWUpKTtcbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgJG91dHB1dDogam9pbigkb3V0cHV0LCAkdmFsdWUpO1xuICAgICAgfVxuICAgIH1cbiAgICAjeyRwcm9wZXJ0eX06ICRvdXRwdXQ7XG4gIH1cbn1cblxuLy8gRXN0YWJsaXNoZXMgYSBmb250IGJhc2VsaW5lIGZvciB0aGUgZ2l2ZW4gZm9udC1zaXplLlxuQG1peGluIGVzdGFibGlzaC1iYXNlbGluZSgkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgJHJlbGF0aXZlLXNpemU6IDEwMCUgKiAoJGZvbnQtc2l6ZSAvICRicm93c2VyLWRlZmF1bHQtZm9udC1zaXplKTtcblxuICBAaWYgc3VwcG9ydC1sZWdhY3ktYnJvd3NlcihpZSwgXCI2XCIpIGFuZCAobm90ICRyZWxhdGl2ZS1mb250LXNpemluZykge1xuICAgIC8vIElFIDYgcmVmdXNlcyB0byByZXNpemUgZm9udHMgc2V0IGluIHBpeGVscyBhbmQgaXQgd2VpcmRseSByZXNpemVzIGZvbnRzXG4gICAgLy8gd2hvc2Ugcm9vdCBpcyBzZXQgaW4gZW1zLiBTbyB3ZSBzZXQgdGhlIHJvb3QgZm9udCBzaXplIGluIHBlcmNlbnRhZ2VzIG9mXG4gICAgLy8gdGhlIGRlZmF1bHQgZm9udCBzaXplLCBldmVuIGlmIHdlIGFyZSB1c2luZyBhYnNvbHV0ZSBzaXplcyBlbHNld2hlcmUuXG4gICAgKiBodG1sIHsgZm9udC1zaXplOiAkcmVsYXRpdmUtc2l6ZTsgfVxuICB9XG4gIGh0bWwge1xuICAgIGZvbnQtc2l6ZTogaWYoJHJlbGF0aXZlLWZvbnQtc2l6aW5nLCAkcmVsYXRpdmUtc2l6ZSwgJGZvbnQtc2l6ZSk7XG5cbiAgICAvLyBXZWJraXQgaGFzIGEgYnVnIHRoYXQgcHJldmVudHMgbGluZS1oZWlnaHQgYmVpbmcgc2V0IGluIHJlbSBvbiA8aHRtbD47XG4gICAgLy8gVG8gd29yayBhcm91bmQgdGhpcyBhbmQgc2ltcGxpZnkgb3V0cHV0LCB3ZSBjYW4gc2V0IGluaXRpYWwgbGluZS1oZWlnaHRcbiAgICAvLyBpbiBlbXMgZm9yIGFsbCByZWxhdGl2ZSByaHl0aG0gdW5pdHMsIGV2ZW4gd2hlbiAkcmh5dGhtLXVuaXQgaXMgYHJlbWAuXG4gICAgQGlmICRyZWxhdGl2ZS1mb250LXNpemluZyB7XG4gICAgICBsaW5lLWhlaWdodDogY29udmVydC1sZW5ndGgoJGJhc2UtbGluZS1oZWlnaHQsIGVtKTtcbiAgICB9XG4gICAgQGVsc2Uge1xuICAgICAgbGluZS1oZWlnaHQ6IHJvdW5kKCRiYXNlLWxpbmUtaGVpZ2h0KTtcbiAgICB9XG4gIH1cbn1cblxuLy8gUmVzZXRzIHRoZSBiYXNlbGluZSB0byAxIHJoeXRobSB1bml0XG4vLyBEb2VzIG5vdCB3b3JrIG9uIGVsZW1lbnRzIHdob3NlIGZvbnQtc2l6ZSBpcyBkaWZmZXJlbnQgZnJvbSAkYmFzZS1mb250LXNpemUuXG4vL1xuLy8gQGRlcHJlY2F0ZWQgVGhpcyBtaXhpbiB3aWxsIGJlIHJlbW92ZWQgaW4gdGhlIG5leHQgcmVsZWFzZS5cbi8vIFBsZWFzZSB1c2UgYGFkanVzdC1sZWFkaW5nLXRvKDEpYCBpbnN0ZWFkLlxuQG1peGluIHJlc2V0LWJhc2VsaW5lKCRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaW5jbHVkZSBhZGp1c3QtbGVhZGluZy10bygxLCAkZm9udC1zaXplKTtcbn1cblxuLy8gU2hvdyBhIGJhY2tncm91bmQgaW1hZ2UgdGhhdCBjYW4gYmUgdXNlZCB0byBkZWJ1ZyB5b3VyIGFsaWdubWVudHMuXG4vLyBBcyB0aGlzIGlzIGEgZGV2ZWxvcG1lbnQgZmVhdHVyZSwgdGhpcyBtaXhpbiBuZXZlciBvdXRwdXRzIHBpeGVsIGZhbGxiYWNrc1xuLy8gZm9yIHJlbSBvdXRwdXQuXG4vLyBJbmNsdWRlIHRoZSAkaW1nIGFyZ3VtZW50IGlmIHlvdSB3b3VsZCByYXRoZXIgdXNlIHlvdXIgb3duIGltYWdlIHRoYW4gdGhlXG4vLyBDb21wYXNzIGRlZmF1bHQgZ3JhZGllbnQgaW1hZ2UuXG5AbWl4aW4gZGVidWctdmVydGljYWwtYWxpZ25tZW50KCRpbWc6IGZhbHNlKSB7XG4gIEBpZiAkaW1nIHtcbiAgICBiYWNrZ3JvdW5kOiBpbWFnZS11cmwoJGltZyk7XG4gIH1cbiAgQGVsc2Uge1xuICAgIEBpbmNsdWRlIGJhc2VsaW5lLWdyaWQtYmFja2dyb3VuZChpZigkcm91bmQtdG8tbmVhcmVzdC1oYWxmLWxpbmUsIHJoeXRobSgxLzIpLCByaHl0aG0oMSkpKTtcbiAgfVxufVxuXG4vLyBBZGp1c3QgYSBibG9jayB0byBoYXZlIGEgZGlmZmVyZW50IGZvbnQgc2l6ZSBhbmQgbGluZSBoZWlnaHQgdG8gbWFpbnRhaW4gdGhlXG4vLyByaHl0aG0uICRsaW5lcyBzcGVjaWZpZXMgaG93IG1hbnkgbXVsdGlwbGVzIG9mIHRoZSBiYXNlbGluZSByaHl0aG0gZWFjaCBsaW5lXG4vLyBvZiB0aGlzIGZvbnQgc2hvdWxkIHVzZSB1cC4gSXQgZG9lcyBub3QgaGF2ZSB0byBiZSBhbiBpbnRlZ2VyLCBidXQgaXRcbi8vIGRlZmF1bHRzIHRvIHRoZSBzbWFsbGVzdCBpbnRlZ2VyIHRoYXQgaXMgbGFyZ2UgZW5vdWdoIHRvIGZpdCB0aGUgZm9udC5cbi8vIFVzZSAkZnJvbS1zaXplIHRvIGFkanVzdCBmcm9tIGEgZm9udC1zaXplIG90aGVyIHRoYW4gdGhlIGJhc2UgZm9udC1zaXplLlxuQG1peGluIGFkanVzdC1mb250LXNpemUtdG8oJHRvLXNpemUsICRsaW5lczogYXV0bywgJGZyb20tc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG4gICR0by1zaXplOiBjb252ZXJ0LWxlbmd0aCgkdG8tc2l6ZSwgcHgsICRmcm9tLXNpemUpO1xuICBAaWYgJGxpbmVzID09IGF1dG8ge1xuICAgICRsaW5lczogbGluZXMtZm9yLWZvbnQtc2l6ZSgkdG8tc2l6ZSk7XG4gIH1cbiAgQGluY2x1ZGUgb3V0cHV0LXJoeXRobShmb250LXNpemUsIGNvbnZlcnQtbGVuZ3RoKCR0by1zaXplLCAkcmh5dGhtLXVuaXQsICRmcm9tLXNpemUpKTtcbiAgQGluY2x1ZGUgYWRqdXN0LWxlYWRpbmctdG8oJGxpbmVzLCAkdG8tc2l6ZSk7XG59XG5cbi8vIEFkanVzdCBhIGJsb2NrIHRvIGhhdmUgZGlmZmVyZW50IGxpbmUgaGVpZ2h0IHRvIG1haW50YWluIHRoZSByaHl0aG0uXG4vLyAkbGluZXMgc3BlY2lmaWVzIGhvdyBtYW55IG11bHRpcGxlcyBvZiB0aGUgYmFzZWxpbmUgcmh5dGhtIGVhY2ggbGluZSBvZiB0aGlzXG4vLyBmb250IHNob3VsZCB1c2UgdXAuIEl0IGRvZXMgbm90IGhhdmUgdG8gYmUgYW4gaW50ZWdlciwgYnV0IGl0IGRlZmF1bHRzIHRvIHRoZVxuLy8gc21hbGxlc3QgaW50ZWdlciB0aGF0IGlzIGxhcmdlIGVub3VnaCB0byBmaXQgdGhlIGZvbnQuXG5AbWl4aW4gYWRqdXN0LWxlYWRpbmctdG8oJGxpbmVzLCAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUpIHtcbiAgQGluY2x1ZGUgb3V0cHV0LXJoeXRobShsaW5lLWhlaWdodCwgcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSkpO1xufVxuXG4vLyBBcHBseSBsZWFkaW5nIHdoaXRlc3BhY2UuIFRoZSAkcHJvcGVydHkgY2FuIGJlIG1hcmdpbiBvciBwYWRkaW5nLlxuQG1peGluIGxlYWRlcigkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSwgJHByb3BlcnR5OiBtYXJnaW4pIHtcbiAgQGluY2x1ZGUgb3V0cHV0LXJoeXRobSgjeyRwcm9wZXJ0eX0tdG9wLCByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKSk7XG59XG5cbi8vIEFwcGx5IGxlYWRpbmcgd2hpdGVzcGFjZSBhcyBwYWRkaW5nLlxuQG1peGluIHBhZGRpbmctbGVhZGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpbmNsdWRlIG91dHB1dC1yaHl0aG0ocGFkZGluZy10b3AsIHJoeXRobSgkbGluZXMsICRmb250LXNpemUpKTtcbn1cblxuLy8gQXBwbHkgbGVhZGluZyB3aGl0ZXNwYWNlIGFzIG1hcmdpbi5cbkBtaXhpbiBtYXJnaW4tbGVhZGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpbmNsdWRlIG91dHB1dC1yaHl0aG0obWFyZ2luLXRvcCwgcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSkpO1xufVxuXG4vLyBBcHBseSB0cmFpbGluZyB3aGl0ZXNwYWNlLiBUaGUgJHByb3BlcnR5IGNhbiBiZSBtYXJnaW4gb3IgcGFkZGluZy5cbkBtaXhpbiB0cmFpbGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLCAkcHJvcGVydHk6IG1hcmdpbikge1xuICBAaW5jbHVkZSBvdXRwdXQtcmh5dGhtKCN7JHByb3BlcnR5fS1ib3R0b20sIHJoeXRobSgkbGluZXMsICRmb250LXNpemUpKTtcbn1cblxuLy8gQXBwbHkgdHJhaWxpbmcgd2hpdGVzcGFjZSBhcyBwYWRkaW5nLlxuQG1peGluIHBhZGRpbmctdHJhaWxlcigkbGluZXM6IDEsICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSkge1xuICBAaW5jbHVkZSBvdXRwdXQtcmh5dGhtKHBhZGRpbmctYm90dG9tLCByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplKSk7XG59XG5cbi8vIEFwcGx5IHRyYWlsaW5nIHdoaXRlc3BhY2UgYXMgbWFyZ2luLlxuQG1peGluIG1hcmdpbi10cmFpbGVyKCRsaW5lczogMSwgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplKSB7XG4gIEBpbmNsdWRlIG91dHB1dC1yaHl0aG0obWFyZ2luLWJvdHRvbSwgcmh5dGhtKCRsaW5lcywgJGZvbnQtc2l6ZSkpO1xufVxuXG4vLyBTaG9ydGhhbmQgbWl4aW4gdG8gYXBwbHkgd2hpdGVzcGFjZSBmb3IgdG9wIGFuZCBib3R0b20gbWFyZ2lucyBhbmQgcGFkZGluZy5cbkBtaXhpbiByaHl0aG0oXG4gICRsZWFkZXI6IDEsXG4gICRwYWRkaW5nLWxlYWRlcjogMCxcbiAgJHBhZGRpbmctdHJhaWxlcjogJHBhZGRpbmctbGVhZGVyLFxuICAkdHJhaWxlcjogJGxlYWRlcixcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4pIHtcbiAgQGluY2x1ZGUgbGVhZGVyKCRsZWFkZXIsICRmb250LXNpemUpO1xuICBAaW5jbHVkZSBwYWRkaW5nLWxlYWRlcigkcGFkZGluZy1sZWFkZXIsICRmb250LXNpemUpO1xuICBAaW5jbHVkZSBwYWRkaW5nLXRyYWlsZXIoJHBhZGRpbmctdHJhaWxlciwgJGZvbnQtc2l6ZSk7XG4gIEBpbmNsdWRlIHRyYWlsZXIoJHRyYWlsZXIsICRmb250LXNpemUpO1xufVxuXG4vLyBTaG9ydGhhbmQgbWl4aW4gdG8gYXBwbHkgd2hpdGVzcGFjZSBmb3IgdG9wIGFuZCBib3R0b20gbWFyZ2lucy5cbkBtaXhpbiByaHl0aG0tbWFyZ2lucyhcbiAgJGxlYWRlcjogMSxcbiAgJHRyYWlsZXI6ICRsZWFkZXIsXG4gICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZVxuKSB7XG4gIEBpbmNsdWRlIGxlYWRlcigkbGVhZGVyLCAkZm9udC1zaXplKTtcbiAgQGluY2x1ZGUgdHJhaWxlcigkdHJhaWxlciwgJGZvbnQtc2l6ZSk7XG59XG5cbi8vIFNob3J0aGFuZCBtaXhpbiB0byBhcHBseSB3aGl0ZXNwYWNlIGZvciB0b3AgYW5kIGJvdHRvbSBwYWRkaW5nLlxuQG1peGluIHJoeXRobS1wYWRkaW5nKFxuICAkcGFkZGluZy1sZWFkZXI6IDEsXG4gICRwYWRkaW5nLXRyYWlsZXI6ICRwYWRkaW5nLWxlYWRlcixcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplXG4pIHtcbiAgQGluY2x1ZGUgcGFkZGluZy1sZWFkZXIoJHBhZGRpbmctbGVhZGVyLCAkZm9udC1zaXplKTtcbiAgQGluY2x1ZGUgcGFkZGluZy10cmFpbGVyKCRwYWRkaW5nLXRyYWlsZXIsICRmb250LXNpemUpO1xufVxuXG4vLyBBcHBseSBhIGJvcmRlciBhbmQgd2hpdGVzcGFjZSB0byBhbnkgc2lkZSB3aXRob3V0IGRlc3Ryb3lpbmcgdGhlIHZlcnRpY2FsXG4vLyByaHl0aG0uIFRoZSB3aGl0ZXNwYWNlIG11c3QgYmUgZ3JlYXRlciB0aGFuIHRoZSB3aWR0aCBvZiB0aGUgYm9yZGVyLlxuQG1peGluIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcihcbiAgJHNpZGUsXG4gICR3aWR0aDogJGRlZmF1bHQtcmh5dGhtLWJvcmRlci13aWR0aCxcbiAgJGxpbmVzOiAxLFxuICAkZm9udC1zaXplOiAkYmFzZS1mb250LXNpemUsXG4gICRib3JkZXItc3R5bGU6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItc3R5bGVcbikge1xuICAvLyBJZiBhcHBseWluZyBib3JkZXJzIHRvIGFsbCBzaWRlcywgdXNlIHNob3J0aGFuZCBwcm9wZXJ0aWVzXG4gICRib3JkZXItcHJvcDogaWYoJHNpZGUgPT0gYWxsLCBib3JkZXIsIGJvcmRlci0jeyRzaWRlfSk7XG4gIEBpbmNsdWRlIG91dHB1dC1yaHl0aG0oI3skYm9yZGVyLXByb3B9LXdpZHRoLCBjb252ZXJ0LWxlbmd0aCgkd2lkdGgsICRyaHl0aG0tdW5pdCwgJGZvbnQtc2l6ZSkpO1xuICAjeyRib3JkZXItcHJvcH0tc3R5bGU6IG50aCgkYm9yZGVyLXN0eWxlLCAxKTtcbiAgQGlmIHR5cGUtb2YoJGJvcmRlci1zdHlsZSkgPT0gbGlzdCBhbmQgbGVuZ3RoKCRib3JkZXItc3R5bGUpID4gMSB7XG4gICAgI3skYm9yZGVyLXByb3B9LWNvbG9yOiBudGgoJGJvcmRlci1zdHlsZSwgMik7XG4gIH1cbiAgJHBhZGRpbmctcHJvcDogaWYoJHNpZGUgPT0gYWxsLCBwYWRkaW5nLCBwYWRkaW5nLSN7JHNpZGV9KTtcbiAgQGluY2x1ZGUgb3V0cHV0LXJoeXRobSgjeyRwYWRkaW5nLXByb3B9LCByaHl0aG0oJGxpbmVzLCAkZm9udC1zaXplLCAkb2Zmc2V0OiAkd2lkdGgpKTtcbn1cblxuLy8gQXBwbHkgYSBsZWFkaW5nIGJvcmRlci5cbi8vICRib3JkZXItc3R5bGUgYW5kICR3aWR0aCBhcmUgZGVwcmVjYXRlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGEgZnV0dXJlIHZlcnNpb24gb2YgQ29tcGFzcy5cbkBtaXhpbiBsZWFkaW5nLWJvcmRlcihcbiAgJHdpZHRoOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXdpZHRoLFxuICAkbGluZXM6IDEsXG4gICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSxcbiAgJGJvcmRlci1zdHlsZTogJGRlZmF1bHQtcmh5dGhtLWJvcmRlci1zdHlsZVxuKSB7XG4gIEBpbmNsdWRlIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcih0b3AsICR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cblxuLy8gQXBwbHkgYSB0cmFpbGluZyBib3JkZXIuXG5AbWl4aW4gdHJhaWxpbmctYm9yZGVyKFxuICAkd2lkdGg6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItd2lkdGgsXG4gICRsaW5lczogMSxcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLFxuICAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlXG4pIHtcbiAgQGluY2x1ZGUgYXBwbHktc2lkZS1yaHl0aG0tYm9yZGVyKGJvdHRvbSwgJHdpZHRoLCAkbGluZXMsICRmb250LXNpemUsICRib3JkZXItc3R5bGUpO1xufVxuXG4vLyBBcHBseSBib3RoIGxlYWRpbmcgYW5kIHRyYWlsaW5nIGJvcmRlcnMuXG5AbWl4aW4gaG9yaXpvbnRhbC1ib3JkZXJzKFxuICAkd2lkdGg6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItd2lkdGgsXG4gICRsaW5lczogMSxcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLFxuICAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlXG4pIHtcbiAgQGluY2x1ZGUgbGVhZGluZy1ib3JkZXIoJHdpZHRoLCAkbGluZXMsICRmb250LXNpemUsICRib3JkZXItc3R5bGUpO1xuICBAaW5jbHVkZSB0cmFpbGluZy1ib3JkZXIoJHdpZHRoLCAkbGluZXMsICRmb250LXNpemUsICRib3JkZXItc3R5bGUpO1xufVxuXG4vLyBBbGlhcyBmb3IgYGhvcml6b250YWwtYm9yZGVyc2AgbWl4aW4uXG5AbWl4aW4gaC1ib3JkZXJzKFxuICAkd2lkdGg6ICRkZWZhdWx0LXJoeXRobS1ib3JkZXItd2lkdGgsXG4gICRsaW5lczogMSxcbiAgJGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplLFxuICAkYm9yZGVyLXN0eWxlOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXN0eWxlXG4pIHtcbiAgQGluY2x1ZGUgaG9yaXpvbnRhbC1ib3JkZXJzKCR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cblxuLy8gQXBwbHkgYm9yZGVycyBhbmQgd2hpdGVzcGFjZSBlcXVhbGx5IHRvIGFsbCBzaWRlcy5cbkBtaXhpbiByaHl0aG0tYm9yZGVycyhcbiAgJHdpZHRoOiAkZGVmYXVsdC1yaHl0aG0tYm9yZGVyLXdpZHRoLFxuICAkbGluZXM6IDEsXG4gICRmb250LXNpemU6ICRiYXNlLWZvbnQtc2l6ZSxcbiAgJGJvcmRlci1zdHlsZTogJGRlZmF1bHQtcmh5dGhtLWJvcmRlci1zdHlsZVxuKSB7XG4gIEBpbmNsdWRlIGFwcGx5LXNpZGUtcmh5dGhtLWJvcmRlcihhbGwsICR3aWR0aCwgJGxpbmVzLCAkZm9udC1zaXplLCAkYm9yZGVyLXN0eWxlKTtcbn1cbiIsIi8vIEBwcml2YXRlIERlZmF1bHQgZm9udC1zaXplIGZvciBhbGwgYnJvd3NlcnNcbiRicm93c2VyLWRlZmF1bHQtZm9udC1zaXplOiAxNnB4O1xuXG4vLyBCYXNlIGZvbnQgc2l6ZSBpbiBwaXhlbHMsIGlmIG5vdCBhbHJlYWR5IGRlZmluZWQuXG4vLyBTaG91bGQgYmUgdGhlIHNhbWUgYXMgdGhlIGZvbnQtc2l6ZSBvZiB0aGUgaHRtbCBlbGVtZW50LlxuJGJhc2UtZm9udC1zaXplOiAxNnB4ICFkZWZhdWx0O1xuXG4vLyBXaGV0aGVyIHRvIG91dHB1dCBmYWxsYmFjayB2YWx1ZXMgaW4gcHggd2hlbiBvdXRwdXR0aW5nIHJlbXMuXG4kcmVtLXdpdGgtcHgtZmFsbGJhY2s6IHRydWUgIWRlZmF1bHQ7XG5cblxuLy8gQ29udmVydCBhbnkgQ1NTIDxsZW5ndGg+IG9yIDxwZXJjZW50YWdlPiB2YWx1ZSB0byBhbnkgYW5vdGhlci5cbi8vXG4vLyBAcGFyYW0gJGxlbmd0aFxuLy8gICBBIGNzcyA8bGVuZ3RoPiBvciA8cGVyY2VudGFnZT4gdmFsdWVcbi8vXG4vLyBAcGFyYW0gJHRvLXVuaXRcbi8vICAgU3RyaW5nIG1hdGNoaW5nIGEgY3NzIHVuaXQga2V5d29yZCwgZS5nLiAnZW0nLCAnJScsIGV0Yy5cbi8vXG4vLyBAcGFyYW0gJGZyb20tY29udGV4dFxuLy8gICBXaGVuIGNvbnZlcnRpbmcgZnJvbSByZWxhdGl2ZSB1bml0cywgdGhlIGFic29sdXRlIGxlbmd0aCAoaW4gcHgpIHRvXG4vLyAgIHdoaWNoICRsZW5ndGggcmVmZXJzIChlLmcuIGZvciAkbGVuZ3RocyBpbiBlbSB1bml0cywgd291bGQgbm9ybWFsbHkgYmUgdGhlXG4vLyAgIGZvbnQtc2l6ZSBvZiB0aGUgY3VycmVudCBlbGVtZW50KS5cbi8vXG4vLyBAcGFyYW0gJHRvLWNvbnRleHRcbi8vICAgRm9yIGNvbnZlcnRpbmcgdG8gcmVsYXRpdmUgdW5pdHMsIHRoZSBhYnNvbHV0ZSBsZW5ndGggaW4gcHggdG8gd2hpY2ggdGhlXG4vLyAgIG91dHB1dCB2YWx1ZSB3aWxsIHJlZmVyLiBEZWZhdWx0cyB0byB0aGUgc2FtZSBhcyAkZnJvbS1jb250ZXh0LCBzaW5jZSBpdCBpc1xuLy8gICByYXJlbHkgbmVlZGVkLlxuQGZ1bmN0aW9uIGNvbnZlcnQtbGVuZ3RoKFxuXHQkbGVuZ3RoLFxuXHQkdG8tdW5pdCxcblx0JGZyb20tY29udGV4dDogJGJhc2UtZm9udC1zaXplLFxuXHQkdG8tY29udGV4dDogJGZyb20tY29udGV4dFxuKSB7XG5cblx0JGZyb20tdW5pdDogdW5pdCgkbGVuZ3RoKTtcblxuXHQvLyBPcHRpbWl6ZSBmb3IgY2FzZXMgd2hlcmUgYGZyb21gIGFuZCBgdG9gIHVuaXRzIGFyZSBhY2NpZGVudGFsbHkgdGhlIHNhbWUuXG5cdEBpZiAkZnJvbS11bml0ID09ICR0by11bml0IHsgQHJldHVybiAkbGVuZ3RoOyB9XG5cblx0Ly8gQ29udGV4dCB2YWx1ZXMgbXVzdCBiZSBpbiBweCBzbyB3ZSBjYW4gZGV0ZXJtaW5lIGEgY29udmVyc2lvbiByYXRpbyBmb3Jcblx0Ly8gcmVsYXRpdmUgdW5pdHMuXG5cdEBpZiB1bml0KCRmcm9tLWNvbnRleHQpICE9ICdweCcgeyBAd2FybiBcIlBhcmVtZXRlciAkZnJvbS1jb250ZXh0IG11c3QgcmVzb2x2ZSB0byBhIHZhbHVlIGluIHBpeGVsIHVuaXRzLlwiOyB9XG5cdEBpZiB1bml0KCR0by1jb250ZXh0KSAhPSAncHgnIHsgQHdhcm4gXCJQYXJhbWV0ZXIgJHRvLWNvbnRleHQgbXVzdCByZXNvbHZlIHRvIGEgdmFsdWUgaW4gcGl4ZWwgdW5pdHMuXCI7IH1cblxuXHQvLyBDb252ZXJ0IGlucHV0IGxlbmd0aCB0byBwaXhlbHNcblx0JHB4LWxlbmd0aDogJGxlbmd0aDtcblxuXHRAaWYgJGZyb20tdW5pdCAhPSAncHgnIHtcblx0XHQvLyBDb252ZXJ0IHJlbGF0aXZlIHVuaXRzIHVzaW5nIHRoZSBmcm9tLWNvbnRleHQgcGFyYW1ldGVyLlxuXHRcdEBpZiAgICAgICRmcm9tLXVuaXQgPT0gJ2VtJyAgeyAkcHgtbGVuZ3RoOiAkbGVuZ3RoICogJGZyb20tY29udGV4dCAvIDFlbSB9XG5cdFx0QGVsc2UgaWYgJGZyb20tdW5pdCA9PSAncmVtJyB7ICRweC1sZW5ndGg6ICRsZW5ndGggKiAkYmFzZS1mb250LXNpemUgLyAxcmVtIH1cblx0XHRAZWxzZSBpZiAkZnJvbS11bml0ID09ICclJyAgIHsgJHB4LWxlbmd0aDogJGxlbmd0aCAqICRmcm9tLWNvbnRleHQgLyAxMDAlIH1cblx0XHRAZWxzZSBpZiAkZnJvbS11bml0ID09ICdleCcgIHsgJHB4LWxlbmd0aDogJGxlbmd0aCAqICRmcm9tLWNvbnRleHQgLyAyZXggfVxuXHRcdC8vIENvbnZlcnQgYWJzb2x1dGUgdW5pdHMgdXNpbmcgU2FzcycgY29udmVyc2lvbiB0YWJsZS5cblx0XHRAZWxzZSBpZiAkZnJvbS11bml0ID09ICdpbicgIG9yXG5cdFx0XHRcdFx0XHQgJGZyb20tdW5pdCA9PSAnbW0nICBvclxuXHRcdFx0XHRcdFx0ICRmcm9tLXVuaXQgPT0gJ2NtJyAgb3Jcblx0XHRcdFx0XHRcdCAkZnJvbS11bml0ID09ICdwdCcgIG9yXG5cdFx0XHRcdFx0XHQgJGZyb20tdW5pdCA9PSAncGMnICB7ICRweC1sZW5ndGg6IDBweCArICRsZW5ndGggfVxuXHRcdC8vIENlcnRhaW4gdW5pdHMgY2FuJ3QgYmUgY29udmVydGVkLlxuXHRcdEBlbHNlIGlmICRmcm9tLXVuaXQgPT0gJ2NoJyAgb3Jcblx0XHRcdFx0XHRcdCAkZnJvbS11bml0ID09ICd2dycgIG9yXG5cdFx0XHRcdFx0XHQgJGZyb20tdW5pdCA9PSAndmgnICBvclxuXHRcdFx0XHRcdFx0ICRmcm9tLXVuaXQgPT0gJ3ZtaW4nIHtcblx0XHRcdEB3YXJuIFwiI3skZnJvbS11bml0fSB1bml0cyBjYW4ndCBiZSByZWxpYWJseSBjb252ZXJ0ZWQ7IFJldHVybmluZyBvcmlnaW5hbCB2YWx1ZS5cIjtcblx0XHRcdEByZXR1cm4gJGxlbmd0aDtcblx0XHR9XG5cdFx0QGVsc2Uge1xuXHRcdFx0QHdhcm4gXCIjeyRmcm9tLXVuaXR9IGlzIGFuIHVua25vd24gbGVuZ3RoIHVuaXQuIFJldHVybmluZyBvcmlnaW5hbCB2YWx1ZS5cIjtcblx0XHRcdEByZXR1cm4gJGxlbmd0aDtcblx0XHR9XG5cdH1cblxuXHQvLyBDb252ZXJ0IGxlbmd0aCBpbiBwaXhlbHMgdG8gdGhlIG91dHB1dCB1bml0XG5cdCRvdXRwdXQtbGVuZ3RoOiAkcHgtbGVuZ3RoO1xuXHRAaWYgJHRvLXVuaXQgIT0gJ3B4JyB7XG5cdFx0Ly8gUmVsYXRpdmUgdW5pdHNcblx0XHRAaWYgICAgICAkdG8tdW5pdCA9PSAnZW0nICB7ICRvdXRwdXQtbGVuZ3RoOiAkcHgtbGVuZ3RoICogMWVtIC8gJHRvLWNvbnRleHQgfVxuXHRcdEBlbHNlIGlmICR0by11bml0ID09ICdyZW0nIHsgJG91dHB1dC1sZW5ndGg6ICRweC1sZW5ndGggKiAxcmVtIC8gJGJhc2UtZm9udC1zaXplIH1cblx0XHRAZWxzZSBpZiAkdG8tdW5pdCA9PSAnJScgICB7ICRvdXRwdXQtbGVuZ3RoOiAkcHgtbGVuZ3RoICogMTAwJSAvICR0by1jb250ZXh0IH1cblx0XHRAZWxzZSBpZiAkdG8tdW5pdCA9PSAnZXgnICB7ICRvdXRwdXQtbGVuZ3RoOiAkcHgtbGVuZ3RoICogMmV4IC8gJHRvLWNvbnRleHQgfVxuXHRcdC8vIEFic29sdXRlIHVuaXRzXG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ2luJyAgeyAkb3V0cHV0LWxlbmd0aDogMGluICsgJHB4LWxlbmd0aCB9XG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ21tJyAgeyAkb3V0cHV0LWxlbmd0aDogMG1tICsgJHB4LWxlbmd0aCB9XG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ2NtJyAgeyAkb3V0cHV0LWxlbmd0aDogMGNtICsgJHB4LWxlbmd0aCB9XG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ3B0JyAgeyAkb3V0cHV0LWxlbmd0aDogMHB0ICsgJHB4LWxlbmd0aCB9XG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ3BjJyAgeyAkb3V0cHV0LWxlbmd0aDogMHBjICsgJHB4LWxlbmd0aCB9XG5cdFx0Ly8gTm9uLWNvbnZlcnRpYmxlIHVuaXRzXG5cdFx0QGVsc2UgaWYgJHRvLXVuaXQgPT0gJ2NoJyAgb3Jcblx0XHRcdFx0XHRcdCAkdG8tdW5pdCA9PSAndncnICBvclxuXHRcdFx0XHRcdFx0ICR0by11bml0ID09ICd2aCcgIG9yXG5cdFx0XHRcdFx0XHQgJHRvLXVuaXQgPT0gJ3ZtaW4nIHtcblx0XHRcdEB3YXJuIFwiI3skdG8tdW5pdH0gdW5pdHMgY2FuJ3QgYmUgcmVsaWFibHkgY29udmVydGVkOyBSZXR1cm5pbmcgb3JpZ2luYWwgdmFsdWUuXCI7XG5cdFx0XHRAcmV0dXJuICRsZW5ndGg7XG5cdFx0fVxuXHRcdEBlbHNlIHtcblx0XHRcdEB3YXJuIFwiI3skdG8tdW5pdH0gaXMgYW4gdW5rbm93biBsZW5ndGggdW5pdC4gUmV0dXJuaW5nIG9yaWdpbmFsIHZhbHVlLlwiO1xuXHRcdFx0QHJldHVybiAkbGVuZ3RoO1xuXHRcdH1cblx0fVxuXG5cdEByZXR1cm4gJG91dHB1dC1sZW5ndGg7XG59XG5cblxuLy8gQHByaXZhdGUgR2V0IHRoZSBweC9yZW0gdmVyc2lvbnMgb2YgYSB2YWx1ZS5cbkBmdW5jdGlvbiByZW0tZmFsbGJhY2stdmFsdWVzKCR2YWx1ZSkge1xuICAkX3JldHVybjogKFxuICAgIHB4OiAkdmFsdWUsXG4gICAgcmVtOiAkdmFsdWUsXG4gICk7XG5cbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBudW1iZXIgYW5kIG5vdCB1bml0bGVzcygkdmFsdWUpIHtcbiAgICBAaWYgdW5pdCgkdmFsdWUpID09IHJlbSB7XG4gICAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAoXG4gICAgICAgIHB4OiByb3VuZChjb252ZXJ0LWxlbmd0aCgkdmFsdWUsIHB4KSksXG4gICAgICApKTtcbiAgICB9IEBlbHNlIGlmIHVuaXQoJHZhbHVlKSA9PSBweCB7XG4gICAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAoXG4gICAgICAgIHB4OiByb3VuZCgkdmFsdWUpLFxuICAgICAgICByZW06IGNvbnZlcnQtbGVuZ3RoKCR2YWx1ZSwgcmVtKSxcbiAgICAgICkpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJF9yZXR1cm47XG59XG5cbi8vIEBwcml2YXRlIEdldCB0aGUgcHgvcmVtIHZlcnNpb25zIG9mIGEgbGlzdCAob3IgbmVzdGVkIGxpc3RzKS5cbkBmdW5jdGlvbiBsaXN0LWNvbnZlcnQtcmVtcygkdmFsdWUpIHtcbiAgJF9lbXB0eTogKFxuICAgIHB4OiAoKSxcbiAgICByZW06ICgpLFxuICApO1xuICAkX3JldHVybjogJF9lbXB0eTtcbiAgJF9zZXA6IG51bGw7XG5cbiAgQGlmIHR5cGUtb2YoJHZhbHVlKSA9PSBsaXN0IHtcbiAgICAkX3NlcDogbGlzdC1zZXBhcmF0b3IoJHZhbHVlKTtcbiAgICBAZWFjaCAkc3ViIGluICR2YWx1ZSB7XG4gICAgICAkX3RoaXM6IGxpc3QtY29udmVydC1yZW1zKCRzdWIpO1xuICAgICAgJF9yZXR1cm46IChcbiAgICAgICAgcHg6IGFwcGVuZChtYXAtZ2V0KCRfcmV0dXJuLCBweCksIG1hcC1nZXQoJF90aGlzLCBweCksICRfc2VwKSxcbiAgICAgICAgcmVtOiBhcHBlbmQobWFwLWdldCgkX3JldHVybiwgcmVtKSwgbWFwLWdldCgkX3RoaXMsIHJlbSksICRfc2VwKSxcbiAgICAgICk7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICAkX3RoaXM6IHJlbS1mYWxsYmFjay12YWx1ZXMoJHZhbHVlKTtcbiAgICAkX3JldHVybjogbWFwLW1lcmdlKCRfcmV0dXJuLCAkX3RoaXMpO1xuICB9XG5cbiAgQHJldHVybiAkX3JldHVybjtcbn1cblxuXG4vLyBPdXRwdXQgYSBnaXZlbiBzdHlsZSBydWxlIGNvbnRhaW5pbmcgcmVtIHZhbHVlcyBhbG9uZyB3aXRoIGFuIChvcHRpb25hbClcbi8vIGZhbGxiYWNrIHJ1bGUgZm9yIG9sZGVyIGJyb3dzZXJzICh3aXRoIHJlbSB2YWx1ZXMgY29udmVydGVkIHRvIHB4KS5cbi8vXG4vLyBAcGFyYW0gJHByb3BlcnR5XG4vLyAgIFRoZSBjc3MgcHJvcGVydHkgbmFtZS5cbi8vXG4vLyBAcGFyYW0gJHZhbHVlc1xuLy8gICBUaGUgdmFsdWUgb3IgbGlzdCBvZiB2YWx1ZXMgZm9yIHRoZSBwcm9wZXJ0eS5cbi8vXG4vLyBAcGFyYW0gJHVzZS1weC1mYWxsYmFja1xuLy8gICBbIHRydWUgfCBmYWxzZSBdXG4vL1xuQG1peGluIHJlbSgkcHJvcGVydHksICR2YWx1ZXMsICR1c2UtcHgtZmFsbGJhY2s6ICRyZW0td2l0aC1weC1mYWxsYmFjaykge1xuXG4gIC8vIGdldCBjb252ZXJ0ZWQgdmFsdWVzLlxuICAkdmFsdWVzOiBsaXN0LWNvbnZlcnQtcmVtcygkdmFsdWVzKTtcbiAgJHB4LXZhbHVlczogbWFwLWdldCgkdmFsdWVzLCBweCk7XG4gICR2YWx1ZXM6IG1hcC1nZXQoJHZhbHVlcywgcmVtKTtcblxuICAvLyBVc2UgcGl4ZWwgZmFsbGJhY2sgZm9yIGJyb3dzZXJzIHRoYXQgZG9uJ3QgdW5kZXJzdGFuZCByZW0gdW5pdHMuXG4gIEBpZiAkdXNlLXB4LWZhbGxiYWNrIGFuZCAkcHgtdmFsdWVzICE9ICR2YWx1ZXMge1xuICAgICN7JHByb3BlcnR5fTogJHB4LXZhbHVlcztcbiAgfVxuXG4gIC8vIFVzZSByZW0gdmFsdWVzIGZvciBldmVyeW9uZSBlbHNlIChvdmVycmlkZXMgcGl4ZWwgdmFsdWVzKS5cbiAgI3skcHJvcGVydHl9OiAkdmFsdWVzO1xufVxuIixudWxsLCIvLyBNYXAgb2YgY29tcGFzcyBleHRlbnNpb25zIHRoYXQgYXJlIGxvYWRlZC4gVGhlIHZhbHVlIHdpbGwgZWl0aGVyIGJlXG4vLyB0aGUgdmVyc2lvbiBvZiB0aGUgZXh0ZW5zaW9uIG9yIGB0cnVlYCBpZiB0aGUgdmVyc2lvbiBpcyB1bmtub3duLlxuJGNvbXBhc3MtZXh0ZW5zaW9uczogY29tcGFzcy1leHRlbnNpb25zKCkgIWRlZmF1bHQ7XG5cbi8vIFRoZSBsaXN0IG9mIGJyb3dzZXJzIHlvdSB3YW50IHRvIHN1cHBvcnQuXG4vLyBEZWZhdWx0cyB0byBhbGwuXG4kc3VwcG9ydGVkLWJyb3dzZXJzOiBicm93c2VycygpICFkZWZhdWx0O1xuXG4vLyBUaGUgYnJvd3NlciB1c2FnZSB0aHJlc2hvbGQgZm9yIGZlYXR1cmVzIHRoYXQgZ3JhY2VmdWxseSBkZWdyYWRlXG4vLyBEZWZhdWx0cyB0byAxIHVzZXIgaW4gMSwwMDAuXG4kZ3JhY2VmdWwtdXNhZ2UtdGhyZXNob2xkOiAwLjEgIWRlZmF1bHQ7XG5cbi8vIFRoZSBicm93c2VyIHVzYWdlIHRocmVzaG9sZCBmb3IgZmVhdHVyZXMgdGhhdCBjYW5ub3QgZGVncmFkZSBncmFjZWZ1bGx5XG4vLyBEZWZhdWx0cyB0byAxIHVzZXIgaW4gMTAsMDAwLlxuJGNyaXRpY2FsLXVzYWdlLXRocmVzaG9sZDogMC4wMSAhZGVmYXVsdDtcblxuLy8gU2V0IHRoaXMgdG8gdHJ1ZSB0byBnZW5lcmF0ZSBjb21tZW50cyB0aGF0IHdpbGwgZXhwbGFpbiB3aHkgYSBwcmVmaXggd2FzIGluY2x1ZGVkIG9yIG9taXR0ZWQuXG4kZGVidWctYnJvd3Nlci1zdXBwb3J0OiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gTWluaW11bSBicm93c2VyIHZlcnNpb25zIHRoYXQgbXVzdCBiZSBzdXBwb3J0ZWQuXG4vLyBUaGUga2V5cyBvZiB0aGlzIG1hcCBhcmUgYW55IHZhbGlkIGJyb3dzZXIgYWNjb3JkaW5nIHRvIGBicm93c2VycygpYC5cbi8vIFRoZSB2YWx1ZXMgb2YgdGhpcyBtYXAgYXJlIHRoZSBtaW4gdmVyc2lvbiB0aGF0IGlzIHZhbGlkIGZvciB0aGF0IGJyb3dzZXJcbi8vIGFjY29yZGluZyB0byBgYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlcilgXG4kYnJvd3Nlci1taW5pbXVtLXZlcnNpb25zOiAoXG4gICdjaHJvbWUnOiAgbnVsbCxcbiAgJ2ZpcmVmb3gnOiBudWxsLFxuICAnaWUnOiAgICAgIG51bGwsXG4gICdzYWZhcmknOiAgbnVsbCxcbiAgJ29wZXJhJzogICBudWxsXG4pICFkZWZhdWx0O1xuXG5cbi8vIEBwcml2YXRlXG4kZGVmYXVsdC1jYXBhYmlsaXR5LW9wdGlvbnM6IChcbiAgKGZ1bGwtc3VwcG9ydDogdHJ1ZSksXG4gIChwYXJ0aWFsLXN1cHBvcnQ6IHRydWUpXG4pO1xuXG4vLyBXaGVuIGEgcHJlZml4IGluIGluIGNvbnRleHQsIGJ1dCB0aGVyZSBpcyBubyBjdXJyZW50IHByZWZpeFxuLy8gVGhhdCBjb250ZXh0IGlzIHJlY29yZGVkIGhlcmUgc28gb3RoZXIgcHJlZml4ZXMgY2FuIGJlIGF2b2lkZWQuXG4kcHJlZml4LWNvbnRleHQ6IG51bGw7XG5cbi8vIFdoZW4gYSBwcmVmaXggaXMgaW4gYSBzZWxlY3RvciBvciBkaXJlY3RpdmUgc2NvcGUsIHRoaXMgaXMgc2V0IHRvIHRoZVxuLy8gY3VycmVudCBwcmVmaXggdmFsdWUuICBXaGVuIGBudWxsYCwgZWl0aGVyIHRoZXJlIGlzIG5vIHByZWZpeCBpbiBzY29wZVxuLy8gb3IgdGhlIG9mZmljaWFsIHByZWZpeCBpcyBiZWluZyByZW5kZXJlZC4gVGhlIGAkcHJlZml4LWNvbnRleHRgXG4vLyB2YXJpYWJsZSBjYW4gYmUgdXNlZCB0byBtYWtlIHRoYXQgZGlzdGluY3Rpb24uXG4kY3VycmVudC1wcmVmaXg6IG51bGw7XG5cbi8vIFdoZW4gaW4gYSBjb250ZXh0IHRoYXQgb25seSBleGlzdHMgaW4gYSBwYXJ0aWN1bGFyIHZlcnNpb25cbi8vIHRoaXMgdmFyaWFibGUgaXMgc2V0IHRvIHRob3NlIHZlcnNpb25zLlxuJGN1cnJlbnQtYnJvd3Nlci12ZXJzaW9uczogKCk7XG5cbi8vIFRoZSBsZWdhY3kgc3VwcG9ydCBDU1MgMi4xIFNlbGVjdG9ycy5cbi8vIERlZmF1bHRzIHRvIHRoZSAkY3JpdGljYWwtdXNhZ2UtdGhyZXNob2xkLlxuJGNzcy1zZWwyLXN1cHBvcnQtdGhyZXNob2xkOiAkY3JpdGljYWwtdXNhZ2UtdGhyZXNob2xkICFkZWZhdWx0O1xuXG4vLyBDaGVjayBpZiB0aGUgYnJvd3NlciBpcyBpbiBzY29wZSBnaXZlbiB0aGUgYnJvd3NlciBzdXBwb3J0IGFuZCBjdXJyZW50IHByZWZpeCBtaW5pbXVtcy5cbkBmdW5jdGlvbiBicm93c2VyLW91dC1vZi1zY29wZSgkYnJvd3NlciwgJHZlcnNpb246IG51bGwpIHtcbiAgQGlmIG5vdCBpbmRleCgkc3VwcG9ydGVkLWJyb3dzZXJzLCAkYnJvd3Nlcikge1xuICAgIEBpZiAkZGVidWctYnJvd3Nlci1zdXBwb3J0IHtcbiAgICAgIEByZXR1cm4gXCIjeyRicm93c2VyfSBpcyBub3QgbGlzdGVkIGFzIGEgc3VwcG9ydGVkIGJyb3dzZXIuXCJcbiAgICB9IEBlbHNlIHtcbiAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gIH0gQGVsc2UgaWYgbm90ICgkY3VycmVudC1wcmVmaXggPT0gbnVsbCBvciAkY3VycmVudC1wcmVmaXggPT0gYnJvd3Nlci1wcmVmaXgoJGJyb3dzZXIpKSB7XG4gICAgQGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQge1xuICAgICAgQHJldHVybiBcIiN7JGJyb3dzZXJ9ICN7JHZlcnNpb259IGlzIGluY29tcGF0aWJsZSB3aXRoICN7JGN1cnJlbnQtcHJlZml4fS5cIlxuICAgIH0gQGVsc2Uge1xuICAgICAgQHJldHVybiB0cnVlO1xuICAgIH1cbiAgfVxuICAkY3VycmVudC1yYW5nZTogbWFwLWdldCgkY3VycmVudC1icm93c2VyLXZlcnNpb25zLCAkYnJvd3Nlcik7XG4gICRjdXJyZW50LW1pbjogaWYoJGN1cnJlbnQtcmFuZ2UsIG50aCgkY3VycmVudC1yYW5nZSwgMSksIG51bGwpO1xuICAkY3VycmVudC1tYXg6IGlmKCRjdXJyZW50LXJhbmdlLCBudGgoJGN1cnJlbnQtcmFuZ2UsIDIpLCBudWxsKTtcbiAgQGlmIG5vdCAoJHZlcnNpb24gYW5kICRjdXJyZW50LW1heCkge1xuICAgIC8vIFdlIGRvbid0IGhhdmUgYW55IHZlcnNpb25zIHRvIGNvbXBhcmVcbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9IEBlbHNlIHtcbiAgICAvLyBJZiB0aGUgdmVyc2lvbiBpcyBsZXNzIHRoYW4gdGhlIGN1cnJlbnQgbWluLCBpdCBpcyBub3Qgc3VwcG9ydGVkXG4gICAgJHRvby1vbGQ6IGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJHZlcnNpb24sICRjdXJyZW50LW1pbikgPCAwO1xuICAgICR0b28tbmV3OiBjb21wYXJlLWJyb3dzZXItdmVyc2lvbnMoJGJyb3dzZXIsICR2ZXJzaW9uLCAkY3VycmVudC1tYXgpID4gMDtcbiAgICBAaWYgJHRvby1vbGQgb3IgJHRvby1uZXcge1xuICAgICAgQGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQge1xuICAgICAgICBAcmV0dXJuIFwiVGhlIGN1cnJlbnQgc2NvcGUgb25seSB3b3JrcyB3aXRoICN7ZGlzcGxheS1icm93c2VyLXJhbmdlKCRicm93c2VyLCAkY3VycmVudC1taW4sICRjdXJyZW50LW1heCl9LlwiO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgIEByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIHtcbiAgICAgIEByZXR1cm4gZmFsc2U7XG4gICAgfVxuICB9XG59XG5cbi8vIENoZWNrIHdoZXRoZXIgdGhlIGJyb3dzZXIgaXMgc3VwcG9ydGVkIGFjY29yZGluZyB0byB0aGUgc3VwcG9ydGVkIGJyb3dzZXJzLFxuLy8gZGVjbGFyZWQgbWluaW11bSBzdXBwb3J0IGFuZCB1c2FnZSB0aHJlc2hvbGRzLlxuQGZ1bmN0aW9uIHN1cHBvcnQtbGVnYWN5LWJyb3dzZXIoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJG1heC12ZXJzaW9uOiBudWxsLCAkdGhyZXNob2xkOiAkY3JpdGljYWwtdXNhZ2UtdGhyZXNob2xkKSB7XG4gIEBpZiBub3QgaW5kZXgoJHN1cHBvcnRlZC1icm93c2VycywgJGJyb3dzZXIpIHtcbiAgICBAcmV0dXJuIGZhbHNlO1xuICB9XG4gIC8vIENoZWNrIGFnYWlzdCB1c2FnZSBzdGF0cyBhbmQgZGVjbGFyZWQgbWluaW11bXNcbiAgJG1pbi1yZXF1aXJlZC12ZXJzaW9uOiBtYXAtZ2V0KCRicm93c2VyLW1pbmltdW0tdmVyc2lvbnMsICRicm93c2VyKTtcbiAgJHVzYWdlOiBpZigkbWF4LXZlcnNpb24sXG4gICAgICAgICAgICAgb21pdHRlZC11c2FnZSgkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb24pLFxuICAgICAgICAgICAgIG9taXR0ZWQtdXNhZ2UoJGJyb3dzZXIsICRtaW4tdmVyc2lvbikpO1xuICBAcmV0dXJuICR1c2FnZSA+ICR0aHJlc2hvbGQgb3JcbiAgICAgICAgICAoJG1pbi1yZXF1aXJlZC12ZXJzaW9uIGFuZFxuICAgICAgICAgICBjb21wYXJlLWJyb3dzZXItdmVyc2lvbnMoJGJyb3dzZXIsICRtYXgtdmVyc2lvbiBvciAkbWluLXZlcnNpb24sICRtaW4tcmVxdWlyZWQtdmVyc2lvbikgPj0gMCk7XG59XG5cbi8vIEluY2x1ZGUgY29udGVudCBmb3IgYSBsZWdhY3kgYnJvd3NlclxuLy8gVmVyc2lvbiBjYW4gYmUgYSBzaW5nbGUgdmVyc2lvbiBzdHJpbmcgb3IgYSBsaXN0IG9mIHZlcnNpb25zIG9yZGVyZWQgZnJvbSBvbGRlc3QgdG8gbmV3ZXN0LlxuQG1peGluIGZvci1sZWdhY3ktYnJvd3NlcigkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb246ICRtaW4tdmVyc2lvbixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJHRocmVzaG9sZDogJGNyaXRpY2FsLXVzYWdlLXRocmVzaG9sZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJHJhbmdlczogKCRicm93c2VyOiAkbWluLXZlcnNpb24gJG1heC12ZXJzaW9uKSkge1xuICBAaWYgbm90IGJyb3dzZXItb3V0LW9mLXNjb3BlKCRicm93c2VyLCAkbWF4LXZlcnNpb24pIGFuZFxuICAgICAgc3VwcG9ydC1sZWdhY3ktYnJvd3NlcigkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb24sICR0aHJlc2hvbGQpXG4gIHtcbiAgICBAaWYgJGRlYnVnLWJyb3dzZXItc3VwcG9ydCB7XG4gICAgICAvKiBDb250ZW50IGZvciAje2Rpc3BsYXktYnJvd3Nlci1yYW5nZSgkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb24pfS5cbiAgICAgIE1pbiB2ZXJzaW9uOiAje21hcC1nZXQoJGJyb3dzZXItbWluaW11bS12ZXJzaW9ucywgJGJyb3dzZXIpIG9yIHVuc3BlY2lmaWVkfS5cbiAgICAgIFVzZXIgdGhyZXNob2xkIHRvIGtlZXA6ICN7JHRocmVzaG9sZH0lLiBJZiAje2Rpc3BsYXktYnJvd3Nlci1yYW5nZSgkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb24pfSBhcmUgb21pdHRlZDogI3tvbWl0dGVkLXVzYWdlKCRicm93c2VyLCAkbWluLXZlcnNpb24sICRtYXgtdmVyc2lvbil9JS4gKi9cbiAgICB9XG4gICAgQGluY2x1ZGUgd2l0aC1icm93c2VyLXJhbmdlcyhpbnRlcnNlY3QtYnJvd3Nlci1yYW5nZXMoJGN1cnJlbnQtYnJvd3Nlci12ZXJzaW9ucywgJHJhbmdlcykpIHtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfSBAZWxzZSBpZiAkZGVidWctYnJvd3Nlci1zdXBwb3J0IGFuZCBicm93c2VyLW91dC1vZi1zY29wZSgkYnJvd3NlciwgJG1heC12ZXJzaW9uKSB7XG4gICAgLyogQ29udGVudCBmb3IgI3tkaXNwbGF5LWJyb3dzZXItcmFuZ2UoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJG1heC12ZXJzaW9uKX0gb21pdHRlZC5cbiAgICAgICBOb3QgYWxsb3dlZCBpbiB0aGUgY3VycmVudCBzY29wZTogI3ticm93c2VyLW91dC1vZi1zY29wZSgkYnJvd3NlciwgJG1heC12ZXJzaW9uKX0gKi9cbiAgfSBAZWxzZSBpZiAkZGVidWctYnJvd3Nlci1zdXBwb3J0IGFuZCBub3RcbiAgICAgICAgICAgICBzdXBwb3J0LWxlZ2FjeS1icm93c2VyKCRicm93c2VyLCAkbWluLXZlcnNpb24sICRtYXgtdmVyc2lvbiwgJHRocmVzaG9sZCkge1xuICAgIEBpZiBvbWl0dGVkLXVzYWdlKCRicm93c2VyLCAkbWluLXZlcnNpb24sICRtYXgtdmVyc2lvbikgPiAkdGhyZXNob2xkIHtcbiAgICAgIC8qIENvbnRlbnQgZm9yICN7ZGlzcGxheS1icm93c2VyLXJhbmdlKCRicm93c2VyLCAkbWluLXZlcnNpb24sICRtYXgtdmVyc2lvbil9IG9taXR0ZWQuXG4gICAgICAgICBVc2VyIHRocmVzaG9sZCB0byBrZWVwOiAjeyR0aHJlc2hvbGR9JS4gSWYgI3tkaXNwbGF5LWJyb3dzZXItcmFuZ2UoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJG1heC12ZXJzaW9uKX0gYW5kIGJlbG93IGFyZSBvbWl0dGVkOiAje29taXR0ZWQtdXNhZ2UoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJG1heC12ZXJzaW9uKX0lLiAqL1xuICAgIH0gQGVsc2Uge1xuICAgICAgLyogQ29udGVudCBmb3IgI3tkaXNwbGF5LWJyb3dzZXItcmFuZ2UoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJG1heC12ZXJzaW9uKX0gb21pdHRlZC5cbiAgICAgICAgIE1pbmltdW0gc3VwcG9ydCBpcyAje21hcC1nZXQoJGJyb3dzZXItbWluaW11bS12ZXJzaW9ucywgJGJyb3dzZXIpfS4gKi9cbiAgICB9XG4gIH1cbn1cblxuQGZ1bmN0aW9uIGRpc3BsYXktYnJvd3Nlci1yYW5nZSgkYnJvd3NlciwgJG1pbi12ZXJzaW9uLCAkbWF4LXZlcnNpb246ICRtaW4tdmVyc2lvbikge1xuICBAcmV0dXJuIFwiI3t1bnF1b3RlKCRicm93c2VyKX0gI3t1bnF1b3RlKCRtaW4tdmVyc2lvbil9I3tpZigkbWF4LXZlcnNpb24gIT0gJG1pbi12ZXJzaW9uLCB1bnF1b3RlKCcgLScpIHVucXVvdGUoJG1heC12ZXJzaW9uKSwgbnVsbCl9XCI7XG59XG5cblxuLy8gUmVuZGVycyB0aGUgY29udGVudCBvbmNlIGlmIGFueSBvZiB0aGUgbGVnYWN5IGJyb3dzZXJzIGFyZSBzdXBwb3J0ZWQuXG4vLyAkYnJvd3NlcnMgaXMgYSBtYXAgb2YgYnJvd3NlciBuYW1lIHRvIHZlcnNpb24gcmFuZ2VzXG5AbWl4aW4gZm9yLWxlZ2FjeS1icm93c2VycygkYnJvd3NlcnMsICR0aHJlc2hvbGQ6ICRjcml0aWNhbC11c2FnZS10aHJlc2hvbGQpIHtcbiAgJHJlbmRlcmVkOiBmYWxzZTtcbiAgQGVhY2ggJGJyb3dzZXIsICRyYW5nZSBpbiAkYnJvd3NlcnMge1xuICAgIEBpZiBub3QgJHJlbmRlcmVkIHtcbiAgICAgIEBpbmNsdWRlIGZvci1sZWdhY3ktYnJvd3NlcigkYnJvd3NlciwgJHJhbmdlLi4uLCAkdGhyZXNob2xkOiAkdGhyZXNob2xkLCAkcmFuZ2VzOiAkYnJvd3NlcnMpIHtcbiAgICAgICAgJHJlbmRlcmVkOiB0cnVlO1xuICAgICAgICBAY29udGVudDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLy8gSWYgdGhlcmUncyBhIHByZWZpeCBjb250ZXh0IGluIHNjb3BlLCB0aGlzIHdpbGwgb25seSBvdXRwdXQgdGhlIGNvbnRlbnQgaWYgdGhlIHByZWZpeCBtYXRjaGVzLlxuLy8gT3RoZXJ3aXNlLCBzZXRzIHRoZSBjdXJyZW50IHByZWZpeCBzY29wZSBhbmQgb3V0cHV0cyB0aGUgY29udGVudC5cbkBtaXhpbiB3aXRoLXByZWZpeCgkcHJlZml4KSB7XG4gIEBpZiAkY3VycmVudC1wcmVmaXggb3IgJHByZWZpeC1jb250ZXh0IHtcbiAgICBAaWYgJGN1cnJlbnQtcHJlZml4ID09ICRwcmVmaXggb3IgJHByZWZpeC1jb250ZXh0ID09ICRwcmVmaXgge1xuICAgICAgQGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQge1xuICAgICAgICBAaWYgJHByZWZpeCB7XG4gICAgICAgICAgLyogY29udGVudCBmb3IgI3skcHJlZml4fSBiZWNhdXNlICN7JGN1cnJlbnQtcHJlZml4IG9yICRwcmVmaXgtY29udGV4dH0gaXMgYWxyZWFkeSBpbiBzY29wZS4gKi9cbiAgICAgICAgfSBAZWxzZSB7XG4gICAgICAgICAgLyogdW5wcmVmaXhlZCBjb250ZW50LiAjeyRjdXJyZW50LXByZWZpeCBvciAkcHJlZml4LWNvbnRleHR9IGlzIGFscmVhZHkgaW4gc2NvcGUuICovXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICRvbGQtcHJlZml4LWNvbnRleHQ6ICRwcmVmaXgtY29udGV4dDtcbiAgICAgICRvbGQtcHJlZml4OiAkY3VycmVudC1wcmVmaXg7XG4gICAgICAkcHJlZml4LWNvbnRleHQ6ICRwcmVmaXgtY29udGV4dCBvciAkY3VycmVudC1wcmVmaXggIWdsb2JhbDtcbiAgICAgICRjdXJyZW50LXByZWZpeDogJHByZWZpeCAhZ2xvYmFsO1xuICAgICAgQGNvbnRlbnQ7XG4gICAgICAkcHJlZml4LWNvbnRleHQ6ICRvbGQtcHJlZml4LWNvbnRleHQgIWdsb2JhbDtcbiAgICAgICRjdXJyZW50LXByZWZpeDogJG9sZC1wcmVmaXggIWdsb2JhbDtcbiAgICB9IEBlbHNlIGlmICRwcmVmaXggPT0gbnVsbCB7XG4gICAgICAkb2xkLXByZWZpeC1jb250ZXh0OiAkcHJlZml4LWNvbnRleHQ7XG4gICAgICAkcHJlZml4LWNvbnRleHQ6ICRwcmVmaXgtY29udGV4dCBvciAkY3VycmVudC1wcmVmaXggIWdsb2JhbDtcbiAgICAgICRjdXJyZW50LXByZWZpeDogbnVsbCAhZ2xvYmFsO1xuICAgICAgQGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQge1xuICAgICAgICAvKiBDb250ZW50IGZvciBvZmZpY2lhbCBzeW50YXguIFByZWZpeCBjb250ZXh0IGlzIHN0aWxsICN7JHByZWZpeC1jb250ZXh0fS4gKi9cbiAgICAgIH1cbiAgICAgIEBjb250ZW50O1xuICAgICAgJGN1cnJlbnQtcHJlZml4OiAkcHJlZml4LWNvbnRleHQgIWdsb2JhbDtcbiAgICAgICRwcmVmaXgtY29udGV4dDogJG9sZC1wcmVmaXgtY29udGV4dCAhZ2xvYmFsO1xuICAgIH0gQGVsc2UgaWYgJGRlYnVnLWJyb3dzZXItc3VwcG9ydCB7XG4gICAgICAvKiBPbWl0dGluZyBjb250ZW50IGZvciAjeyRwcmVmaXh9IGJlY2F1c2UgI3skY3VycmVudC1wcmVmaXh9IGlzIGFscmVhZHkgaW4gc2NvcGUuICovXG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaWYgJGRlYnVnLWJyb3dzZXItc3VwcG9ydCBhbmQgJHByZWZpeCB7XG4gICAgICAvKiBDcmVhdGluZyBuZXcgI3skcHJlZml4fSBjb250ZXh0LiAqL1xuICAgIH1cbiAgICAkcHJlZml4LWNvbnRleHQ6ICRwcmVmaXggIWdsb2JhbDtcbiAgICAkY3VycmVudC1wcmVmaXg6ICRwcmVmaXggIWdsb2JhbDtcbiAgICBAY29udGVudDtcbiAgICAkY3VycmVudC1wcmVmaXg6IG51bGwgIWdsb2JhbDtcbiAgICAkcHJlZml4LWNvbnRleHQ6IG51bGwgIWdsb2JhbDtcbiAgfVxufVxuXG5AZnVuY3Rpb24gcHJlZml4ZXMtZm9yLWNhcGFiaWxpdHkoJGNhcGFiaWxpdHksICR0aHJlc2hvbGQsICRjYXBhYmlsaXR5LW9wdGlvbnM6ICRkZWZhdWx0LWNhcGFiaWxpdHktb3B0aW9ucykge1xuICAkcmVzdWx0OiAoKTtcbiAgQGVhY2ggJHByZWZpeCBpbiBicm93c2VyLXByZWZpeGVzKCRzdXBwb3J0ZWQtYnJvd3NlcnMpIHtcbiAgICAkcmVzdWx0OiBtYXAtbWVyZ2UoJHJlc3VsdCxcbiAgICAgICAgICAgICAgICAgICAgICAoJHByZWZpeDogdXNlLXByZWZpeCgkcHJlZml4LCAkY2FwYWJpbGl0eSwgJHRocmVzaG9sZCwgJGNhcGFiaWxpdHktb3B0aW9ucykpKTtcbiAgfVxuICBAcmV0dXJuICRyZXN1bHQ7XG59XG5cbi8vIFlpZWxkcyB0byB0aGUgbWl4aW4gY29udGVudCBvbmNlIGZvciBlYWNoIHByZWZpeCByZXF1aXJlZC5cbi8vIFRoZSBjdXJyZW50IHByZWZpeCBpcyBzZXQgdG8gdGhlICRjdXJyZW50LXByZWZpeCBnbG9iYWwgZm9yIHVzZSBieSB0aGUgaW5jbHVkZWQgY29udGVudC5cbi8vIEFsc28geWllbGRzIHRvIHRoZSBjb250ZW50IG9uY2Ugd2l0aCAkY3VycmVudC1wcmVmaXggc2V0IHRvIG51bGwgZm9yIHRoZSBvZmZpY2lhbCB2ZXJzaW9uXG4vLyBhcyBsb25nIGFzIHRoZXJlJ3Mgbm90IGFscmVhZHkgYSBwcmVmaXggaW4gc2NvcGUuXG5AbWl4aW4gd2l0aC1lYWNoLXByZWZpeCgkY2FwYWJpbGl0eSwgJHRocmVzaG9sZCwgJGNhcGFiaWxpdHktb3B0aW9uczogJGRlZmF1bHQtY2FwYWJpbGl0eS1vcHRpb25zKSB7XG4gIEBlYWNoICRwcmVmaXgsICRzaG91bGQtdXNlLXByZWZpeCBpbiBwcmVmaXhlcy1mb3ItY2FwYWJpbGl0eSgkY2FwYWJpbGl0eSwgJHRocmVzaG9sZCwgJGNhcGFiaWxpdHktb3B0aW9ucykge1xuICAgIEBpZiAkc2hvdWxkLXVzZS1wcmVmaXgge1xuICAgICAgQGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQgYW5kIHR5cGUtb2YoJHNob3VsZC11c2UtcHJlZml4KSA9PSBsaXN0IHtcbiAgICAgICAgLyogQ2FwYWJpbGl0eSAjeyRjYXBhYmlsaXR5fSBpcyBwcmVmaXhlZCB3aXRoICN7JHByZWZpeH0gYmVjYXVzZSAjeyRzaG91bGQtdXNlLXByZWZpeH0gaXMgcmVxdWlyZWQuICovXG4gICAgICB9IEBlbHNlIGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQgYW5kIHR5cGUtb2YoJHNob3VsZC11c2UtcHJlZml4KSA9PSBudW1iZXIge1xuICAgICAgICAvKiBDYXBhYmlsaXR5ICN7JGNhcGFiaWxpdHl9IGlzIHByZWZpeGVkIHdpdGggI3skcHJlZml4fSBiZWNhdXNlICN7JHNob3VsZC11c2UtcHJlZml4fSUgb2YgdXNlcnMgbmVlZCBpdCB3aGljaCBpcyBtb3JlIHRoYW4gdGhlIHRocmVzaG9sZCBvZiAjeyR0aHJlc2hvbGR9JS4gKi9cbiAgICAgIH1cbiAgICAgIEBpbmNsdWRlIHdpdGgtcHJlZml4KCRwcmVmaXgpIHtcbiAgICAgICAgQGluY2x1ZGUgd2l0aC1icm93c2VyLXJhbmdlcygkY2FwYWJpbGl0eSkge1xuICAgICAgICAgIEBjb250ZW50O1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiAkZGVidWctYnJvd3Nlci1zdXBwb3J0IHtcbiAgICAgIC8qIENhcGFiaWxpdHkgI3skY2FwYWJpbGl0eX0gaXMgbm90IHByZWZpeGVkIHdpdGggI3skcHJlZml4fSBiZWNhdXNlICN7cHJlZml4LXVzYWdlKCRwcmVmaXgsICRjYXBhYmlsaXR5LCAkY2FwYWJpbGl0eS1vcHRpb25zKX0lIG9mIHVzZXJzIGFyZSBhZmZlY3RlZCB3aGljaCBpcyBsZXNzIHRoYW4gdGhlIHRocmVzaG9sZCBvZiAjeyR0aHJlc2hvbGR9LiAqL1xuICAgIH1cbiAgfVxuICBAaW5jbHVkZSB3aXRoLXByZWZpeChudWxsKSB7XG4gICAgQGluY2x1ZGUgd2l0aC1icm93c2VyLXJhbmdlcygkY2FwYWJpbGl0eSkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG59XG5cbi8vIFJldHVybnMgdHJ1ZSBpZiBhdCBsZWFzdCBvbmUgYnJvd3Nlci12ZXJzaW9uIHBhaXIgaW4gJHN1YnNldC1yYW5nZXNcbi8vIGlzIGEgaGlnaGVyIChvciBzYW1lKSB2ZXJzaW9uIHRoYW4gdGhlIGJyb3dzZXItdmVyc2lvbiBwYWlycyBpblxuLy8gJHJhbmdlcy5cbkBmdW5jdGlvbiBoYXMtYnJvd3Nlci1zdWJzZXQoJHJhbmdlcywgJHN1YnNldC1yYW5nZXMpIHtcbiAgJGZvdW5kLW1pc21hdGNoOiBmYWxzZTtcbiAgQGVhY2ggJGJyb3dzZXIsICRzdWJzZXQtcmFuZ2UgaW4gJHN1YnNldC1yYW5nZXMge1xuICAgICRyYW5nZTogbWFwLWdldCgkcmFuZ2VzLCAkYnJvd3Nlcik7XG4gICAgQGlmICRyYW5nZSB7XG4gICAgICAkbWluLTE6IG50aCgkc3Vic2V0LXJhbmdlLCAxKTtcbiAgICAgICRtYXgtMTogbnRoKCRzdWJzZXQtcmFuZ2UsIDIpO1xuICAgICAgJG1pbi0yOiBudGgoJHJhbmdlLCAxKTtcbiAgICAgICRtYXgtMjogbnRoKCRyYW5nZSwgMik7XG4gICAgICBAaWYgKGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1pbi0yLCAkbWluLTEpIDw9IDAgYW5kXG4gICAgICAgICAgIGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1pbi0xLCAkbWF4LTIpIDw9IDApIG9yXG4gICAgICAgICAgKGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1pbi0yLCAkbWF4LTEpIDw9IDAgYW5kXG4gICAgICAgICAgIGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1heC0xLCAkbWF4LTIpIDw9IDApIG9yXG4gICAgICAgICAgKGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1pbi0xLCAkbWluLTIpIDw9IDAgYW5kXG4gICAgICAgICAgIGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1heC0xLCAkbWF4LTIpID49IDApIG9yXG4gICAgICAgICAgKGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1pbi0xLCAkbWluLTIpID49IDAgYW5kXG4gICAgICAgICAgIGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG1heC0xLCAkbWF4LTIpIDw9IDApIHtcbiAgICAgICAgQHJldHVybiB0cnVlO1xuICAgICAgfSBAZWxzZSB7XG4gICAgICAgICRmb3VuZC1taXNtYXRjaDogdHJ1ZVxuICAgICAgfVxuICAgIH1cbiAgfVxuICBAcmV0dXJuIG5vdCAkZm91bmQtbWlzbWF0Y2g7XG59XG5cbi8vIFdoZW4gdGhlIHNhbWUgYnJvd3NlciBpcyBpbiBib3RoIG1hcHMsIHRoZW4gdGhlIG1pbmltdW0gd2lsbCBiZSBzZXRcbi8vIHRvIHRoZSBtYXhpbXVtIG9mIHRoZSB0d28gbWluaW11bSB2ZXJzaW9ucywgYW5kIHRoZSBtYXhpbXVtIHdpbGwgYmVcbi8vIHNldCB0byB0aGUgbWlubXVtIG9mIHRoZSB0d28gbWF4aW11bSB2ZXJzaW9ucy5cbkBmdW5jdGlvbiBpbnRlcnNlY3QtYnJvd3Nlci1yYW5nZXMoJHJhbmdlcywgJG5ldy1yYW5nZXMpIHtcbiAgQGVhY2ggJGJyb3dzZXIsICRuZXctcmFuZ2UgaW4gJG5ldy1yYW5nZXMge1xuICAgICRvbGQtcmFuZ2U6IG1hcC1nZXQoJHJhbmdlcywgJGJyb3dzZXIpO1xuICAgIEBpZiAkb2xkLXJhbmdlIHtcbiAgICAgICRvbGQtbWluOiBudGgoJG9sZC1yYW5nZSwgMSk7XG4gICAgICAkb2xkLW1heDogbnRoKCRvbGQtcmFuZ2UsIDIpO1xuICAgICAgJG5ldy1taW46IG50aCgkbmV3LXJhbmdlLCAxKTtcbiAgICAgICRuZXctbWF4OiBudGgoJG5ldy1yYW5nZSwgMik7XG4gICAgICAkbWF4aW1pbjogaWYoY29tcGFyZS1icm93c2VyLXZlcnNpb25zKCRicm93c2VyLCAkb2xkLW1pbiwgJG5ldy1taW4pID4gMCxcbiAgICAgICAgICAgICAgICAgICAkb2xkLW1pbiwgJG5ldy1taW4pO1xuICAgICAgJG1pbmltYXg6IGlmKGNvbXBhcmUtYnJvd3Nlci12ZXJzaW9ucygkYnJvd3NlciwgJG9sZC1tYXgsICRuZXctbWF4KSA8IDAsXG4gICAgICAgICAgICAgICAgICAgJG9sZC1tYXgsICRuZXctbWF4KTtcbiAgICAgICRyYW5nZXM6IG1hcC1tZXJnZSgkcmFuZ2VzLCAoJGJyb3dzZXI6ICRtYXhpbWluICRtaW5pbWF4KSk7XG4gICAgfSBAZWxzZSB7XG4gICAgICAkcmFuZ2VzOiBtYXAtbWVyZ2UoJHJhbmdlcywgKCRicm93c2VyOiAkbmV3LXJhbmdlKSk7XG4gICAgfVxuICB9XG4gIEByZXR1cm4gJHJhbmdlcztcbn1cblxuLy8gSWYgcGFzc2VkIGEgbWFwLCB0aGF0IHdpbGwgYmUgdGhlIG5ldyBicm93c2VyIHJhbmdlcy5cbi8vIE90aGVyd2lzZSBhIHJhbmdlIG1hcCB3aWxsIGJlIGNyZWF0ZWQgYmFzZWQgb24gdGhlIGdpdmVuIGNhcGFiaWxpdHkgYW5kIHByZWZpeFxuLy8gdXNpbmcgdGhlIGBicm93c2VyLXJhbmdlcygkY2FwYWJpbGl0eSwgJHByZWZpeClgIGZ1bmN0aW9uLlxuLy9cbi8vIElmIHRoZXJlIGFyZSBjdXJyZW50IHJhbmdlcyBpbiBzY29wZSBhbmQgdGhlIG5ldyByYW5nZXMgaGF2ZSBzb21lIG92ZXJsYXBcbi8vIHdpdGggdGhlIGN1cnJlbnQsIFxuLy9cbi8vIElmIHRoZXJlIGlzIG5vIG92ZXJsYXAsIHRoZW4gdGhlIGNvbnRlbnQgd2lsbCBub3QgYmUgcmVuZGVyZWQuXG5AbWl4aW4gd2l0aC1icm93c2VyLXJhbmdlcygkY2FwYWJpbGl0eSwgJHByZWZpeDogJGN1cnJlbnQtcHJlZml4KSB7XG4gICRuZXctcmFuZ2VzOiBudWxsO1xuICBAaWYgdHlwZS1vZigkY2FwYWJpbGl0eSkgPT0gbWFwIHtcbiAgICAkbmV3LXJhbmdlczogJGNhcGFiaWxpdHk7XG4gIH0gQGVsc2Uge1xuICAgICRuZXctcmFuZ2VzOiBicm93c2VyLXJhbmdlcygkY2FwYWJpbGl0eSwgJHByZWZpeCk7XG4gIH1cblxuICBAaWYgaGFzLWJyb3dzZXItc3Vic2V0KCRjdXJyZW50LWJyb3dzZXItdmVyc2lvbnMsICRuZXctcmFuZ2VzKSB7XG4gICAgJG9sZC1yYW5nZXM6ICRjdXJyZW50LWJyb3dzZXItdmVyc2lvbnM7XG4gICAgJGN1cnJlbnQtYnJvd3Nlci12ZXJzaW9uczogaW50ZXJzZWN0LWJyb3dzZXItcmFuZ2VzKCRvbGQtcmFuZ2VzLCAkbmV3LXJhbmdlcykgIWdsb2JhbDtcbiAgICBAY29udGVudDtcbiAgICAkY3VycmVudC1icm93c2VyLXZlcnNpb25zOiAkb2xkLXJhbmdlcyAhZ2xvYmFsO1xuICB9IEBlbHNlIGlmICRkZWJ1Zy1icm93c2VyLXN1cHBvcnQge1xuICAgIC8qIEV4Y2x1ZGluZyBjb250ZW50IGJlY2F1c2UgI3tpbnNwZWN0KCRuZXctcmFuZ2VzKX0gaXMgbm90IGluY2x1ZGVkIHdpdGhpblxuICAgICAgICN7aW5zcGVjdCgkY3VycmVudC1icm93c2VyLXZlcnNpb25zKX0gKi9cbiAgfVxufVxuXG4vLyBSZXR1cm5zIHRydWUgaWYgdGhlIHByZWZpeGVkIHVzYWdlIHN0YXRzIGZvciB0aGUgY2FwYWJpbGl0eSBleGNlZWQgdGhlIHRocmVzaG9sZFxuLy8gb3IgaWYgdGhlIG1pbmltdW0gdmVyc2lvbiBmb3IgYSBzdXBwb3J0ZWQgYnJvd3NlciB3b3VsZCByZXF1aXJlIGEgcHJlZml4IGZvciB0aGUgY2FwYWJpbGl0eS5cbkBmdW5jdGlvbiB1c2UtcHJlZml4KCRwcmVmaXgsICRjYXBhYmlsaXR5LCAkdGhyZXNob2xkLCAkY2FwYWJpbGl0eS1vcHRpb25zOiAkZGVmYXVsdC1jYXBhYmlsaXR5LW9wdGlvbnMpIHtcbiAgJHVzYWdlOiBwcmVmaXgtdXNhZ2UoJHByZWZpeCwgJGNhcGFiaWxpdHksICRjYXBhYmlsaXR5LW9wdGlvbnMpO1xuICBAaWYgJHVzYWdlID4gJHRocmVzaG9sZCB7XG4gICAgQHJldHVybiAkdXNhZ2U7XG4gIH0gQGVsc2Uge1xuICAgIEBlYWNoICRicm93c2VyIGluIGJyb3dzZXJzKCRwcmVmaXgpIHtcbiAgICAgIEBpZiBpbmRleCgkc3VwcG9ydGVkLWJyb3dzZXJzLCAkYnJvd3Nlcikge1xuICAgICAgICAkbWluLXZlcnNpb246IG1hcC1nZXQoJGJyb3dzZXItbWluaW11bS12ZXJzaW9ucywgJGJyb3dzZXIpO1xuICAgICAgICBAaWYgJG1pbi12ZXJzaW9uIHtcbiAgICAgICAgICAkYWN0dWFsLXByZWZpeDogYnJvd3Nlci1yZXF1aXJlcy1wcmVmaXgoJGJyb3dzZXIsICRtaW4tdmVyc2lvbiwgJGNhcGFiaWxpdHksICRjYXBhYmlsaXR5LW9wdGlvbnMpO1xuICAgICAgICAgIEBpZiAkYWN0dWFsLXByZWZpeCBhbmQgJHByZWZpeCA9PSAkYWN0dWFsLXByZWZpeCB7XG4gICAgICAgICAgICBAcmV0dXJuICRicm93c2VyICRtaW4tdmVyc2lvbjtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgQHJldHVybiBmYWxzZTtcbn1cblxuQGZ1bmN0aW9uIHByZWZpeC1pZGVudGlmaWVyKCRpZGVudCwgJHByZWZpeDogJGN1cnJlbnQtcHJlZml4KSB7XG4gIEByZXR1cm4gdW5xdW90ZShcIiN7JHByZWZpeH0je2lmKCRwcmVmaXgsICctJywgbnVsbCl9I3skaWRlbnR9XCIpO1xufVxuXG4vLyBPdXRwdXQgYSBwcm9wZXJ0eSBhbmQgdmFsdWUgdXNpbmcgdGhlIGN1cnJlbnQgcHJlZml4LlxuLy8gSXQgd2lsbCBiZSB1bnByZWZpeGVkIGlmICRjdXJyZW50LXByZWZpeCBpcyBudWxsLlxuQG1peGluIHByZWZpeC1wcm9wKCRwcm9wZXJ0eSwgJHZhbHVlLCAkcHJlZml4OiAkY3VycmVudC1wcmVmaXgpIHtcbiAgI3twcmVmaXgtaWRlbnRpZmllcigkcHJvcGVydHksICRwcmVmaXgpfTogJHZhbHVlO1xufVxuXG4vLyBFbWl0IGEgc2V0IG9mIHByb3BlcnRpZXMgd2l0aCB0aGUgcHJlZml4IGdvdmVybmVkIGJ5IHRoZSBjYXBhYmlsaXR5IGFuZCB1c2FnZSB0aHJlc2hvbGQgZ2l2ZW4uXG4vL1xuLy8gRXhhbXBsZTpcbi8vXG4vLyAgICAgQGluY2x1ZGUgcHJlZml4ZWQtcHJvcGVydGllcyhjc3MtYW5pbWF0aW9uLCAkYW5pbWF0aW9uLXN1cHBvcnQtdGhyZXNob2xkLFxuLy8gICAgICAgKGFuaW1hdGlvbi1uYW1lOiBmb28sIGFuaW1hdGlvbi1kdXJhdGlvbjogMnMpXG4vLyAgICAgKTtcbkBtaXhpbiBwcmVmaXhlZC1wcm9wZXJ0aWVzKCRjYXBhYmlsaXR5LCAkdGhyZXNob2xkLCAkcHJvcGVydGllcywgJGNhcGFiaWxpdHktb3B0aW9uczogJGRlZmF1bHQtY2FwYWJpbGl0eS1vcHRpb25zKSB7XG4gIEBpbmNsdWRlIHdpdGgtZWFjaC1wcmVmaXgoJGNhcGFiaWxpdHksICR0aHJlc2hvbGQsICRjYXBhYmlsaXR5LW9wdGlvbnMpIHtcbiAgICBAZWFjaCAkcHJvcCwgJHZhbHVlIGluICRwcm9wZXJ0aWVzIHtcbiAgICAgIEBpbmNsdWRlIHByZWZpeC1wcm9wKCRwcm9wLCAkdmFsdWUpO1xuICAgIH1cbiAgfVxufVxuXG5cbi8vIEBwcml2YXRlXG5AZnVuY3Rpb24gd2Fybi1hYm91dC1vbGQtdmFyaWFibGVzKCkge1xuICAkb2xkLXZhcmlhYmxlcy1pbi11c2U6ICgpO1xuICBAZWFjaCAkb2xkLXZhcmlhYmxlLW5hbWUgaW5cbiAgICAgICAgKGxlZ2FjeS1zdXBwb3J0LWZvci1pZSwgbGVnYWN5LXN1cHBvcnQtZm9yLWllNiwgbGVnYWN5LXN1cHBvcnQtZm9yLWllNyxcbiAgICAgICAgIGxlZ2FjeS1zdXBwb3J0LWZvci1pZTgsIGxlZ2FjeS1zdXBwb3J0LWZvci1tb3ppbGxhLCBsZWdhY3ktc3VwcG9ydC1mb3Itd2Via2l0LFxuICAgICAgICAgZXhwZXJpbWVudGFsLXN1cHBvcnQtZm9yLW1vemlsbGEsIGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci13ZWJraXQsXG4gICAgICAgICBleHBlcmltZW50YWwtc3VwcG9ydC1mb3Itb3BlcmEsIGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1taWNyb3NvZnQsXG4gICAgICAgICBleHBlcmltZW50YWwtc3VwcG9ydC1mb3Ita2h0bWwsIGV4cGVyaW1lbnRhbC1zdXBwb3J0LWZvci1zdmcpXG4gIHtcbiAgICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cygkb2xkLXZhcmlhYmxlLW5hbWUpIHtcbiAgICAgICRvbGQtdmFyaWFibGVzLWluLXVzZTogYXBwZW5kKCRvbGQtdmFyaWFibGVzLWluLXVzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVucXVvdGUoXCIkI3skb2xkLXZhcmlhYmxlLW5hbWV9XCIpLCBjb21tYSk7XG4gICAgfVxuICB9XG4gIEBpZiBsZW5ndGgoJG9sZC12YXJpYWJsZXMtaW4tdXNlKSA+IDAge1xuICAgIEB3YXJuIFwiQ29tcGFzcyBoYXMgY2hhbmdlZCBob3cgYnJvd3NlciBzdXBwb3J0IGlzIGNvbmZpZ3VyZWQuIFwiICtcbiAgICAgICAgICBcIlRoZSBmb2xsb3dpbmcgY29uZmlndXJhdGlvbiB2YXJpYWJsZXMgXCIgK1xuICAgICAgICAgIFwiYXJlIG5vIGxvbmdlciBzdXBwb3J0ZWQ6ICN7JG9sZC12YXJpYWJsZXMtaW4tdXNlfS5cIiArXG4gICAgICAgICAgXCJEZXRhaWxzOiBodHRwOi8vY29tcGFzcy1zdHlsZS5vcmcvaGVscC9kb2N1bWVudGF0aW9uL3R1bmluZy12ZW5kb3ItcHJlZml4ZXMvXCJcbiAgfVxuICBAcmV0dXJuICRvbGQtdmFyaWFibGVzLWluLXVzZTtcbn1cblxuLy8gQHByaXZhdGVcbkBmdW5jdGlvbiB3YXJuLWFib3V0LXBpZS1yZW1vdmFsKCkge1xuICBAaWYgZ2xvYmFsLXZhcmlhYmxlLWV4aXN0cyhleHBlcmltZW50YWwtc3VwcG9ydC1mb3ItcGllKSB7XG4gICAgQHdhcm4gXCJDb21wYXNzIG5vIGxvbmdlciBzdXBwb3J0cyBjc3MzcGllLlwiO1xuICB9XG4gIEByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gRW5hYmxlIGJyb3dzZXIgc3VwcG9ydCBkZWJ1Z2dpbmcgd2l0aGluIHRoZSBjb250ZW50IGJsb2NrLlxuLy8gT3IgeW91IGNhbiBlbmFibGUgaXQgZm9yIHRoZSB3aG9sZSBzdHlsZXNoZWV0IGJ5IHNldHRpbmcgYCRkZWJ1Zy1icm93c2VyLXN1cHBvcnRgIHRvIHRydWUuXG5AbWl4aW4gd2l0aC1icm93c2VyLXN1cHBvcnQtZGVidWdnaW5nIHtcbiAgJGN1cnJlbnQtc3RhdHVzOiAkZGVidWctYnJvd3Nlci1zdXBwb3J0O1xuICAkZGVidWctYnJvd3Nlci1zdXBwb3J0OiB0cnVlICFnbG9iYWw7XG4gIEBjb250ZW50O1xuICAkZGVidWctYnJvd3Nlci1zdXBwb3J0OiAkY3VycmVudC1zdGF0dXMgIWdsb2JhbDtcbn1cblxuLy8gU2V0IGEgZGVmYXVsdCB2YWx1ZSBpZiB0aGUgZ2l2ZW4gYXJnbGlzdCBpcyBlbXB0eVxuQGZ1bmN0aW9uIHNldC1hcmdsaXN0LWRlZmF1bHQoJGFyZ2xpc3QsICRkZWZhdWx0KSB7XG4gICRkZWZhdWx0LWluZGV4OiBpbmRleCgkYXJnbGlzdCwgZGVmYXVsdCk7XG4gIEBpZiAkZGVmYXVsdC1pbmRleCB7XG4gICAgJGFyZ2xpc3Q6IHNldC1udGgoJGFyZ2xpc3QsICRkZWZhdWx0LWluZGV4LCAkZGVmYXVsdClcbiAgfVxuICBAcmV0dXJuIGlmKGxlbmd0aCgkYXJnbGlzdCkgPiAwLCAkYXJnbGlzdCwgJGRlZmF1bHQpO1xufVxuXG5cbi8vIEBwcml2YXRlXG4kb2xkLXZhcmlhYmxlLXdhcm5pbmdzLWlzc3VlZDogd2Fybi1hYm91dC1vbGQtdmFyaWFibGVzKCkgIWRlZmF1bHQ7XG5cbi8vIEBwcml2YXRlXG4kcGllLXJlbW92YWwtd2FybmluZy1pc3N1ZWQ6IHdhcm4tYWJvdXQtcGllLXJlbW92YWwoKSAhZGVmYXVsdDtcblxuLy8gQHByaXZhdGVcbkBmdW5jdGlvbiB3YXJuLWFib3V0LXVzZWxlc3MtcHJlZml4LWFyZ3VtZW50cygkbW96OiBudWxsLCAkd2Via2l0OiBudWxsLCAkbzogbnVsbCwgJGtodG1sOiBudWxsLCAkb2ZmaWNpYWw6IG51bGwpIHtcbiAgQGlmICRtb3ogIT0gbnVsbCBvciAkd2Via2l0ICE9IG51bGwgb3IgJG8gIT0gbnVsbCBvciAka2h0bWwgIT0gbnVsbCBvciAkb2ZmaWNpYWwgIT0gbnVsbCB7XG4gICAgQHdhcm4gXCJCcm93c2VyIHByZWZpeCBhcmd1bWVudHMgdG8gdGhpcyBtaXhpbiBhcmUgbm8gbG9uZ2VyIHVzZWQgYW5kIFwiICtcbiAgICAgICAgICBcIndpbGwgYmUgcmVtb3ZlZCBpbiB0aGUgbmV4dCByZWxlYXNlLlwiO1xuICB9XG4gIEByZXR1cm4gdHJ1ZTtcbn1cblxuLy8gY29lcmNlIGEgbGlzdCB0byBiZSBjb21tYSBkZWxpbWl0ZWQgb3IgbWFrZSBhIG5ldywgZW1wdHkgY29tbWEgZGVsaW1pdGVkIGxpc3QuXG5AZnVuY3Rpb24gY29tbWEtbGlzdCgkbGlzdDogKCkpIHtcbiAgQHJldHVybiBqb2luKCgpLCAkbGlzdCwgY29tbWEpO1xufVxuXG4vLyBAcHJpdmF0ZSBSZXR1cm5zIHRoZSBsZWdhY3kgdmFsdWUgZm9yIGEgZ2l2ZW4gYm94LW1vZGVsXG4vLyAtIFVzZWQgYnkgYmFja2dyb3VuZC1jbGlwIGFuZCAtb3JpZ2luLlxuQGZ1bmN0aW9uIGxlZ2FjeS1ib3goJGJveCkge1xuICAkYm94OiB1bnF1b3RlKCRib3gpO1xuICBAaWYgJGJveCA9PSBwYWRkaW5nLWJveCB7ICRib3g6IHBhZGRpbmc7IH1cbiAgQGlmICRib3ggPT0gYm9yZGVyLWJveCB7ICRib3g6IGJvcmRlcjsgfVxuICBAaWYgJGJveCA9PSBjb250ZW50LWJveCB7ICRib3g6IGNvbnRlbnQ7IH1cbiAgQHJldHVybiAkYm94O1xufVxuIiwiLy8gQm94IFNpemluZ1xuXG5AaW1wb3J0IFwiY29tcGFzcy9zdXBwb3J0XCI7XG5cbi8vIFRoZSBwcmVmaXhlZCBzdXBwb3J0IHRocmVzaG9sZCBmb3IgYm94LXNpemluZy5cbi8vIERlZmF1bHRzIHRvIHRoZSAkZ3JhY2VmdWwtdXNhZ2UtdGhyZXNob2xkLlxuJGJveC1zaXppbmctc3VwcG9ydC10aHJlc2hvbGQ6ICRjcml0aWNhbC11c2FnZS10aHJlc2hvbGQgIWRlZmF1bHQ7XG5cbi8vIFRoZSBkZWZhdWx0IGJveC1zaXppbmcgbW9kZWwgd2hlbiBubyBhcmd1bWVudCBpcyBwcm92aWRlZCB0byB0aGUgYm94LXNpemluZyBtaXhpbjogWyBjb250ZW50LWJveCB8IGJvcmRlci1ib3ggfCBwYWRkaW5nLWJveCBdXG4vL1xuLy8gVGhlIGJyb3dzZXIgZGVmYXVsdCBpcyBjb250ZW50LWJveCwgY29tcGFzcyBkZWZhdWx0cyB0byBib3JkZXItYm94LlxuJGRlZmF1bHQtYm94LXNpemluZzogYm9yZGVyLWJveCAhZGVmYXVsdDtcblxuXG4vLyBDaGFuZ2UgdGhlIGJveCBtb2RlbCBmb3IgTW96aWxsYSwgV2Via2l0LCBJRTggYW5kIHRoZSBmdXR1cmVcbi8vXG4vLyAgICAgJGJveC1tb2RlbDogWyBjb250ZW50LWJveCB8IGJvcmRlci1ib3ggfCBwYWRkaW5nLWJveCBdXG5AbWl4aW4gYm94LXNpemluZygkYm94LW1vZGVsOiAkZGVmYXVsdC1ib3gtc2l6aW5nKSB7XG4gICRib3gtbW9kZWw6IHVucXVvdGUoJGJveC1tb2RlbCk7XG4gIEBpbmNsdWRlIHByZWZpeGVkLXByb3BlcnRpZXMoY3NzMy1ib3hzaXppbmcsICRib3gtc2l6aW5nLXN1cHBvcnQtdGhyZXNob2xkLCAoYm94LXNpemluZzogJGJveC1tb2RlbCkpO1xufVxuIixudWxsLCIvLyBNaXhpbnMgdG8gc3VwcG9ydCBzcGVjaWZpYyBDU1MgVGV4dCBMZXZlbCAzIGVsZW1lbnRzXG5cbkBpbXBvcnQgXCJjb21wYXNzL3N1cHBvcnRcIjtcblxuLy8gVGhlIHRoZSB1c2VyIHRocmVzaG9sZCBmb3IgaHlwaGVucyBzdXBwb3J0LlxuLy8gRGVmYXVsdHMgdG8gYCRncmFjZWZ1bC11c2FnZS10aHJlc2hvbGRgLlxuJGh5cGhlbnMtc3VwcG9ydC10aHJlc2hvbGQ6ICRncmFjZWZ1bC11c2FnZS10aHJlc2hvbGQgIWRlZmF1bHQ7XG5cblxuLy8gTWl4aW4gZm9yIHdvcmQtYnJlYWsgcHJvcGVydGllc1xuLy8gaHR0cDovL3d3dy53My5vcmcvY3NzMy10ZXh0LyN3b3JkLWJyZWFrXG4vLyAqIGxlZ2FsIHZhbHVlcyBmb3IgJHR5cGUgOiBub3JtYWwsIGtlZXAtYWxsLCBicmVhay1hbGxcbi8vXG4vLyBFeGFtcGxlOlxuLy8gICAgcC53b3JkQnJlYWsge0BpbmNsdWRlIHdvcmQtYnJlYWsoYnJlYWstYWxsKTt9XG4vL1xuLy8gV2hpY2ggZ2VuZXJhdGVzOlxuLy8gICAgcC53b3JkQnJlYWsge1xuLy8gICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4vLyAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7fVxuLy9cbkBtaXhpbiB3b3JkLWJyZWFrKCR2YWx1ZTogbm9ybWFsKXtcbiAgd29yZC1icmVhazogJHZhbHVlO1xuICBAaWYgJHZhbHVlID09IGJyZWFrLWFsbCB7XG4gICAgLy9XZWJraXQgaGFuZGxlcyBicmVhay1hbGwgZGlmZmVyZW50bHkuLi4gYXMgYnJlYWstd29yZFxuICAgIEBpbmNsdWRlIHdpdGgtcHJlZml4KC13ZWJraXQpIHtcbiAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4gICAgfVxuICB9XG59XG5cbi8vIE1peGluIGZvciB0aGUgaHlwaGVucyBwcm9wZXJ0eVxuLy9cbi8vIFczQyBzcGVjaWZpY2F0aW9uOiBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXRleHQvI2h5cGhlbnNcbi8vICogbGVnYWwgdmFsdWVzIGZvciAkdHlwZSA6IGF1dG8sIG1hbnVhbCwgbm9uZVxuLy9cbi8vIEV4YW1wbGU6XG4vLyAgcCB7XG4vLyAgICBAaW5jbHVkZSBoeXBoZW5zKGF1dG8pO31cbi8vIFdoaWNoIGdlbmVyYXRlczpcbi8vICBwIHtcbi8vICAgIC1tb3otaHlwaGVuczogYXV0bztcbi8vICAgIC13ZWJraXQtaHlwaGVuczogYXV0bztcbi8vICAgIGh5cGhlbnM6IGF1dG87fVxuLy9cbkBtaXhpbiBoeXBoZW5zKCR2YWx1ZTogYXV0byl7XG4gIEBpbmNsdWRlIHByZWZpeGVkLXByb3BlcnRpZXMoY3NzLWh5cGhlbnMsICRoeXBoZW5zLXN1cHBvcnQtdGhyZXNob2xkLCAoXG4gICAgaHlwaGVuczogJHZhbHVlXG4gICkpO1xufVxuXG4vLyBNaXhpbiBmb3IgeC1icm93c2VyIGh5cGhlbmF0aW9uIGJhc2VkIG9uIEBhdWNoZW5iZXJnJ3MgcG9zdDpcbi8vIFJlbW92ZXMgdGhlIG5lZWQgZm9yIHRoZSA8d2JyLz4gSFRNTCB0YWdcbi8vIGh0dHA6Ly9ibG9nLmtlbm5ldGguaW8vYmxvZy8yMDEyLzAzLzA0L3dvcmQtd3JhcHBpbmctaHlwZXJuYXRpb24tdXNpbmctY3NzL1xuLy9cbi8vICBFeGFtcGxlOlxuLy8gIGRpdiB7QGluY2x1ZGUgaHlwaGVuYXRpb247fVxuLy9cbi8vICBXaGljaCBnZW5lcmF0ZXM6XG4vLyAgICBkaXYge1xuLy8gICAgICAtbXMtd29yZC1icmVhazogYnJlYWstYWxsO1xuLy8gICAgICB3b3JkLWJyZWFrOiBicmVhay1hbGw7XG4vLyAgICAgIHdvcmQtYnJlYWs6IGJyZWFrLXdvcmQ7XG4vLyAgICAgIC1tb3otaHlwaGVuczogYXV0bztcbi8vICAgICAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xuLy8gICAgICBoeXBoZW5zOiBhdXRvO31cbi8vXG5AbWl4aW4gaHlwaGVuYXRpb24ge1xuICBAaW5jbHVkZSB3b3JkLWJyZWFrKGJyZWFrLWFsbCk7XG4gIEBpbmNsdWRlIGh5cGhlbnM7XG59XG4iLG51bGwsbnVsbCwiQGltcG9ydCBcImNvbXBhc3Mvc3VwcG9ydFwiO1xuXG4vLyBUaGUgdGhlIHVzZXIgdGhyZXNob2xkIGZvciB0cmFuc2l0aW9uIHN1cHBvcnQuIERlZmF1bHRzIHRvIGAkZ3JhY2VmdWwtdXNhZ2UtdGhyZXNob2xkYFxuJHRyYW5zaXRpb24tc3VwcG9ydC10aHJlc2hvbGQ6ICRncmFjZWZ1bC11c2FnZS10aHJlc2hvbGQgIWRlZmF1bHQ7XG5cblxuLy8gQ1NTIFRyYW5zaXRpb25zXG4vLyBDdXJyZW50bHkgb25seSB3b3JrcyBpbiBXZWJraXQuXG4vL1xuLy8gKiBleHBlY3RlZCBpbiBDU1MzLCBGaXJlRm94IDMuNi83IGFuZCBPcGVyYSBQcmVzdG8gMi4zXG4vLyAqIFdlJ2xsIGJlIHByZXBhcmVkLlxuLy9cbi8vIEluY2x1ZGluZyB0aGlzIHN1Ym1vZHVsZSBzZXRzIGZvbGxvd2luZyBkZWZhdWx0cyBmb3IgdGhlIG1peGluczpcbi8vXG4vLyAgICAgJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSA6IGFsbFxuLy8gICAgICRkZWZhdWx0LXRyYW5zaXRpb24tZHVyYXRpb24gOiAxc1xuLy8gICAgICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24gOiBmYWxzZVxuLy8gICAgICRkZWZhdWx0LXRyYW5zaXRpb24tZGVsYXkgICAgOiBmYWxzZVxuLy9cbi8vIE92ZXJyaWRlIHRoZW0gaWYgeW91IGxpa2UuIFRpbWluZy1mdW5jdGlvbiBhbmQgZGVsYXkgYXJlIHNldCB0byBmYWxzZSBmb3IgYnJvd3NlciBkZWZhdWx0cyAoZWFzZSwgMHMpLlxuXG4kZGVmYXVsdC10cmFuc2l0aW9uLXByb3BlcnR5OiBhbGwgIWRlZmF1bHQ7XG5cbiRkZWZhdWx0LXRyYW5zaXRpb24tZHVyYXRpb246IDFzICFkZWZhdWx0O1xuXG4kZGVmYXVsdC10cmFuc2l0aW9uLWZ1bmN0aW9uOiBudWxsICFkZWZhdWx0O1xuXG4kZGVmYXVsdC10cmFuc2l0aW9uLWRlbGF5OiBudWxsICFkZWZhdWx0O1xuXG4kdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzOiB0cmFuc2Zvcm0sIHRyYW5zZm9ybS1vcmlnaW4gIWRlZmF1bHQ7XG5cblxuXG4vLyBDaGVja3MgaWYgdGhlIHZhbHVlIGdpdmVuIGlzIGEgdW5pdCBvZiB0aW1lLlxuQGZ1bmN0aW9uIGlzLXRpbWUoJHZhbHVlKSB7XG4gIEByZXR1cm4gaWYodHlwZS1vZigkdmFsdWUpID09IG51bWJlciwgbm90IG5vdCBpbmRleChzIG1zLCB1bml0KCR2YWx1ZSkpLCBmYWxzZSk7XG59XG5cbi8vIFJldHVybnMgYCRwcm9wZXJ0eWAgd2l0aCB0aGUgZ2l2ZW4gcHJlZml4IGlmIGl0IGlzIGZvdW5kIGluIGAkdHJhbnNpdGlvbmFibGUtcHJlZml4ZWQtdmFsdWVzYC5cbkBmdW5jdGlvbiBwcmVmaXhlZC1mb3ItdHJhbnNpdGlvbigkcHJlZml4LCAkcHJvcGVydHkpIHtcbiAgQGlmIG5vdCAkcHJlZml4IHtcbiAgICBAcmV0dXJuICRwcm9wZXJ0eTtcbiAgfVxuICBAaWYgdHlwZS1vZigkcHJvcGVydHkpID09IGxpc3Qgb3IgdHlwZS1vZigkcHJvcGVydHkpID09IGFyZ2xpc3Qge1xuICAgICRuZXctbGlzdDogY29tbWEtbGlzdCgpO1xuICAgIEBlYWNoICR2IGluICRwcm9wZXJ0eSB7XG4gICAgICAkbmV3LWxpc3Q6IGFwcGVuZCgkbmV3LWxpc3QsIHByZWZpeGVkLWZvci10cmFuc2l0aW9uKCRwcmVmaXgsICR2KSk7XG4gICAgfVxuICAgIEByZXR1cm4gJG5ldy1saXN0O1xuICB9IEBlbHNlIHtcbiAgICBAaWYgaW5kZXgoJHRyYW5zaXRpb25hYmxlLXByZWZpeGVkLXZhbHVlcywgJHByb3BlcnR5KSB7XG4gICAgICBAcmV0dXJuICN7JHByZWZpeH0tI3skcHJvcGVydHl9O1xuICAgIH0gQGVsc2Uge1xuICAgICAgQHJldHVybiAkcHJvcGVydHk7XG4gICAgfVxuICB9XG59XG5cbi8vIFJldHVybnMgJHRyYW5zaXRpb24tbWFwIHdoaWNoIGluY2x1ZGVzIGtleSBhbmQgdmFsdWVzIHRoYXQgbWFwIHRvIGEgdHJhbnNpdGlvbiBkZWNsYXJhdGlvblxuQGZ1bmN0aW9uIHRyYW5zaXRpb24tbWFwKCR0cmFuc2l0aW9uKSB7XG4gICR0cmFuc2l0aW9uLW1hcDogKCk7XG5cbiAgQGVhY2ggJGl0ZW0gaW4gJHRyYW5zaXRpb24ge1xuICAgIEBpZiBpcy10aW1lKCRpdGVtKSB7XG4gICAgICBAaWYgbWFwLWhhcy1rZXkoJHRyYW5zaXRpb24tbWFwLCBkdXJhdGlvbikge1xuICAgICAgICAkdHJhbnNpdGlvbi1tYXA6IG1hcC1tZXJnZSgkdHJhbnNpdGlvbi1tYXAsIChkZWxheTogJGl0ZW0pKTtcbiAgICAgIH0gQGVsc2Uge1xuICAgICAgICAkdHJhbnNpdGlvbi1tYXA6IG1hcC1tZXJnZSgkdHJhbnNpdGlvbi1tYXAsIChkdXJhdGlvbjogJGl0ZW0pKTtcbiAgICAgIH1cbiAgICB9IEBlbHNlIGlmIG1hcC1oYXMta2V5KCR0cmFuc2l0aW9uLW1hcCwgcHJvcGVydHkpIHtcbiAgICAgICR0cmFuc2l0aW9uLW1hcDogbWFwLW1lcmdlKCR0cmFuc2l0aW9uLW1hcCwgKHRpbWluZy1mdW5jdGlvbjogJGl0ZW0pKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICR0cmFuc2l0aW9uLW1hcDogbWFwLW1lcmdlKCR0cmFuc2l0aW9uLW1hcCwgKHByb3BlcnR5OiAkaXRlbSkpO1xuICAgIH1cbiAgfVxuXG4gIEByZXR1cm4gJHRyYW5zaXRpb24tbWFwO1xufVxuXG4vLyBPbmUgb3IgbW9yZSBwcm9wZXJ0aWVzIHRvIHRyYW5zaXRpb25cbi8vXG4vLyAqIGZvciBtdWx0aXBsZSwgdXNlIGEgY29tbWEtZGVsaW1pdGVkIGxpc3Rcbi8vICogYWxzbyBhY2NlcHRzIFwiYWxsXCIgb3IgXCJub25lXCJcblxuQG1peGluIHRyYW5zaXRpb24tcHJvcGVydHkoJHByb3BlcnRpZXMuLi4pIHtcbiAgJHByb3BlcnRpZXM6IHNldC1hcmdsaXN0LWRlZmF1bHQoJHByb3BlcnRpZXMsICRkZWZhdWx0LXRyYW5zaXRpb24tcHJvcGVydHkpO1xuICBAaW5jbHVkZSB3aXRoLWVhY2gtcHJlZml4KGNzcy10cmFuc2l0aW9ucywgJHRyYW5zaXRpb24tc3VwcG9ydC10aHJlc2hvbGQpIHtcbiAgICAkcHJvcHM6IGlmKCRjdXJyZW50LXByZWZpeCwgcHJlZml4ZWQtZm9yLXRyYW5zaXRpb24oJGN1cnJlbnQtcHJlZml4LCAkcHJvcGVydGllcyksICRwcm9wZXJ0aWVzKTtcbiAgICBAaW5jbHVkZSBwcmVmaXgtcHJvcCh0cmFuc2l0aW9uLXByb3BlcnR5LCAkcHJvcHMpO1xuICB9XG59XG5cbi8vIE9uZSBvciBtb3JlIGR1cmF0aW9ucyBpbiBzZWNvbmRzXG4vL1xuLy8gKiBmb3IgbXVsdGlwbGUsIHVzZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0XG4vLyAqIHRoZXNlIGR1cmF0aW9ucyB3aWxsIGFmZmVjdCB0aGUgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBsaXN0IHBvc2l0aW9uXG5cbkBtaXhpbiB0cmFuc2l0aW9uLWR1cmF0aW9uKCRkdXJhdGlvbnMuLi4pIHtcbiAgJGR1cmF0aW9uczogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkZHVyYXRpb25zLCAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgcHJlZml4ZWQtcHJvcGVydGllcyhjc3MtdHJhbnNpdGlvbnMsICR0cmFuc2l0aW9uLXN1cHBvcnQtdGhyZXNob2xkLCAoXG4gICAgdHJhbnNpdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uc1xuICApKTtcbn1cblxuLy8gT25lIG9yIG1vcmUgdGltaW5nIGZ1bmN0aW9uc1xuLy9cbi8vICogWyBlYXNlIHwgbGluZWFyIHwgZWFzZS1pbiB8IGVhc2Utb3V0IHwgZWFzZS1pbi1vdXQgfCBjdWJpYy1iZXppZXIoeDEsIHkxLCB4MiwgeTIpXVxuLy8gKiBGb3IgbXVsdGlwbGUsIHVzZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0XG4vLyAqIFRoZXNlIGZ1bmN0aW9ucyB3aWxsIGVmZmVjdCB0aGUgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBsaXN0IHBvc2l0aW9uXG5cbkBtaXhpbiB0cmFuc2l0aW9uLXRpbWluZy1mdW5jdGlvbigkZnVuY3Rpb25zLi4uKSB7XG4gICRmdW5jdGlvbnM6IHNldC1hcmdsaXN0LWRlZmF1bHQoJGZ1bmN0aW9ucywgJGRlZmF1bHQtdHJhbnNpdGlvbi1mdW5jdGlvbik7XG4gIEBpbmNsdWRlIHByZWZpeGVkLXByb3BlcnRpZXMoY3NzLXRyYW5zaXRpb25zLCAkdHJhbnNpdGlvbi1zdXBwb3J0LXRocmVzaG9sZCwgKFxuICAgIHRyYW5zaXRpb24tdGltaW5nLWZ1bmN0aW9uOiAkZnVuY3Rpb25zXG4gICkpO1xufVxuXG4vLyBPbmUgb3IgbW9yZSB0cmFuc2l0aW9uLWRlbGF5cyBpbiBzZWNvbmRzXG4vL1xuLy8gKiBmb3IgbXVsdGlwbGUsIHVzZSBhIGNvbW1hLWRlbGltaXRlZCBsaXN0XG4vLyAqIHRoZXNlIGRlbGF5cyB3aWxsIGVmZmVjdCB0aGUgcHJvcGVydGllcyBpbiB0aGUgc2FtZSBsaXN0IHBvc2l0aW9uXG5cbkBtaXhpbiB0cmFuc2l0aW9uLWRlbGF5KCRkZWxheXMuLi4pIHtcbiAgJGRlbGF5czogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkZGVsYXlzLCAkZGVmYXVsdC10cmFuc2l0aW9uLWRlbGF5KTtcbiAgQGluY2x1ZGUgcHJlZml4ZWQtcHJvcGVydGllcyhjc3MtdHJhbnNpdGlvbnMsICR0cmFuc2l0aW9uLXN1cHBvcnQtdGhyZXNob2xkLCAoXG4gICAgdHJhbnNpdGlvbi1kZWxheTogJGRlbGF5c1xuICApKTtcbn1cblxuLy8gVHJhbnNpdGlvbiBhbGwtaW4tb25lIHNob3J0aGFuZFxuXG5AbWl4aW4gc2luZ2xlLXRyYW5zaXRpb24oXG4gICRwcm9wZXJ0eTogJGRlZmF1bHQtdHJhbnNpdGlvbi1wcm9wZXJ0eSxcbiAgJGR1cmF0aW9uOiAkZGVmYXVsdC10cmFuc2l0aW9uLWR1cmF0aW9uLFxuICAkZnVuY3Rpb246ICRkZWZhdWx0LXRyYW5zaXRpb24tZnVuY3Rpb24sXG4gICRkZWxheTogJGRlZmF1bHQtdHJhbnNpdGlvbi1kZWxheVxuKSB7XG4gIEBpbmNsdWRlIHRyYW5zaXRpb24oY29tcGFjdCgkcHJvcGVydHkgJGR1cmF0aW9uICRmdW5jdGlvbiAkZGVsYXkpKTtcbn1cblxuQG1peGluIHRyYW5zaXRpb24oJHRyYW5zaXRpb25zLi4uKSB7XG4gICRkZWZhdWx0OiAoY29tcGFjdCgkZGVmYXVsdC10cmFuc2l0aW9uLXByb3BlcnR5ICRkZWZhdWx0LXRyYW5zaXRpb24tZHVyYXRpb24gJGRlZmF1bHQtdHJhbnNpdGlvbi1mdW5jdGlvbiAkZGVmYXVsdC10cmFuc2l0aW9uLWRlbGF5KSwpO1xuICAkdHJhbnNpdGlvbnM6IGlmKGxlbmd0aCgkdHJhbnNpdGlvbnMpID09IDEgYW5kIHR5cGUtb2YobnRoKCR0cmFuc2l0aW9ucywgMSkpID09IGxpc3QgYW5kIGxpc3Qtc2VwYXJhdG9yKG50aCgkdHJhbnNpdGlvbnMsIDEpKSA9PSBjb21tYSwgbnRoKCR0cmFuc2l0aW9ucywgMSksICR0cmFuc2l0aW9ucyk7XG4gICR0cmFuc2l0aW9uczogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkdHJhbnNpdGlvbnMsICRkZWZhdWx0KTtcblxuXG4gIEBpbmNsdWRlIHdpdGgtZWFjaC1wcmVmaXgoY3NzLXRyYW5zaXRpb25zLCAkdHJhbnNpdGlvbi1zdXBwb3J0LXRocmVzaG9sZCkge1xuICAgICRkZWxheXM6IGNvbW1hLWxpc3QoKTtcbiAgICAkdHJhbnNpdGlvbnMtd2l0aG91dC1kZWxheXM6IGNvbW1hLWxpc3QoKTtcbiAgICAkdHJhbnNpdGlvbnMtd2l0aC1kZWxheXM6IGNvbW1hLWxpc3QoKTtcbiAgICAkaGFzLWRlbGF5czogZmFsc2U7XG5cblxuICAgIC8vIFRoaXMgYmxvY2sgY2FuIGJlIG1hZGUgY29uc2lkZXJhYmx5IHNpbXBsZXIgYXQgdGhlIHBvaW50IGluIHRpbWUgdGhhdFxuICAgIC8vIHdlIG5vIGxvbmdlciBuZWVkIHRvIGRlYWwgd2l0aCB0aGUgZGlmZmVyZW5jZXMgaW4gaG93IGRlbGF5cyBhcmUgdHJlYXRlZC5cbiAgICBAZWFjaCAkdHJhbnNpdGlvbiBpbiAkdHJhbnNpdGlvbnMge1xuICAgICAgLy8gRGVjbGFyZSBpbml0aWFsIHZhbHVlcyBmb3IgdHJhbnNpdGlvblxuICAgICAgJHRyYW5zaXRpb246IHRyYW5zaXRpb24tbWFwKCR0cmFuc2l0aW9uKTtcblxuICAgICAgJHByb3BlcnR5OiBtYXAtZ2V0KCR0cmFuc2l0aW9uLCBwcm9wZXJ0eSk7XG4gICAgICAkZHVyYXRpb246IG1hcC1nZXQoJHRyYW5zaXRpb24sIGR1cmF0aW9uKTtcbiAgICAgICR0aW1pbmctZnVuY3Rpb246IG1hcC1nZXQoJHRyYW5zaXRpb24sIHRpbWluZy1mdW5jdGlvbik7XG4gICAgICAkZGVsYXk6IG1hcC1nZXQoJHRyYW5zaXRpb24sIGRlbGF5KTtcblxuICAgICAgLy8gUGFyc2UgdHJhbnNpdGlvbiBzdHJpbmcgdG8gYXNzaWduIHZhbHVlcyBpbnRvIGNvcnJlY3QgdmFyaWFibGVzXG4gICAgICAkaGFzLWRlbGF5czogJGhhcy1kZWxheXMgb3IgJGRlbGF5O1xuXG4gICAgICBAaWYgJGN1cnJlbnQtcHJlZml4ID09IC13ZWJraXQge1xuICAgICAgICAvLyBLZWVwIGEgbGlzdCBvZiBkZWxheXMgaW4gY2FzZSBvbmUgaXMgc3BlY2lmaWVkXG4gICAgICAgICRkZWxheXM6IGFwcGVuZCgkZGVsYXlzLCBpZigkZGVsYXksICRkZWxheSwgMHMpKTtcbiAgICAgICAgJHRyYW5zaXRpb25zLXdpdGhvdXQtZGVsYXlzOiBhcHBlbmQoJHRyYW5zaXRpb25zLXdpdGhvdXQtZGVsYXlzLFxuICAgICAgICAgIHByZWZpeGVkLWZvci10cmFuc2l0aW9uKCRjdXJyZW50LXByZWZpeCwgJHByb3BlcnR5KSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbik7XG4gICAgICB9IEBlbHNlIHtcbiAgICAgICAgJHRyYW5zaXRpb25zLXdpdGgtZGVsYXlzOiBhcHBlbmQoJHRyYW5zaXRpb25zLXdpdGgtZGVsYXlzLFxuICAgICAgICAgIHByZWZpeGVkLWZvci10cmFuc2l0aW9uKCRjdXJyZW50LXByZWZpeCwgJHByb3BlcnR5KSAkZHVyYXRpb24gJHRpbWluZy1mdW5jdGlvbiAkZGVsYXkpO1xuICAgICAgfVxuICAgIH1cblxuICAgIEBpZiAkY3VycmVudC1wcmVmaXggPT0gLXdlYmtpdCB7XG4gICAgICBAaW5jbHVkZSBwcmVmaXgtcHJvcCh0cmFuc2l0aW9uLCAkdHJhbnNpdGlvbnMtd2l0aG91dC1kZWxheXMpO1xuICAgICAgQGlmICRoYXMtZGVsYXlzIHtcbiAgICAgICAgQGluY2x1ZGUgcHJlZml4LXByb3AodHJhbnNpdGlvbi1kZWxheSwgJGRlbGF5cyk7XG4gICAgICB9XG4gICAgfSBAZWxzZSBpZiAkY3VycmVudC1wcmVmaXgge1xuICAgICAgQGluY2x1ZGUgcHJlZml4LXByb3AodHJhbnNpdGlvbiwgJHRyYW5zaXRpb25zLXdpdGgtZGVsYXlzKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgIHRyYW5zaXRpb246ICR0cmFuc2l0aW9ucy13aXRoLWRlbGF5cztcbiAgICB9XG4gIH1cbn1cbiIsIi8vIFRoZXJlIGFyZSB0d28gd2F5cyB0byB1c2UgdGhlIGZsZXhib3ggbW9kdWxlLlxuLy8gSWYgeW91J3JlIHVzaW5nIHRoZSBmaW5hbCB2ZXJzaW9uIG9mIHRoZSBzcGVjLFxuLy8geW91IGNhbiB1c2UgdGhlIHByb3BlcnR5IG1peGlucyBhcyBlbHNld2hlcmUgaW5cbi8vIHRoZSBjc3MzIG1vZHVsZS5cbi8vXG4vLyBZb3UgY2FuIGFsc28gdXNlIHRoZSBmbGV4Ym94IHByZWZpeGluZyBtaXhpbiBgZmxleGJveGAuXG4vLyBUaGlzIG1peGluIHRha2VzIGFuIG9wdGlvbmFsIGAkdmVyc2lvbmAgYXJndW1lbnQgd2hpY2hcbi8vIGFsbG93cyB5b3UgdG8gc3BlY2lmeSB3aGljaCBzcGVjIHZlcnNpb24gdGhlIHByb3BlcnRpZXNcbi8vIGFyZSB1c2luZyBzbyB0aGF0IHRoZXkgd2lsbCBiZSBwcmVmaXhlZCBjb3JyZWN0bHkuXG4vL1xuLy8gRXhhbXBsZTpcbi8vXG4vLyAgICAgLmZsZXgtY29sdW1uIHtcbi8vICAgICAgIC8qIEZvciBmbGV4Ym94IHNwZWMgdjEgKi9cbi8vICAgICAgIEBpbmNsdWRlIGZsZXhib3goKFxuLy8gICAgICAgICBkaXNwbGF5OiBib3gsXG4vLyAgICAgICAgIGJveC1vcmllbnQ6IHZlcnRpY2FsLFxuLy8gICAgICAgKSwgJHZlcnNpb246IDEpO1xuLy8gICAgICAgXG4vLyAgICAgICAvKiBGb3IgZmxleGJveCBzcGVjIHYyICovXG4vLyAgICAgICBAaW5jbHVkZSBmbGV4Ym94KChcbi8vICAgICAgICAgZGlzcGxheTogZmxleGJveCxcbi8vICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbixcbi8vICAgICAgICksICR2ZXJzaW9uOiAyKTtcbi8vICAgICAgIFxuLy8gICAgICAgLyogTGF0ZXN0IFNwZWMgKi9cbi8vICAgICAgIEBpbmNsdWRlIGZsZXhib3goKFxuLy8gICAgICAgICBkaXNwbGF5OiBmbGV4LFxuLy8gICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uLFxuLy8gICAgICAgKSk7XG4vLyAgICAgfVxuLy9cbi8vIFdoaWNoIGNvbXBpbGVzIHRvOlxuLy9cbi8vICAgICAuZmxleC1yb3cge1xuLy8gICAgICAgLyogRm9yIGZsZXhib3ggc3BlYyB2MSAqL1xuLy8gICAgICAgZGlzcGxheTogLW1vei1ib3g7XG4vLyAgICAgICAtbW96LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuLy8gICAgICAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4vLyAgICAgICAtd2Via2l0LWJveC1vcmllbnQ6IHZlcnRpY2FsO1xuLy8gICAgICAgXG4vLyAgICAgICAvKiBGb3IgZmxleGJveCBzcGVjIHYyICovXG4vLyAgICAgICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbi8vICAgICAgIC1tcy1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuLy8gICAgICAgXG4vLyAgICAgICAvKiBMYXRlc3QgU3BlYyAqL1xuLy8gICAgICAgZGlzcGxheTogLXdlYmtpdC1mbGV4O1xuLy8gICAgICAgLXdlYmtpdC1mbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuLy8gICAgICAgZGlzcGxheTogZmxleDtcbi8vICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4vLyAgICAgfVxuXG5AaW1wb3J0IFwiY29tcGFzcy9zdXBwb3J0XCI7XG5cbiRmbGV4Ym94LXN1cHBvcnQtdGhyZXNob2xkOiAkY3JpdGljYWwtdXNhZ2UtdGhyZXNob2xkICFkZWZhdWx0O1xuXG5cbi8vIEBwcml2YXRlXG4kZmxleGJveC1jYXBhYmlsaXR5LW9wdGlvbnM6IChcbiAgKGZ1bGwtc3VwcG9ydDogdHJ1ZSksXG4gIChwYXJ0aWFsLXN1cHBvcnQ6IHRydWUsIHNwZWMtdmVyc2lvbnM6IDMpXG4pO1xuXG4vLyBUaGlzIGlzIHRoZSB1bmRlcmx5aW5nIGltcGxlbWVudGF0aW9uIGZvciBhbGwgdGhlIG90aGVyIG1peGlucyBpbiB0aGlzIG1vZHVsZS5cbi8vIEl0IGlzIHRoZSBvbmx5IHdheSB0byBhY2Nlc3MgcHJlZml4IHN1cHBvcnQgZm9yIG9sZGVyIHZlcnNpb25zIG9mIHRoZSBzcGVjLlxuLy9cbi8vIGAkcHJvcGVydGllc2A6IG1hcCBvZiBwcm9wZXJ0eS12YWx1ZSBwYWlycyB0aGF0IHNob3VsZCBiZSBwcmVmaXhlZFxuXG4vLyBgJHZlcnNpb24xOiB0aGUgdmVyc2lvbiBvZiB0aGUgc3BlYyB0byB1c2Ugd2hlbiBjb25zaWRlcmluZyB3aGF0IHByZWZpeFxuLy8gdG8gYXBwcGx5LiBEZWZhdWx0cyB0byB0aGUgbW9zdCByZWNlbnQgKHNwZWMgdmVyc2lvbiAzKS4gT25seSB0aGUgbW9zdFxuLy8gcmVjZW50IHZlcnNpb24gb2YgdGhlIHNwZWMgb3V0cHV0cyBhbiB1bnByZWZpeGVkIHZlcnNpb24uXG5AbWl4aW4gZmxleGJveCgkcHJvcGVydGllcywgJHZlcnNpb246IG51bGwpIHtcbiAgJGNhcGFiaWxpdHktb3B0aW9uczogJGZsZXhib3gtY2FwYWJpbGl0eS1vcHRpb25zO1xuICBAaWYgJHZlcnNpb24ge1xuICAgICRjYXBhYmlsaXR5LW9wdGlvbnM6IChwYXJ0aWFsLXN1cHBvcnQ6IHRydWUsIHNwZWMtdmVyc2lvbnM6ICR2ZXJzaW9uKTtcbiAgfVxuXG4gIEBpbmNsdWRlIHdpdGgtZWFjaC1wcmVmaXgoZmxleGJveCwgJGZsZXhib3gtc3VwcG9ydC10aHJlc2hvbGQsICRjYXBhYmlsaXR5LW9wdGlvbnMpIHtcbiAgICAvLyBEb24ndCBvdXRwdXQgdW5wcmVmaXhlZCB2ZXJzaW9ucyB3aGVuIHRoZSBzcGVjIHZlcnNpb24gaXMgbm90IHRoZSBmaW5hbCB2ZXJzaW9uXG4gICAgQGlmICR2ZXJzaW9uIGFuZCAkY3VycmVudC1wcmVmaXggb3Igbm90ICR2ZXJzaW9uIG9yICR2ZXJzaW9uID09IDMge1xuICAgICAgQGVhY2ggJHByb3AsICR2YWx1ZSBpbiAkcHJvcGVydGllcyB7XG4gICAgICAgIEBpZiAkcHJvcCA9PSBkaXNwbGF5IHtcbiAgICAgICAgICBkaXNwbGF5OiBwcmVmaXgtaWRlbnRpZmllcigkdmFsdWUpO1xuICAgICAgICB9IEBlbHNlIHtcbiAgICAgICAgICBAaW5jbHVkZSBwcmVmaXgtcHJvcCgkcHJvcCwgJHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuXG4vLyBWYWx1ZXMgZm9yICRkaXNwbGF5IGFyZTogZmxleCAoZGVmYXVsdCksIGlubGluZS1mbGV4XG5AbWl4aW4gZGlzcGxheS1mbGV4KCRkaXNwbGF5OiBmbGV4KSB7XG4gIEBpbmNsdWRlIGZsZXhib3goKGRpc3BsYXk6ICRkaXNwbGF5KSk7XG59XG5cbi8vIFZhbHVlczogcm93IHwgcm93LXJldmVyc2UgfCBjb2x1bW4gfCBjb2x1bW4tcmV2ZXJzZVxuQG1peGluIGZsZXgtZGlyZWN0aW9uKCRkaXJlY3Rpb24pIHtcbiAgQGluY2x1ZGUgZmxleGJveCgoZmxleC1kaXJlY3Rpb246ICRkaXJlY3Rpb24pKTtcbn1cblxuLy8gVmFsdWVzOiBub3dyYXAgfCB3cmFwIHwgd3JhcC1yZXZlcnNlXG5AbWl4aW4gZmxleC13cmFwKCR3cmFwKSB7XG4gIEBpbmNsdWRlIGZsZXhib3goKGZsZXgtd3JhcDogJHdyYXApKTtcbn1cblxuLy8gU2hvcnRoYW5kIGZvciBmbGV4LWRpcmVjdGlvbiBhbmQgZmxleC13cmFwLlxuQG1peGluIGZsZXgtZmxvdygkZmxvdykge1xuICBAaW5jbHVkZSBmbGV4Ym94KChmbGV4LWZsb3c6ICRmbG93KSk7XG59XG5cbi8vIEFjY2VwdHMgYW4gaW50ZWdlclxuQG1peGluIG9yZGVyKCRvcmRlcikge1xuICBAaW5jbHVkZSBmbGV4Ym94KChvcmRlcjogJG9yZGVyKSk7XG59XG5cbi8vIFNob3J0aGFuZCBmb3IgZmxleC1ncm93LCBmbGV4LXNocmluayBhbmQgb3B0aW9uYWxseSBmbGV4LWJhc2lzLlxuLy8gU3BhY2Ugc2VwYXJhdGVkLCBpbiB0aGF0IG9yZGVyLlxuQG1peGluIGZsZXgoJGZsZXgpIHtcbiAgQGluY2x1ZGUgZmxleGJveCgoZmxleDogJGZsZXgpKTtcbn1cblxuLy8gQWNjZXB0cyBhIG51bWJlci5cbkBtaXhpbiBmbGV4LWdyb3coJGZsZXgtZ3Jvdykge1xuICBAaW5jbHVkZSBmbGV4Ym94KChmbGV4LWdyb3c6ICRmbGV4LWdyb3cpKTtcbn1cblxuLy8gQWNjZXB0cyBhIG51bWJlci5cbkBtaXhpbiBmbGV4LXNocmluaygkZmxleC1zaHJpbmspIHtcbiAgQGluY2x1ZGUgZmxleGJveCgoZmxleC1zaHJpbms6ICRmbGV4LXNocmluaykpO1xufVxuXG4vLyBBY2NlcHRzIGFueSBsZWdhbCB2YWx1ZSBmb3IgdGhlIHdpZHRoIHByb3BlcnR5LlxuQG1peGluIGZsZXgtYmFzaXMoJGZsZXgtYmFzaXMpIHtcbiAgQGluY2x1ZGUgZmxleGJveCgoZmxleC1iYXNpczogJGZsZXgtYmFzaXMpKTtcbn1cblxuLy8gTGVnYWwgdmFsdWVzOiBmbGV4LXN0YXJ0IHwgZmxleC1lbmQgfCBjZW50ZXIgfCBzcGFjZS1iZXR3ZWVuIHwgc3BhY2UtYXJvdW5kXG5AbWl4aW4ganVzdGlmeS1jb250ZW50KCRqdXN0aWZ5LWNvbnRlbnQpIHtcbiAgQGluY2x1ZGUgZmxleGJveCgoanVzdGlmeS1jb250ZW50OiAkanVzdGlmeS1jb250ZW50KSk7XG59XG5cbi8vIExlZ2FsIHZhbHVlczogZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgYmFzZWxpbmUgfCBzdHJldGNoXG5AbWl4aW4gYWxpZ24taXRlbXMoJGFsaWduLWl0ZW1zKSB7XG4gIEBpbmNsdWRlIGZsZXhib3goKGFsaWduLWl0ZW1zOiAkYWxpZ24taXRlbXMpKTtcbn1cblxuLy8gTGVnYWwgdmFsdWVzOiBhdXRvIHwgZmxleC1zdGFydCB8IGZsZXgtZW5kIHwgY2VudGVyIHwgYmFzZWxpbmUgfCBzdHJldGNoXG5AbWl4aW4gYWxpZ24tc2VsZigkYWxpZ24tc2VsZikge1xuICBAaW5jbHVkZSBmbGV4Ym94KChhbGlnbi1zZWxmOiAkYWxpZ24tc2VsZikpO1xufVxuXG4vLyBMZWdhbCB2YWx1ZXM6IGZsZXgtc3RhcnQgfCBmbGV4LWVuZCB8IGNlbnRlciB8IHNwYWNlLWJldHdlZW4gfCBzcGFjZS1hcm91bmQgfCBzdHJldGNoXG5AbWl4aW4gYWxpZ24tY29udGVudCgkYWxpZ24tY29udGVudCkge1xuICBAaW5jbHVkZSBmbGV4Ym94KChhbGlnbi1jb250ZW50OiAkYWxpZ24tY29udGVudCkpO1xufVxuIiwiQGltcG9ydCBcImNvbXBhc3Mvc3VwcG9ydFwiO1xuXG4vLyBUaGUgcHJlZml4ZWQgc3VwcG9ydCB0aHJlc2hvbGQgZm9yIGFuaW1hdGlvbi5cbi8vIERlZmF1bHRzIHRvIHRoZSAkZ3JhY2VmdWwtdXNhZ2UtdGhyZXNob2xkLlxuJGFuaW1hdGlvbi1zdXBwb3J0LXRocmVzaG9sZDogJGdyYWNlZnVsLXVzYWdlLXRocmVzaG9sZCAhZGVmYXVsdDtcblxuXG4vLyBOYW1lIG9mIGFueSBhbmltYXRpb24gYXMgYSBzdHJpbmcuXG4kZGVmYXVsdC1hbmltYXRpb24tbmFtZSAgICAgICAgICAgICA6IG51bGwgIWRlZmF1bHQ7XG5cbi8vIER1cmF0aW9uIG9mIHRoZSBlbnRpcmUgYW5pbWF0aW9uIGluIHNlY29uZHMuXG4kZGVmYXVsdC1hbmltYXRpb24tZHVyYXRpb24gICAgICAgICA6IG51bGwgIWRlZmF1bHQ7XG5cbi8vIERlbGF5IGZvciBzdGFydCBvZiBhbmltYXRpb24gaW4gc2Vjb25kcy5cbiRkZWZhdWx0LWFuaW1hdGlvbi1kZWxheSAgICAgICAgICAgIDogbnVsbCAhZGVmYXVsdDtcblxuLy8gVGhlIHRpbWluZyBmdW5jdGlvbihzKSB0byBiZSB1c2VkIGJldHdlZW4ga2V5ZnJhbWVzLiBbZWFzZSB8IGxpbmVhciB8IGVhc2UtaW4gfCBlYXNlLW91dCB8IGVhc2UtaW4tb3V0IHwgY3ViaWMtYmV6aWVyKCRudW1iZXIsICRudW1iZXIsICRudW1iZXIsICRudW1iZXIpXVxuJGRlZmF1bHQtYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbiAgOiBudWxsICFkZWZhdWx0O1xuXG4vLyBUaGUgbnVtYmVyIG9mIHRpbWVzIGFuIGFuaW1hdGlvbiBjeWNsZSBpcyBwbGF5ZWQuIFtpbmZpbml0ZSB8ICRudW1iZXJdXG4kZGVmYXVsdC1hbmltYXRpb24taXRlcmF0aW9uLWNvdW50ICA6IG51bGwgIWRlZmF1bHQ7XG5cbi8vIFdoZXRoZXIgb3Igbm90IHRoZSBhbmltYXRpb24gc2hvdWxkIHBsYXkgaW4gcmV2ZXJzZSBvbiBhbHRlcm5hdGUgY3ljbGVzLiBbbm9ybWFsIHwgYWx0ZXJuYXRlXVxuJGRlZmF1bHQtYW5pbWF0aW9uLWRpcmVjdGlvbiAgICAgICAgOiBudWxsICFkZWZhdWx0O1xuXG4vLyBXaGF0IHZhbHVlcyBhcmUgYXBwbGllZCBieSB0aGUgYW5pbWF0aW9uIG91dHNpZGUgdGhlIHRpbWUgaXQgaXMgZXhlY3V0aW5nLiBbbm9uZSB8IGZvcndhcmRzIHwgYmFja3dhcmRzIHwgYm90aF1cbiRkZWZhdWx0LWFuaW1hdGlvbi1maWxsLW1vZGUgICAgICAgIDogbnVsbCAhZGVmYXVsdDtcblxuLy8gV2hldGhlciB0aGUgYW5pbWF0aW9uIGlzIHJ1bm5pbmcgb3IgcGF1c2VkLiBbcnVubmluZyB8IHBhdXNlZF1cbiRkZWZhdWx0LWFuaW1hdGlvbi1wbGF5LXN0YXRlICAgICAgIDogbnVsbCAhZGVmYXVsdDtcblxuXG4vLyBDcmVhdGUgYSBuYW1lZCBhbmltYXRpb24gc2VxdWVuY2UgdGhhdCBjYW4gYmUgYXBwbGllZCB0byBlbGVtZW50cyBsYXRlci5cbi8vXG4vLyAgICAgJG5hbWUgICAgLSBUaGUgbmFtZSBvZiB5b3VyIGFuaW1hdGlvbi5cbi8vICAgICBAY29udGVudCAtIFRoZSBrZXlmcmFtZXMgb2YgdGhlIGFuaW1hdGlvbi5cbkBtaXhpbiBrZXlmcmFtZXMoJG5hbWUsICRkZXByZWNhdGVkLXByZWZpeGVzLi4uKSB7XG4gICR3YXJuZWQ6IHdhcm4tYWJvdXQtdXNlbGVzcy1wcmVmaXgtYXJndW1lbnRzKCRkZXByZWNhdGVkLXByZWZpeGVzLi4uKTtcblxuICBAaW5jbHVkZSB3aXRoLWVhY2gtcHJlZml4KGNzcy1hbmltYXRpb24sICRhbmltYXRpb24tc3VwcG9ydC10aHJlc2hvbGQpIHtcbiAgICAvLyBJdCB3b3VsZCBiZSBuaWNlIGlmIHdlIGNvdWxkIGR5bmFtaWNhbGx5IGNvbnN0cnVjdCBkaXJlY3RpdmUgbmFtZXMuXG4gICAgQGlmICRjdXJyZW50LXByZWZpeCA9PSAtbW96ICAgIHsgQC1tb3ota2V5ZnJhbWVzICAgICN7JG5hbWV9IHsgQGNvbnRlbnQ7IH0gfVxuICAgIEBpZiAkY3VycmVudC1wcmVmaXggPT0gLXdlYmtpdCB7IEAtd2Via2l0LWtleWZyYW1lcyAjeyRuYW1lfSB7IEBjb250ZW50OyB9IH1cbiAgICBAaWYgJGN1cnJlbnQtcHJlZml4ID09IC1vICAgICAgeyBALW8ta2V5ZnJhbWVzICAgICAgI3skbmFtZX0geyBAY29udGVudDsgfSB9XG4gICAgQGlmICRjdXJyZW50LXByZWZpeCA9PSAtbXMgICAgIHsgQC1tcy1rZXlmcmFtZXMgICAgICN7JG5hbWV9IHsgQGNvbnRlbnQ7IH0gfVxuICAgIEBpZiAkY3VycmVudC1wcmVmaXggPT0gbnVsbCAgICB7IEBrZXlmcmFtZXMgICAgICAgICAjeyRuYW1lfSB7IEBjb250ZW50OyB9IH1cbiAgfVxufVxuXG4vLyBAcHJpdmF0ZVxuQG1peGluIGFuaW1hdGlvbi1wcm9wZXJ0aWVzKCRwcm9wZXJ0aWVzKSB7XG4gIEBpbmNsdWRlIHByZWZpeGVkLXByb3BlcnRpZXMoY3NzLWFuaW1hdGlvbiwgJGFuaW1hdGlvbi1zdXBwb3J0LXRocmVzaG9sZCwgJHByb3BlcnRpZXMpO1xufVxuXG5cbi8vIEFwcGx5IGFueSBudW1iZXIgb2YgYW5pbWF0aW9uIG5hbWVzLlxuQG1peGluIGFuaW1hdGlvbi1uYW1lKCRuYW1lLi4uKSB7XG4gICRuYW1lOiBzZXQtYXJnbGlzdC1kZWZhdWx0KCRuYW1lLCAkZGVmYXVsdC1hbmltYXRpb24tbmFtZSk7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1wcm9wZXJ0aWVzKChhbmltYXRpb24tbmFtZTogJG5hbWUpKTtcbn1cblxuLy8gQXBwbHkgYW55IG51bWJlciBvZiBhbmltYXRpb24gZHVyYXRpb25zLlxuQG1peGluIGFuaW1hdGlvbi1kdXJhdGlvbigkZHVyYXRpb24uLi4pIHtcbiAgJGR1cmF0aW9uOiBzZXQtYXJnbGlzdC1kZWZhdWx0KCRkdXJhdGlvbiwgJGRlZmF1bHQtYW5pbWF0aW9uLWR1cmF0aW9uKTtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLXByb3BlcnRpZXMoKGFuaW1hdGlvbi1kdXJhdGlvbjogJGR1cmF0aW9uKSk7XG59XG5cbi8vIEFwcGx5IGFueSBudW1iZXIgb2YgYW5pbWF0aW9uIGRlbGF5cy5cbkBtaXhpbiBhbmltYXRpb24tZGVsYXkoJGRlbGF5Li4uKSB7XG4gICRkZWxheTogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkZGVsYXksICRkZWZhdWx0LWFuaW1hdGlvbi1kZWxheSk7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1wcm9wZXJ0aWVzKChhbmltYXRpb24tZGVsYXk6ICRkZWxheSkpO1xufVxuXG4vLyBBcHBseSBhbnkgbnVtYmVyIG9mIGFuaW1hdGlvbiB0aW1pbmcgZnVuY3Rpb25zLlxuQG1peGluIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24oJGZ1bmN0aW9uLi4uKSB7XG4gICRmdW5jdGlvbjogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkZnVuY3Rpb24sICRkZWZhdWx0LWFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb24pO1xuICBAaW5jbHVkZSBhbmltYXRpb24tcHJvcGVydGllcygoYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogJGZ1bmN0aW9uKSk7XG59XG5cbi8vIEFwcGx5IGFueSBudW1iZXIgb2YgYW5pbWF0aW9uIGl0ZXJhdGlvbiBjb3VudHMuXG5AbWl4aW4gYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCgkY291bnQuLi4pIHtcbiAgJGNvdW50OiBzZXQtYXJnbGlzdC1kZWZhdWx0KCRjb3VudCwgJGRlZmF1bHQtYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudCk7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1wcm9wZXJ0aWVzKChhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiAkY291bnQpKTtcbn1cblxuLy8gQXBwbHkgYW55IG51bWJlciBvZiBhbmltYXRpb24gZGlyZWN0aW9ucy5cbkBtaXhpbiBhbmltYXRpb24tZGlyZWN0aW9uKCRkaXJlY3Rpb24uLi4pIHtcbiAgJGRpcmVjdGlvbjogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkZGlyZWN0aW9uLCAkZGVmYXVsdC1hbmltYXRpb24tZGlyZWN0aW9uKTtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLXByb3BlcnRpZXMoKGFuaW1hdGlvbi1kaXJlY3Rpb246ICRkaXJlY3Rpb24pKTtcbn1cblxuLy8gQXBwbHkgYW55IG51bWJlciBvZiBhbmltYXRpb24gZmlsbCBtb2Rlcy5cbkBtaXhpbiBhbmltYXRpb24tZmlsbC1tb2RlKCRtb2RlLi4uKSB7XG4gICRtb2RlOiBzZXQtYXJnbGlzdC1kZWZhdWx0KCRtb2RlLCAkZGVmYXVsdC1hbmltYXRpb24tZmlsbC1tb2RlKTtcbiAgQGluY2x1ZGUgYW5pbWF0aW9uLXByb3BlcnRpZXMoKGFuaW1hdGlvbi1maWxsLW1vZGU6ICRtb2RlKSk7XG59XG5cbi8vIEFwcGx5IGFueSBudW1iZXIgb2YgYW5pbWF0aW9uIHBsYXkgc3RhdGVzLlxuQG1peGluIGFuaW1hdGlvbi1wbGF5LXN0YXRlKCRzdGF0ZS4uLikge1xuICAkc3RhdGU6IHNldC1hcmdsaXN0LWRlZmF1bHQoJHN0YXRlLCAkZGVmYXVsdC1hbmltYXRpb24tcGxheS1zdGF0ZSk7XG4gIEBpbmNsdWRlIGFuaW1hdGlvbi1wcm9wZXJ0aWVzKChhbmltYXRpb24tcGxheS1zdGF0ZTogJHN0YXRlKSk7XG59XG5cbi8vIEBwcml2YXRlXG5AZnVuY3Rpb24gZGVmYXVsdC1hbmltYXRpb24oKSB7XG4gIEByZXR1cm4gY29tcGFjdCgkZGVmYXVsdC1hbmltYXRpb24tbmFtZVxuICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtYW5pbWF0aW9uLWR1cmF0aW9uXG4gICAgICAgICAgICAgICAgICAkZGVmYXVsdC1hbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uXG4gICAgICAgICAgICAgICAgICAkZGVmYXVsdC1hbmltYXRpb24tZGVsYXlcbiAgICAgICAgICAgICAgICAgICRkZWZhdWx0LWFuaW1hdGlvbi1pdGVyYXRpb24tY291bnRcbiAgICAgICAgICAgICAgICAgICRkZWZhdWx0LWFuaW1hdGlvbi1kaXJlY3Rpb25cbiAgICAgICAgICAgICAgICAgICRkZWZhdWx0LWFuaW1hdGlvbi1maWxsLW1vZGVcbiAgICAgICAgICAgICAgICAgICRkZWZhdWx0LWFuaW1hdGlvbi1wbGF5LXN0YXRlKTtcbn1cblxuLy8gU2hvcnRjdXQgdG8gYXBwbHkgYW55IG51bWJlciBvZiBhbmltYXRpb25zIHRvIGFuIGVsZW1lbnQsIHdpdGggYWxsIHRoZSBzZXR0aW5ncy5cbi8vXG4vLyAgICAgJGFuaW1hdGlvbi4uLiA6IE5hbWUgYW5kIHNldHRpbmdzLiBbPHZhbHVlcz4gfCBkZWZhdWx0XVxuQG1peGluIGFuaW1hdGlvbigkYW5pbWF0aW9uLi4uKSB7XG4gICRhbmltYXRpb246IGlmKGxlbmd0aCgkYW5pbWF0aW9uKSA+IDAsICRhbmltYXRpb24sIGRlZmF1bHQtYW5pbWF0aW9uKCkpO1xuICBAaW5jbHVkZSBhbmltYXRpb24tcHJvcGVydGllcygoYW5pbWF0aW9uOiAkYW5pbWF0aW9uKSk7XG59XG4iLCIvLyBCb3ggU2hhZG93XG5cbkBpbXBvcnQgXCJjb21wYXNzL3N1cHBvcnRcIjtcblxuLy8gVGhlIHByZWZpeGVkIHN1cHBvcnQgdGhyZXNob2xkIGZvciBib3gtc2hhZG93LlxuLy8gRGVmYXVsdHMgdG8gdGhlICRncmFjZWZ1bC11c2FnZS10aHJlc2hvbGQuXG4kYm94LXNoYWRvdy1zdXBwb3J0LXRocmVzaG9sZDogJGdyYWNlZnVsLXVzYWdlLXRocmVzaG9sZCAhZGVmYXVsdDtcblxuXG4vLyBUaGUgZGVmYXVsdCBjb2xvciBmb3IgYm94IHNoYWRvd3NcbiRkZWZhdWx0LWJveC1zaGFkb3ctY29sb3I6ICMzMzMzMzMgIWRlZmF1bHQ7XG5cbi8vIFRoZSBkZWZhdWx0IGhvcml6b250YWwgb2Zmc2V0LiBQb3NpdGl2ZSBpcyB0byB0aGUgcmlnaHQuXG4kZGVmYXVsdC1ib3gtc2hhZG93LWgtb2Zmc2V0OiAwcHggIWRlZmF1bHQ7XG5cbi8vIFRoZSBkZWZhdWx0IHZlcnRpY2FsIG9mZnNldC4gUG9zaXRpdmUgaXMgZG93bi5cbiRkZWZhdWx0LWJveC1zaGFkb3ctdi1vZmZzZXQ6IDBweCAhZGVmYXVsdDtcblxuLy8gVGhlIGRlZmF1bHQgYmx1ciBsZW5ndGguXG4kZGVmYXVsdC1ib3gtc2hhZG93LWJsdXI6IDVweCAhZGVmYXVsdDtcblxuLy8gVGhlIGRlZmF1bHQgc3ByZWFkIGxlbmd0aC5cbiRkZWZhdWx0LWJveC1zaGFkb3ctc3ByZWFkOiBudWxsICFkZWZhdWx0O1xuXG4vLyBUaGUgZGVmYXVsdCBzaGFkb3cgaW5zZXQ6IGluc2V0IG9yIG51bGwgKGZvciBzdGFuZGFyZCBzaGFkb3cpLlxuJGRlZmF1bHQtYm94LXNoYWRvdy1pbnNldDogbnVsbCAhZGVmYXVsdDtcblxuQGZ1bmN0aW9uIGRlZmF1bHQtYm94LXNoYWRvdygpIHtcbiAgQHJldHVybiBjb21wYWN0KGlmKCRkZWZhdWx0LWJveC1zaGFkb3ctaW5zZXQsIGluc2V0LCBudWxsKVxuICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtYm94LXNoYWRvdy1oLW9mZnNldFxuICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtYm94LXNoYWRvdy12LW9mZnNldFxuICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtYm94LXNoYWRvdy1ibHVyXG4gICAgICAgICAgICAgICAgICAkZGVmYXVsdC1ib3gtc2hhZG93LXNwcmVhZFxuICAgICAgICAgICAgICAgICAgJGRlZmF1bHQtYm94LXNoYWRvdy1jb2xvcik7XG59XG5cbi8vIFByb3ZpZGVzIGNyb3NzLWJyb3dzZXIgZm9yIFdlYmtpdCwgR2Vja28sIGFuZCBDU1MzIGJveCBzaGFkb3dzXG4vLyB3aGVuIG9uZSBvciBtb3JlIGJveCBzaGFkb3dzIGFyZSBuZWVkZWQuXG4vLyBFYWNoIHNoYWRvdyBhcmd1bWVudCBzaG91bGQgYWRoZXJlIHRvIHRoZSBzdGFuZGFyZCBjc3MzIHN5bnRheFxuLy8gZm9yIHRoZSBib3gtc2hhZG93IHByb3BlcnR5LlxuQG1peGluIGJveC1zaGFkb3coJHNoYWRvdy4uLikge1xuICAkc2hhZG93OiBzZXQtYXJnbGlzdC1kZWZhdWx0KCRzaGFkb3csIGRlZmF1bHQtYm94LXNoYWRvdygpKTtcbiAgQGluY2x1ZGUgcHJlZml4ZWQtcHJvcGVydGllcyhjc3MtYm94c2hhZG93LCAkYm94LXNoYWRvdy1zdXBwb3J0LXRocmVzaG9sZCwgKGJveC1zaGFkb3c6ICRzaGFkb3cpKTtcbn1cblxuLy8gUHJvdmlkZXMgYSBzaW5nbGUgY3Jvc3MtYnJvd3NlciBDU1MgYm94IHNoYWRvdyBmb3IgV2Via2l0LCBHZWNrbywgYW5kIENTUzMuXG4vLyBJbmNsdWRlcyBkZWZhdWx0IGFyZ3VtZW50cyBmb3IgY29sb3IsIGhvcml6b250YWwgb2Zmc2V0LCB2ZXJ0aWNhbCBvZmZzZXQsIGJsdXIgbGVuZ3RoLCBzcHJlYWQgbGVuZ3RoLCBhbmQgaW5zZXQuXG5AbWl4aW4gc2luZ2xlLWJveC1zaGFkb3coXG4gICRob2ZmICAgOiBudWxsLFxuICAkdm9mZiAgIDogbnVsbCxcbiAgJGJsdXIgICA6IG51bGwsXG4gICRzcHJlYWQgOiBudWxsLFxuICAkY29sb3IgIDogbnVsbCxcbiAgJGluc2V0ICA6ICRkZWZhdWx0LWJveC1zaGFkb3ctaW5zZXRcbikge1xuICAvLyBIYW5kbGUgbGVnYWN5IGFyZ3VtZW50IG9yZGVyXG4gIEBpZiBub3QgKCRob2ZmID09IG5vbmUgb3IgJGhvZmYgPT0gbnVsbCkgYW5kIHR5cGUtb2YoJGhvZmYpICE9IG51bWJlciB7XG4gICAgQHdhcm4gXCJUaGUgJGNvbG9yIGFyZ3VtZW50IGZvciBzaW5nbGUtYm94LXNoYWRvdyBpcyBub3cgdGhlIDV0aCBhcmd1bWVudCBpbnN0ZWFkIG9mIHRoZSAxc3QuXCI7XG4gICAgJHRtcC1jb2xvcjogJGNvbG9yO1xuICAgICRjb2xvcjogJGhvZmY7XG4gICAgJGhvZmY6ICR2b2ZmO1xuICAgICR2b2ZmOiAkYmx1cjtcbiAgICAkYmx1cjogJHNwcmVhZDtcbiAgICAkc3ByZWFkOiAkdG1wLWNvbG9yXG4gIH1cblxuICAvLyBOZWVkIHRvIHNldCB0aGVzZSBkZWZhdWx0cyBoZXJlIGluc3RlYWQgb2YgdGhlIGFyZ2xpc3QgdG8gc3VwcG9ydCB0aGUgYWJvdmUgYmFja3dhcmRzIGNvbXBhdCBoYW5kbGluZ1xuICBAaWYgJGhvZmYgICA9PSBudWxsIHsgJGhvZmY6ICAgJGRlZmF1bHQtYm94LXNoYWRvdy1oLW9mZnNldDsgfVxuICBAaWYgJHZvZmYgICA9PSBudWxsIHsgJGhvZmY6ICAgJGRlZmF1bHQtYm94LXNoYWRvdy12LW9mZnNldDsgfVxuICBAaWYgJGJsdXIgICA9PSBudWxsIHsgJGJsdXI6ICAgJGRlZmF1bHQtYm94LXNoYWRvdy1ibHVyOyAgICAgfVxuICBAaWYgJHNwcmVhZCA9PSBudWxsIHsgJHNwcmVhZDogJGRlZmF1bHQtYm94LXNoYWRvdy1zcHJlYWQ7ICAgfVxuICBAaWYgJGNvbG9yICA9PSBudWxsIHsgJGNvbG9yOiAgJGRlZmF1bHQtYm94LXNoYWRvdy1jb2xvcjsgICAgfVxuXG4gIEBpZiBub3QgKCRpbnNldCA9PSB0cnVlIG9yICRpbnNldCA9PSBmYWxzZSBvciAkaW5zZXQgPT0gbnVsbCBvciAkaW5zZXQgPT0gaW5zZXQpIHtcbiAgICBAd2FybiBcIiRpbnNldCBleHBlY3RlZCB0byBiZSB0cnVlIG9yIHRoZSBpbnNldCBrZXl3b3JkLiBHb3QgI3skaW5zZXR9IGluc3RlYWQuIFVzaW5nOiBpbnNldFwiO1xuICB9XG5cbiAgQGlmICRob2ZmID09IG5vbmUge1xuICAgIEBpbmNsdWRlIGJveC1zaGFkb3cobm9uZSk7XG4gIH0gQGVsc2Uge1xuICAgICRmdWxsICAgOiAkaG9mZiAkdm9mZjtcbiAgICBAaWYgJGJsdXIgICB7ICRmdWxsOiAkZnVsbCAkYmx1cjsgICB9XG4gICAgQGlmICRzcHJlYWQgeyAkZnVsbDogJGZ1bGwgJHNwcmVhZDsgfVxuICAgIEBpZiAkY29sb3IgIHsgJGZ1bGw6ICRmdWxsICRjb2xvcjsgIH1cbiAgICBAaWYgJGluc2V0ICB7ICRmdWxsOiBpbnNldCAkZnVsbDsgICB9XG4gICAgQGluY2x1ZGUgYm94LXNoYWRvdygkZnVsbCk7XG4gIH1cbn1cbiIsbnVsbCxudWxsLG51bGwsbnVsbCwiLy8gQmFja2dyb3VuZCBTaXplXG5AaW1wb3J0IFwiY29tcGFzcy9zdXBwb3J0XCI7XG5cbi8vIFRoZSB0aGUgdXNlciB0aHJlc2hvbGQgZm9yIGJhY2tncm91bmQtY2xpcCBzdXBwb3J0LiBEZWZhdWx0cyB0byBgJGNyaXRpY2FsLXVzYWdlLXRocmVzaG9sZGBcbiRiYWNrZ3JvdW5kLXNpemUtdGhyZXNob2xkOiAkY3JpdGljYWwtdXNhZ2UtdGhyZXNob2xkICFkZWZhdWx0O1xuXG4vLyAgb3ZlcnJpZGUgdG8gY2hhbmdlIHRoZSBkZWZhdWx0XG4kZGVmYXVsdC1iYWNrZ3JvdW5kLXNpemU6IDEwMCUgYXV0byAhZGVmYXVsdDtcblxuXG4vLyBTZXQgdGhlIHNpemUgb2YgYmFja2dyb3VuZCBpbWFnZXMgdXNpbmcgcHgsIHdpZHRoIGFuZCBoZWlnaHQsIG9yIHBlcmNlbnRhZ2VzLlxuLy8gQ3VycmVudGx5IHN1cHBvcnRlZCBpbjogT3BlcmEsIEdlY2tvLCBXZWJraXQuXG4vL1xuLy8gKiBwZXJjZW50YWdlcyBhcmUgcmVsYXRpdmUgdG8gdGhlIGJhY2tncm91bmQtb3JpZ2luIChkZWZhdWx0ID0gcGFkZGluZy1ib3gpXG4vLyAqIG1peGluIGRlZmF1bHRzIHRvOiBgJGRlZmF1bHQtYmFja2dyb3VuZC1zaXplYFxuQG1peGluIGJhY2tncm91bmQtc2l6ZSgkc2l6ZS4uLikge1xuICAkc2l6ZTogc2V0LWFyZ2xpc3QtZGVmYXVsdCgkc2l6ZSwgJGRlZmF1bHQtYmFja2dyb3VuZC1zaXplKTtcbiAgQGluY2x1ZGUgcHJlZml4ZWQtcHJvcGVydGllcyhiYWNrZ3JvdW5kLWltZy1vcHRzLCAkYmFja2dyb3VuZC1zaXplLXRocmVzaG9sZCwgKGJhY2tncm91bmQtc2l6ZTogJHNpemUpKTtcbn1cbiIsbnVsbCwiLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IFZhcmlhYmxlc1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBEZWZhdWx0IEZlYXR1cmVzXG4kYnJlYWtwb2ludC1kZWZhdWx0LW1lZGlhOiAgICAgIGFsbCAhZGVmYXVsdDtcbiRicmVha3BvaW50LWRlZmF1bHQtZmVhdHVyZTogICAgbWluLXdpZHRoICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtZGVmYXVsdC1wYWlyOiAgICAgICB3aWR0aCAhZGVmYXVsdDtcblxuLy8gRGVmYXVsdCBUcmFuc2Zvcm1zXG4kYnJlYWtwb2ludC1mb3JjZS1tZWRpYS1hbGw6ICAgIGZhbHNlICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtdG8tZW1zOiAgICAgICAgICAgICBmYWxzZSAhZGVmYXVsdDtcbiRicmVha3BvaW50LXJlc29sdXRpb25zOiAgICAgICAgdHJ1ZSAhZGVmYXVsdDtcblxuLy8gRGVmYXVsdCBObyBRdWVyeSBPcHRpb25zXG4kYnJlYWtwb2ludC1uby1xdWVyaWVzOiAgICAgICAgIGZhbHNlICFkZWZhdWx0O1xuJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzOiBmYWxzZSAhZGVmYXVsdDtcblxuLy8gRGVmdGF1bHQgQmFzZSBGb250IFNpemVcbiRicmVha3BvaW50LWJhc2UtZm9udC1zaXplOiAgICAgMTZweCAhZGVmYXVsdDtcblxuLy8gTGVnYWN5IFN5bnRheCBTdXBwb3J0XG4kYnJlYWtwb2ludC1sZWdhY3ktc3ludGF4OiAgICAgIGZhbHNlICFkZWZhdWx0O1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIEltcG9ydHNcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuQGltcG9ydCAnYnJlYWtwb2ludC9jb250ZXh0JztcbkBpbXBvcnQgJ2JyZWFrcG9pbnQvaGVscGVycyc7XG5AaW1wb3J0ICdicmVha3BvaW50L3BhcnNlcnMnO1xuQGltcG9ydCAnYnJlYWtwb2ludC9uby1xdWVyeSc7XG5cbkBpbXBvcnQgJ2JyZWFrcG9pbnQvcmVzcG9uZC10byc7XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gQnJlYWtwb2ludCBNaXhpblxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbkBtaXhpbiBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICAvLyBSZXNldCBjb250ZXh0c1xuICBAaW5jbHVkZSBwcml2YXRlLWJyZWFrcG9pbnQtcmVzZXQtY29udGV4dHMoKTtcblxuICAkYnJlYWtwb2ludDogYnJlYWtwb2ludCgkcXVlcnksIGZhbHNlKTtcblxuICAkcXVlcnktc3RyaW5nOiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnknKTtcbiAgJHF1ZXJ5LWZhbGxiYWNrOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnZmFsbGJhY2snKTtcblxuICAkcHJpdmF0ZS1icmVha3BvaW50LWNvbnRleHQtaG9sZGVyOiBtYXAtZ2V0KCRicmVha3BvaW50LCAnY29udGV4dCBob2xkZXInKSAhZ2xvYmFsO1xuICAkcHJpdmF0ZS1icmVha3BvaW50LXF1ZXJ5LWNvdW50OiBtYXAtZ2V0KCRicmVha3BvaW50LCAncXVlcnkgY291bnQnKSAhZ2xvYmFsO1xuXG4gIC8vIEFsbG93IGZvciBhbiBhcy1uZWVkZWQgb3ZlcnJpZGUgb3IgdXNhZ2Ugb2Ygbm8gcXVlcnkgZmFsbGJhY2suXG4gIEBpZiAkbm8tcXVlcnkgIT0gZmFsc2Uge1xuICAgICRxdWVyeS1mYWxsYmFjazogJG5vLXF1ZXJ5O1xuICB9XG5cbiAgQGlmICRxdWVyeS1mYWxsYmFjayAhPSBmYWxzZSB7XG4gICAgJGNvbnRleHQtc2V0dGVyOiBwcml2YXRlLWJyZWFrcG9pbnQtc2V0LWNvbnRleHQoJ25vLXF1ZXJ5JywgJHF1ZXJ5LWZhbGxiYWNrKTtcbiAgfVxuXG4gIC8vIFByaW50IE91dCBRdWVyeSBTdHJpbmdcbiAgQGlmIG5vdCAkYnJlYWtwb2ludC1uby1xdWVyaWVzIHtcbiAgICBAbWVkaWEgI3skcXVlcnktc3RyaW5nfSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzICE9IGZhbHNlIG9yICRicmVha3BvaW50LW5vLXF1ZXJpZXMgPT0gdHJ1ZSB7XG5cbiAgICAkdHlwZTogdHlwZS1vZigkYnJlYWtwb2ludC1uby1xdWVyeS1mYWxsYmFja3MpO1xuICAgICRwcmludDogZmFsc2U7XG5cbiAgICBAaWYgKCR0eXBlID09ICdib29sJykge1xuICAgICAgJHByaW50OiB0cnVlO1xuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ3N0cmluZycpIHtcbiAgICAgIEBpZiAkcXVlcnktZmFsbGJhY2sgPT0gJGJyZWFrcG9pbnQtbm8tcXVlcnktZmFsbGJhY2tzIHtcbiAgICAgICAgJHByaW50OiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBAZWxzZSBpZiAoJHR5cGUgPT0gJ2xpc3QnKSB7XG4gICAgICBAZWFjaCAkd3JhcHBlciBpbiAkYnJlYWtwb2ludC1uby1xdWVyeS1mYWxsYmFja3Mge1xuICAgICAgICBAaWYgJHF1ZXJ5LWZhbGxiYWNrID09ICR3cmFwcGVyIHtcbiAgICAgICAgICAkcHJpbnQ6IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBXcml0ZSBGYWxsYmFja1xuICAgIEBpZiAoJHF1ZXJ5LWZhbGxiYWNrICE9IGZhbHNlKSBhbmQgKCRwcmludCA9PSB0cnVlKSB7XG4gICAgICAkdHlwZS1mYWxsYmFjazogdHlwZS1vZigkcXVlcnktZmFsbGJhY2spO1xuXG4gICAgICBAaWYgKCR0eXBlLWZhbGxiYWNrICE9ICdib29sJykge1xuICAgICAgICAjeyRxdWVyeS1mYWxsYmFja30gJiB7XG4gICAgICAgICAgQGNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIEBlbHNlIHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgQGluY2x1ZGUgcHJpdmF0ZS1icmVha3BvaW50LXJlc2V0LWNvbnRleHRzKCk7XG59XG5cblxuQG1peGluIG1xKCRxdWVyeSwgJG5vLXF1ZXJ5OiBmYWxzZSkge1xuICBAaW5jbHVkZSBicmVha3BvaW50KCRxdWVyeSwgJG5vLXF1ZXJ5KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cbiIsIi8vIFNwYW4gU3ludGF4XG4vLyA9PT09PT09PT09PVxuXG4vLyBTcGFuIFttaXhpbl1cbi8vIC0tLS0tLS0tLS0tLVxuLy8gU2V0IGEgc3Bhbm5pbmcgZWxlbWVudCB1c2luZyBzaG9ydGhhbmQgc3ludGF4LlxuLy8gLSAkc3BhbiAgOiA8c3Bhbj5cbkBtaXhpbiBzcGFuKFxuICAkc3BhblxuKSB7XG4gICRpbnNwZWN0OiAkc3BhbjtcbiAgJHNwYW46IHBhcnNlLXNwYW4oJHNwYW4pO1xuICAkb3V0cHV0OiBzcGFuLW1hdGgoJHNwYW4pO1xuICAkbmVzdGluZzogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuICAkY2xlYXI6IHN1c3ktZ2V0KGNsZWFyLCAkc3Bhbik7XG5cbiAgJGJveDogc3VzeS1nZXQoYm94LXNpemluZywgJHNwYW4pO1xuICAkY29udGVudC1ib3g6IGlmKHN1c3ktZ2V0KGdsb2JhbC1ib3gtc2l6aW5nKSAhPSAnYm9yZGVyLWJveCcsIHRydWUsIGZhbHNlKTtcbiAgJGJveDogJGJveCBvciBpZihpcy1pbnNpZGUoJHNwYW4pIGFuZCAkY29udGVudC1ib3gsIGJvcmRlci1ib3gsIG51bGwpO1xuXG4gIEBpZiAkY2xlYXIgPT0gYnJlYWsge1xuICAgIEBpbmNsdWRlIGJyZWFrO1xuICB9IEBlbHNlIGlmICRjbGVhciA9PSBub2JyZWFrIHtcbiAgICBAaW5jbHVkZSBub2JyZWFrO1xuICB9XG5cbiAgQGluY2x1ZGUgc3VzeS1pbnNwZWN0KHNwYW4sICRpbnNwZWN0KTtcbiAgQGluY2x1ZGUgb3V0cHV0KChib3gtc2l6aW5nOiAkYm94KSk7XG4gIEBpbmNsdWRlIGZsb2F0LXNwYW4tb3V0cHV0KCRvdXRwdXQuLi4pO1xuXG4gIEBpZiB2YWxpZC1jb2x1bW5zKCRuZXN0aW5nLCBzaWxlbnQpIHtcbiAgICBAaW5jbHVkZSBuZXN0ZWQoJHNwYW4pIHsgQGNvbnRlbnQ7IH1cbiAgfSBAZWxzZSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuLy8gU3BhbiBbZnVuY3Rpb25dXG4vLyAtLS0tLS0tLS0tLS0tLS1cbi8vIFJldHVybiB0aGUgd2lkdGggb2YgYSBzcGFuLlxuLy8gLSAkc3BhbiAgOiA8c3Bhbj5cbkBmdW5jdGlvbiBzcGFuKFxuICAkc3BhblxuKSB7XG4gIEByZXR1cm4gZ2V0LXNwYW4td2lkdGgoJHNwYW4pO1xufVxuXG4vLyBTcGFuIE1hdGhcbi8vIC0tLS0tLS0tLVxuLy8gR2V0IGFsbCB0aGUgc3BhbiByZXN1bHRzLlxuLy8gLSAkc3BhbjogPG1hcD5cbkBmdW5jdGlvbiBzcGFuLW1hdGgoXG4gICRzcGFuXG4pIHtcbiAgJG5lc3QgICAgICAgICAgICAgOiBpZihzdXN5LWdldChyb2xlLCAkc3BhbikgPT0gbmVzdCwgdHJ1ZSwgZmFsc2UpO1xuICAkc3BsaXQtbmVzdCAgICAgICA6IGlmKGlzLXNwbGl0KCRzcGFuKSBhbmQgJG5lc3QsIHRydWUsIGZhbHNlKTtcbiAgJGVkZ2UgICAgICAgICAgICAgOiBnZXQtZWRnZSgkc3Bhbik7XG4gICRsb2NhdGlvbiAgICAgICAgIDogZ2V0LWxvY2F0aW9uKCRzcGFuKTtcblxuICAkZmxvYXQgICAgICAgICAgICA6IGZyb207XG4gICRwYWRkaW5nLWJlZm9yZSAgIDogbnVsbDtcbiAgJHBhZGRpbmctYWZ0ZXIgICAgOiBudWxsO1xuICAkbWFyZ2luLWJlZm9yZSAgICA6IG51bGw7XG4gICRtYXJnaW4tYWZ0ZXIgICAgIDogbnVsbDtcblxuICAvLyBjYWxjdWxhdGUgd2lkdGhzXG4gICRzcHJlYWQ6IGluZGV4KG1hcC12YWx1ZXMoJHNwYW4pLCBzcHJlYWQpO1xuICAkc3BhbjogaWYoJHNwbGl0LW5lc3QgYW5kIG5vdCgkc3ByZWFkKSwgbWFwLW1lcmdlKCRzcGFuLCAoc3ByZWFkOiB3aWRlKSksICRzcGFuKTtcbiAgJHdpZHRoOiBnZXQtc3Bhbi13aWR0aCgkc3Bhbik7XG4gICRndXR0ZXJzOiBnZXQtZ3V0dGVycygkc3Bhbik7XG5cbiAgLy8gYXBwbHkgZ3V0dGVyc1xuICBAaWYgaXMtaW5zaWRlKCRzcGFuKSB7XG4gICAgQGlmIG5vdChzdXN5LWdldChyb2xlLCAkc3BhbikpIHtcbiAgICAgICRwYWRkaW5nLWJlZm9yZTogbWFwLWdldCgkZ3V0dGVycywgYmVmb3JlKTtcbiAgICAgICRwYWRkaW5nLWFmdGVyOiBtYXAtZ2V0KCRndXR0ZXJzLCBhZnRlcik7XG4gICAgfVxuICB9IEBlbHNlIHtcbiAgICBAaWYgbm90KCRzcGxpdC1uZXN0KSB7XG4gICAgICAkbWFyZ2luLWJlZm9yZTogbWFwLWdldCgkZ3V0dGVycywgYmVmb3JlKTtcbiAgICAgICRtYXJnaW4tYWZ0ZXI6IG1hcC1nZXQoJGd1dHRlcnMsIGFmdGVyKTtcbiAgICB9XG4gIH1cblxuICAvLyBzcGVjaWFsIG1hcmdpbiBoYW5kbGluZ1xuICBAaWYgc3VzeS1nZXQob3V0cHV0LCAkc3BhbikgPT0gaXNvbGF0ZSBhbmQgJGxvY2F0aW9uIHtcbiAgICAkbWFyZ2luLWJlZm9yZTogZ2V0LWlzb2xhdGlvbigkc3Bhbik7XG4gICAgJG1hcmdpbi1hZnRlcjogLTEwMCU7XG4gIH0gQGVsc2UgaWYgJGVkZ2Uge1xuICAgICRpcy1zcGxpdDogaXMtc3BsaXQoJHNwYW4pO1xuICAgICRwb3M6IHN1c3ktZ2V0KGd1dHRlci1wb3NpdGlvbiwgJHNwYW4pO1xuXG4gICAgQGlmICRlZGdlID09IGxhc3Qge1xuICAgICAgJGZsb2F0OiBzdXN5LWdldChsYXN0LWZsb3csICRzcGFuKTtcbiAgICB9XG5cbiAgICBAaWYgbm90KCRpcy1zcGxpdCkge1xuICAgICAgQGlmICRlZGdlID09IGZ1bGwgb3IgKCRlZGdlID09IGZpcnN0IGFuZCAkcG9zID09IGJlZm9yZSkge1xuICAgICAgICAkbWFyZ2luLWJlZm9yZTogMDtcbiAgICAgIH1cbiAgICAgIEBpZiAkZWRnZSA9PSBmdWxsIG9yICgkZWRnZSA9PSBsYXN0IGFuZCAkcG9zID09IGFmdGVyKSB7XG4gICAgICAgICRtYXJnaW4tYWZ0ZXI6IDA7XG4gICAgICB9XG4gICAgfVxuXG4gIH1cblxuICBAcmV0dXJuIChcbiAgICB3aWR0aCAgICAgICAgICAgOiAkd2lkdGgsXG4gICAgZmxvYXQgICAgICAgICAgIDogJGZsb2F0LFxuICAgIG1hcmdpbi1iZWZvcmUgICA6ICRtYXJnaW4tYmVmb3JlLFxuICAgIG1hcmdpbi1hZnRlciAgICA6ICRtYXJnaW4tYWZ0ZXIsXG4gICAgcGFkZGluZy1iZWZvcmUgIDogJHBhZGRpbmctYmVmb3JlLFxuICAgIHBhZGRpbmctYWZ0ZXIgICA6ICRwYWRkaW5nLWFmdGVyLFxuICAgIGZsb3cgICAgICAgICAgICA6IHN1c3ktZ2V0KGZsb3csICRzcGFuKSxcbiAgKTtcbn1cblxuLy8gR2V0IFNwYW4gV2lkdGhcbi8vIC0tLS0tLS0tLS0tLS0tXG4vLyBSZXR1cm4gc3BhbiB3aWR0aC5cbi8vIC0gJHNwYW46IDxtYXA+XG5AZnVuY3Rpb24gZ2V0LXNwYW4td2lkdGgoXG4gICRzcGFuXG4pIHtcbiAgJHNwYW4gICAgIDogcGFyc2Utc3Bhbigkc3Bhbik7XG5cbiAgJG4gICAgICAgIDogc3VzeS1nZXQoc3BhbiwgJHNwYW4pO1xuICAkbG9jYXRpb24gOiBnZXQtbG9jYXRpb24oJHNwYW4pO1xuICAkY29sdW1ucyAgOiBzdXN5LWdldChjb2x1bW5zLCAkc3Bhbik7XG4gICRndXR0ZXJzICA6IHN1c3ktZ2V0KGd1dHRlcnMsICRzcGFuKTtcbiAgJHNwcmVhZCAgIDogc3VzeS1nZXQoc3ByZWFkLCAkc3Bhbik7XG5cbiAgJGNvbnRleHQgIDogbnVsbDtcbiAgJHNwYW4tc3VtIDogbnVsbDtcbiAgJHdpZHRoICAgIDogbnVsbDtcblxuICBAaWYgJG4gPT0gJ2Z1bGwnIHtcbiAgICAkcG9zOiBzdXN5LWdldChndXR0ZXItcG9zaXRpb24sICRzcGFuKTtcbiAgICAkcm9sZTogc3VzeS1nZXQocm9sZSwgJHNwYW4pO1xuICAgICRuOiBpZigkcG9zID09IHNwbGl0IGFuZCAkcm9sZSAhPSBuZXN0LCBzdXN5LWNvdW50KCRjb2x1bW5zKSwgMTAwJSk7XG4gIH1cblxuICBAaWYgdHlwZS1vZigkbikgIT0gbnVtYmVyIHtcbiAgICBAd2FybiBcIigje3R5cGUtb2YoJG4pfSkgI3skbn0gaXMgbm90IGEgdmFsaWQgc3Bhbi5cIjtcbiAgfSBAZWxzZSBpZiB1bml0bGVzcygkbikge1xuICAgICRjb250ZXh0OiBzdXN5LXN1bSgkY29sdW1ucywgJGd1dHRlcnMsIGlmKGlzLXNwbGl0KCRzcGFuKSwgd2lkZSwgbmFycm93KSk7XG4gICAgJHNwcmVhZDogaWYoaXMtaW5zaWRlKCRzcGFuKSwgJHNwcmVhZCBvciB3aWRlLCAkc3ByZWFkKTtcbiAgICAkc3Bhbi1zdW06IHN1c3koJG4sICRsb2NhdGlvbiwgJGNvbHVtbnMsICRndXR0ZXJzLCAkc3ByZWFkKTtcblxuICAgICRfbWF0aDogc3VzeS1nZXQobWF0aCwgJHNwYW4pO1xuICAgICRfY29sdW1uLXdpZHRoOiBzdXN5LWdldChjb2x1bW4td2lkdGgsICRzcGFuKTtcbiAgICBAaWYgJF9tYXRoID09IHN0YXRpYyB7XG4gICAgICAkd2lkdGg6ICRzcGFuLXN1bSAqIHZhbGlkLWNvbHVtbi1tYXRoKCRfbWF0aCwgJF9jb2x1bW4td2lkdGgpO1xuICAgIH0gQGVsc2Uge1xuICAgICAgJHdpZHRoOiBwZXJjZW50YWdlKCRzcGFuLXN1bSAvICRjb250ZXh0KTtcbiAgICB9XG4gIH0gQGVsc2Uge1xuICAgICR3aWR0aDogJG47XG4gIH1cblxuICBAcmV0dXJuICR3aWR0aDtcbn1cbiIsbnVsbCxudWxsLG51bGxdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ== */
