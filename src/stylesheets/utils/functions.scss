//============================================================
// Functions
//============================================================


//
// Convert font-size from px to rem with px fallback
// * @param $size - the value in pixel you want to convert
// * e.g. p {@include fontSize(12px);}
//

// Function for converting a px based font-size to rem.
@function calculateRem($size) {
  $remSize: $size / $base-font-size;
//Default font size on html element is 100%, equivalent to 16px;
  @return #{$remSize}rem;
}

@function black($opacity){
    @return rgba(0,0,0,$opacity)
};

@function white($opacity){
    @return rgba(255,255,255,$opacity)
};


// Source: https://github.com/devatrox/Sunglass/
$imgbase: "../img/" !default;

@function img($filename) {
    @return url(#{$imgbase}#{$filename});
}

// Calculate fluid ratio based on two dimensions (width/height)
// figure.fluidratio {
//   This element will have fluid ratio from 4:1 at 800px to 2:1 at 300px.
//   @include fluid-ratio(800px 200px, 300px 150px);
//   background-image: url(http://voormedia.com/examples/amsterdam.jpg);
// }
@mixin fluid-ratio($large-size, $small-size) {
  $width-large: nth($large-size, 1);
  $width-small: nth($small-size, 1);
  $height-large: nth($large-size, 2);
  $height-small: nth($small-size, 2);
  $slope: ($height-large - $height-small) / ($width-large - $width-small);
  $height: $height-small - $width-small * $slope;

  padding-top: $slope * 100%;
  height: $height;

  background-size: cover;
  -moz-background-size: cover;  /* Firefox 3.6 */
  background-position: center;  /* Internet Explorer 7/8 */
}


// An easy way to fetch a deep value in a multi-level map. Works much like
// map-get() except that you pass multiple keys as the second parameter to
// go down multiple levels in the nested map.
//
@function map-fetch($map, $keys) {
  $key: nth($keys, 1);
  $length: length($keys);
  $value: map-get($map, $key);
  @if ($length > 1) {
    $rest: ();
    @for $i from 2 through $length {
      $rest: append($rest, nth($keys, $i))
    }
    @return map-fetch($value, $rest)
  } @else {
    @return $value;
  }
}


// get  z-index from map
@function zindex($level: 'modal') {
    @return map-get($zindex, $level);
}

// .modal {
//   z-index: zindex(modal);
// }