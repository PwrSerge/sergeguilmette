@import url(http://fonts.googleapis.com/css?family=Kavoon|Wendy+One|Montserrat);

.nav-social-item, .header-name, .header-logo {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

/* ==========================================================================
   BASE
   Plain semantic HTML
   ========================================================================== */
html {
  font-size: 100%;
  line-height: 1.625em;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  z-index: 0;
  margin: 0;
  padding: 0;
  background: #f8f7f2;
  background-size: cover;
}

article {
  line-height: 1.5em;
}

h1 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 2.44141rem;
  line-height: 3.25rem;
  font-weight: 900;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 0;
  color: #3e225b;
}

h2 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.95313rem;
  line-height: 2.4375rem;
  font-weight: 700;
  border-bottom-width: 0.0625rem;
  border-bottom-style: solid;
  padding-bottom: 0.75rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #3e225b;
}

h3 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.5625rem;
  line-height: 1.625rem;
  font-weight: 400;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  color: #8cc63e;
}

h4 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1.25rem;
  line-height: 1.625rem;
  font-weight: 400;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

h5 {
  -webkit-font-feature-settings: "liga", "dlig", "onum";
  font-feature-settings: "liga", "dlig", "onum";
  font-size: 1rem;
  line-height: 1.625rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
}

p {
  font-size: 1.25rem;
  line-height: 1.625rem;
  margin-bottom: 1.625rem;
  word-break: break-word;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
  hyphens: auto;
}

small {
  font-size: 0.8rem;
  line-height: 1.21875rem;
}

a {
  text-decoration: none;
  color: inherit;
}

label {
  display: block;
  margin-bottom: 10px;
}

table {
  max-width: 100%;
  border-spacing: 0;
  border-collapse: collapse;
  background-color: transparent;
}

img,
object,
embed {
  max-width: 100%;
}

/* ==========================================================================
   TYPOGRAPHY
   ========================================================================== */
.headline {
  line-height: 1.2;
  margin-top: 0;
}

.txt-left {
  text-align: left;
}

.txt-right {
  text-align: right;
}

.txt-center {
  text-align: center;
}

/* ==========================================================================
   MODAL
   ========================================================================== */
.modal-overlay {
  -moz-transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  -o-transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  -webkit-transition: opacity 0.25s ease, visibility 0.35s linear;
  -webkit-transition-delay: 0s, 0s;
  transition: opacity 0.25s ease 0s, visibility 0.35s linear;
  background-color: #fff;
  position: absolute;
  top: 0;
  margin: auto;
  opacity: 0;
  visibility: hidden;
  z-index: 40;
}

.modal-overlay.state-show {
  transition-delay: 0s;
  transition-duration: 0.2s, 0s;
  opacity: 0.7;
  visibility: visible;
}

.modal-frame {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  margin: auto;
  position: absolute;
  top: 2em;
  z-index: 50;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 100%;
  text-align: center;
  visibility: hidden;
}

.modal-frame.state-appear {
  visibility: visible;
}

.modal-frame.state-appear .modal-inset {
  -webkit-animation: modalComeIn 0.25s ease;
  animation: modalComeIn 0.25s ease;
  visibility: visible;
}

.modal-frame.state-appear .modal-body {
  -webkit-transform: translateY(0) scale(1, 1);
  transform: translateY(0) scale(1, 1);
  opacity: 1;
}

.modal-frame.state-leave {
  visibility: visible;
}

.modal-frame.state-leave .modal-inset {
  -webkit-animation: modalHeadOut 0.35s ease 0.1s;
  animation: modalHeadOut 0.35s ease 0.1s;
  visibility: visible;
}

.modal-frame.state-leave .modal-body {
  transition-delay: 0s;
  transition-duration: 0.35s;
  transition-timing-function: ease;
  -webkit-transform: translateY(25px);
  transform: translateY(25px);
  opacity: 0;
}

@-moz-document url-prefix() {
  .modal-frame {
    height: calc(100% - 55px);
  }
}

.modal {
  display: block;
  vertical-align: middle;
  text-align: center;
}

.modal-inset {
  box-shadow: 2px 2px 8px 1px rgba(0, 0, 0, 0.2);
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden;
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0);
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
  position: relative;
  padding: 60px;
  background-color: #fff;
  min-width: 320px;
  min-height: 126px;
  margin: auto;
  visibility: hidden;
}

.modal-inset .close {
  display: block;
  cursor: pointer;
  position: absolute;
  top: 10px;
  right: 10px;
  padding: 10px;
  opacity: 0.4;
}

.modal-inset .close:hover {
  opacity: 1;
}

.modal-body {
  -webkit-transform: translateY(0) scale(0.8, 0.8);
  transform: translateY(0) scale(0.8, 0.8);
  transition-property: opacity, -webkit-transform;
  transition-property: opacity, transform;
  transition-property: opacity, transform, -webkit-transform;
  transition-duration: 0.25s;
  transition-delay: 0.1s;
  margin: auto;
  opacity: 0;
}

.modal-body h3 {
  font-weight: 700;
  padding-bottom: 22px;
  display: block;
  text-align: center;
}

@-webkit-keyframes modalComeIn {
  0% {
    -webkit-transform: scale(0.8, 0.8);
    transform: scale(0.8, 0.8);
    visibility: hidden;
    opacity: 0;
  }

  65.5% {
    -webkit-transform: scale(1.03, 1.03);
    transform: scale(1.03, 1.03);
  }

  100% {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    visibility: visible;
    opacity: 1;
  }
}

@keyframes modalComeIn {
  0% {
    -webkit-transform: scale(0.8, 0.8);
    transform: scale(0.8, 0.8);
    visibility: hidden;
    opacity: 0;
  }

  65.5% {
    -webkit-transform: scale(1.03, 1.03);
    transform: scale(1.03, 1.03);
  }

  100% {
    -webkit-transform: scale(1, 1);
    transform: scale(1, 1);
    visibility: visible;
    opacity: 1;
  }
}

@-webkit-keyframes modalHeadOut {
  0% {
    -webkit-transform: translateY(0) scale(1, 1);
    transform: translateY(0) scale(1, 1);
    visibility: visible;
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(35px) scale(0.97, 0.97);
    transform: translateY(35px) scale(0.97, 0.97);
    visibility: hidden;
    opacity: 0;
  }
}

@keyframes modalHeadOut {
  0% {
    -webkit-transform: translateY(0) scale(1, 1);
    transform: translateY(0) scale(1, 1);
    visibility: visible;
    opacity: 1;
  }

  100% {
    -webkit-transform: translateY(35px) scale(0.97, 0.97);
    transform: translateY(35px) scale(0.97, 0.97);
    visibility: hidden;
    opacity: 0;
  }
}
/* ==========================================================================
   FORMS
   ========================================================================== */
label {
  font-size: 1.25rem;
  line-height: 1.625rem;
  font-weight: 700;
  color: #3e225b;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  margin: 1em 0;
}

input,
textarea {
  font-size: 1.25rem;
  line-height: 1.625rem;
  width: 100%;
  color: #2c3643;
}

/*
    Basic form layouts
   ========================================================================== */
.field-group {
  font-size: 1rem;
  line-height: 1.625rem;
  margin-bottom: 1em;
}

.field-label {
  display: block;
}

.field-instructions {
  font-size: 0.8rem;
  line-height: 1.21875rem;
  float: none;
  clear: both;
  color: #99a9b3;
}

.field-instructions a {
  color: #99a9b3;
  text-decoration: underline;
}

/* ==========================================================================
   BUTTONS
   ========================================================================== */
button {
  border: 0;
}

.btn {
  font-size: 1rem;
  line-height: 1.625rem;
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  position: relative;
  display: inline-block;
  margin: 0;
  padding: 5px 10px;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-align: center;
  vertical-align: middle;
  white-space: nowrap;
  text-decoration: none;
  color: #fff;
  border: 0;
  border-radius: 5px;
  background: #3e225b;
}

.btn:hover {
  background: #8cc63e;
}

.btn:focus, .btn:active {
  background: #cff898;
}

.btn:disabled, .btn.is-disabled {
  cursor: default;
  color: #fff;
  background: #3b444f;
}

.btn::-moz-focus-inner {
  padding: 0;
  border: 0;
}

.btn-full {
  display: block;
  width: 100%;
}

.btn-medium {
  font-size: 1.25rem;
  line-height: 1.625rem;
}

.btn-large {
  font-size: 1.5625rem;
  line-height: 1.625rem;
}

.btn-brand {
  color: #fff;
  background: #206fac;
}

.btn-brand:hover {
  background: #1d508d;
}

.btn-highlight {
  color: #3b444f;
  background: #feef6d;
}

.btn-highlight:hover {
  background: #ffc83c;
}

.btn-neutral {
  color: #2c3643;
  background: #99a9b3;
}

.btn-neutral:hover {
  background: #dbe6ec;
}

/* ==========================================================================
   MEDIA
   ========================================================================== */
/**
 * Retina.
 * @reference http://www.brettjankord.com/2012/11/28/cross-browser-retinahigh-resolution-media-queries/
 */
/* 1.25 dpr */
/* Retina-specific stuff here */
/* 1.3 dpr */
/* Retina-specific stuff here */
/* 1.5 dpr */
/* Retina-specific stuff here */
/*2.0 dpr */
/* Retina-specific stuff here */
/* Ported from @stubbornella */
.media {
  overflow: hidden;
}

.media-ext {
  float: right;
}

.media-obj {
  float: left;
}

.media-obj img {
  display: block;
}

.media-bd {
  overflow: hidden;
}

/* Flexible media styles  (videos, ifram, object) */
/*! suit-flex-embed v1.4.0 | MIT License | github.com/suitcss */
.flexembed {
  display: block;
  overflow: hidden;
  position: relative;
}

.flexembed:before {
  content: '';
  display: block;
  width: 100%;
}

.flexembed-3by1:before {
  padding-bottom: 33.33333%;
}

.flexembed-2by1:before {
  padding-bottom: 50%;
}

.flexembed-16by9:before {
  padding-bottom: 56.25%;
}

.flexembed-4by3:before {
  padding-bottom: 75%;
}

.coverimage {
  background-position: 50%;
  background-repeat: no-repeat;
  background-size: cover;
  margin: 0 auto 1em;
  max-height: 600px;
  max-width: 600px;
}

.flex-container-centered {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-it {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
}

.flex-row {
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
}

.flex-col {
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.flex-align-between {
  -webkit-align-content: space-between;
  -ms-flex-line-pack: justify;
  align-content: space-between;
}

.flex-align-center {
  -webkit-align-content: center;
  -ms-flex-line-pack: center;
  align-content: center;
}

.flex-align-start {
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-align-item-start {
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
}

.flex-align-item-center {
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
}

.flex-start-all {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: flex-start;
  -ms-flex-align: start;
  align-items: flex-start;
  -webkit-align-content: flex-start;
  -ms-flex-line-pack: start;
  align-content: flex-start;
}

.flex-align-item-stretch {
  -webkit-align-items: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

.flex-justify-between {
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.flex-justify-center {
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-justify-start {
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
}

.flex-justify-end {
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
}

.flex-wrap {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.flex-item-auto {
  -webkit-flex-basis: auto;
  -ms-flex-preferred-size: auto;
  flex-basis: auto;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

/* ==========================================================================
   IMAGES
   ========================================================================== */
.cover {
  background-size: cover;
}

.contain {
  background-size: contain;
}

.ui-img,
.no-bleed:after {
  background-image: url("../image//sprites/sprite.svg");
  background-repeat: no-repeat;
}

.no-svg .ui-img, .no-svg
  .no-bleed:after {
  background-image: url("../image//ui-separate-std-sprite.png");
}

.no-bleed {
  position: relative;
}

.no-bleed:after {
  position: absolute;
  top: 0;
  left: 0;
  display: block;
  width: 260px;
  height: 380px;
  content: ' ';
  background-position: 0 0;
  background-size: 380px;
}

/*
   Utiliy class for SVG
   ========================================================================== */
.my-svg-container {
  position: relative;
  width: 10%;
  height: 0;
  padding-top: 10%;
}

.my-svg {
  position: absolute;
  top: 0;
  left: 0;
}

.hex1 {
  width: 3em;
  height: 3em;
  stroke: #8cc63e;
  fill: #8cc63e;
  stroke-width: 25;
  stroke-linejoin: round;
  stroke-miterlimit: 50;
}

.icon {
  width: 1em;
  height: 1em;
}

.icon-small {
  width: 0.5em;
  height: 0.5em;
}

.icon-big {
  width: 1.5em;
  height: 1.5em;
}

.icon-primary {
  fill: #9362c4;
  color: #3e225b;
}

.icon-secondary {
  fill: #f8f7f2;
  color: #8cc63e;
}

/* ==========================================================================
   GRID
   ========================================================================== */
/*
   Small - Mobile first approach
   ========================================================================== */
.header-wrapper {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

.header-title {
  width: 66.66667%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
  margin-left: 9.16667%;
}

.nav-toggle {
  width: 16.66667%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

.nav-main {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

main {
  width: 83.33333%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
  margin-right: 9.16667%;
  margin-left: 9.16667%;
}

footer {
  width: 100%;
  float: left;
  padding-left: 0.83333%;
  padding-right: 0.83333%;
}

/*
   Medium
   ========================================================================== */
@media (min-width: 43.75em) {
  .header-container {
    width: 100%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
  }

  .header-wrapper {
    width: 25%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-left: 8.33333%;
  }

  .nav-main {
    width: 58.33333%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-right: 8.33333%;
  }

  main {
    width: 66.66667%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-right: 17.5%;
    margin-left: 17.5%;
  }

  .footer-main {
    width: 66.66667%;
    float: left;
    padding-left: 0.83333%;
    padding-right: 0.83333%;
    margin-right: 17.5%;
    margin-left: 17.5%;
  }
}
/*
   large
   ========================================================================== */
@media (min-width: 78.125em) {
  .header-container {
    width: 100%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
  }

  .header-wrapper {
    width: 33.33333%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-left: 8.33333%;
  }

  .nav-main {
    width: 33.33333%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 4.16667%;
    margin-left: 4.16667%;
  }

  .nav-social-list {
    width: 16.66667%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 8.33333%;
  }

  main {
    width: 50%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 25%;
    margin-left: 25%;
  }

  .footer-main {
    width: 50%;
    float: left;
    padding-left: 0.41667%;
    padding-right: 0.41667%;
    margin-right: 25%;
    margin-left: 25%;
  }
}
/* ==========================================================================
   NAVIGATION
   ========================================================================== */
.nav-toggle {
  color: #9362c4;
  display: inline-block;
  float: right;
  padding-top: 2em;
  position: relative;
  cursor: pointer;
  background-color: #0e0e0e;
  z-index: inherit;
}

@media (min-width: 43.75em) {
  .nav-toggle {
    display: none;
  }
}

.nav-main {
  position: relative;
  background-color: #3e225b;
  z-index: 4000;
  margin: 0;
  padding: 0;
}

@media (min-width: 43.75em) {
  .nav-main {
    background-color: inherit;
  }
}

.nav-main-list {
  list-style: none;
  color: #fff;
  text-align: center;
  padding: 0;
  margin: 0;
}

@media (min-width: 43.75em) {
  .nav-main-list {
    line-height: 6em;
    display: inline-block;
    vertical-align: middle;
    float: right;
    height: 6em;
    color: #9362c4;
  }
}

@media (min-width: 78.125em) {
  .nav-main-list {
    margin: auto;
  }
}

.nav-main-item {
  font-size: 1rem;
  line-height: 1.625rem;
  padding: 1em 0;
}

@media (max-width: 43.75em) {
  .nav-main-item {
    background-color: #3e225b;
  }

  .nav-main-item:hover {
    background-color: #8cc63e;
  }
}

@media (min-width: 43.75em) {
  .nav-main-item {
    display: inline-block;
    padding: 0.5em;
    background-color: #0e0e0e;
    position: relative;
  }

  .nav-main-item:after {
    display: block;
    position: absolute;
    left: 0;
    bottom: 15%;
    width: 0;
    height: 1px;
    background-color: #8cc63e;
    content: '';
    transition: width 0.5s;
  }

  .nav-main-item:hover:after {
    width: 100%;
  }
}

.nav-social-list {
  margin: 0;
  padding: 0;
  list-style: none;
  overflow: hidden;
  color: #fff;
  content: none;
  display: none;
}

@media (min-width: 78.125em) {
  .nav-social-list {
    display: inline-block;
    vertical-align: middle;
    float: right;
    height: 6em;
    color: #9362c4;
  }
}

.nav-social-item {
  content: none;
}

@media (min-width: 43.75em) {
  .nav-social-item {
    display: inline-block;
    padding: 0.5em;
    background-color: #0e0e0e;
    position: relative;
    transition: color 0.5s;
  }

  .nav-social-item:hover {
    color: #8cc63e;
  }
}

/*
   Flex Navigation
   ========================================================================== */
.flex-nav {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
}

.flex-nav-item, .flex-nav-item--search {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 5px 10px;
  border-left: 1px solid #3b444f;
  background-color: #99a9b3;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.flex-nav-item:hover {
  background-color: #140b1d;
}

.flex-nav-item--search {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.flex-nav-item--search label {
  display: block;
  width: 100%;
  max-width: 500px;
  margin: 0 auto;
}

.flex-nav-item--search input {
  box-sizing: border-box;
  display: block;
  width: 100%;
}

/* ==========================================================================
   FOOTER
   ========================================================================== */
footer {
  background: #0e0e0e;
}

.footer-main {
  position: relative;
  overflow: hidden;
  padding: 1em;
}

/* ==========================================================================
   HEADER
   ========================================================================== */
.header-container {
  font-family: "Montserrat", "Helvetica Neue", Helvetica, Arial, sans-serif;
  height: 6em;
  background-color: #0e0e0e;
}

.header-wrapper {
  height: 6em;
  background-color: inherit;
  position: relative;
  z-index: 6000;
}

.header-title {
  height: 6em;
  position: relative;
  z-index: inherit;
  background-color: #0e0e0e;
}

.header-name {
  font-size: 1.5625rem;
  line-height: 1.625rem;
  color: #f8f7f2;
}

@media (min-width: 78.125em) {
  .header-name {
    font-size: 1.95313rem;
    line-height: 2.4375rem;
  }
}

.header-logo {
  float: left;
  width: 3em;
  height: 3em;
  fill: #9362c4;
}

@media (min-width: 78.125em) {
  .header-logo {
    width: 4em;
    height: 4em;
  }
}

/* ==========================================================================
   SIDEBAR
   ========================================================================== */
/* ==========================================================================
   HOME
   ========================================================================== */



/*# sourceMappingURL=data:application/json;base64, */
